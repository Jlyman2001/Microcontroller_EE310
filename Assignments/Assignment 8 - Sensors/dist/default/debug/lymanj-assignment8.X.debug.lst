

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Apr 23 13:56:38 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=4,class=CODE,delta=1
    14                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 21/07/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F47K42 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   004228                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for displayNumber@F16523
    60   004228  3F                 	db	63
    61   004229  06                 	db	6
    62   00422A  5B                 	db	91
    63   00422B  4F                 	db	79
    64   00422C  66                 	db	102
    65   00422D  6D                 	db	109
    66   00422E  7D                 	db	125
    67   00422F  07                 	db	7
    68   004230  7F                 	db	127
    69   004231  6F                 	db	111
    70                           
    71                           ;initializer for _SecretCode
    72   004232  12                 	db	18
    73   000000                     _PORTBbits	set	16331
    74   000000                     _PORTDbits	set	16333
    75   000000                     _IPR1bits	set	14721
    76   000000                     _ANSELB	set	14928
    77   000000                     _ANSELD	set	14960
    78   000000                     _TRISD	set	16325
    79   000000                     _PORTB	set	16331
    80   000000                     _PORTD	set	16333
    81   000000                     _LATB	set	16315
    82   000000                     _LATD	set	16317
    83   000000                     _TRISB	set	16323
    84   000000                     _INTCON0bits	set	16338
    85   000000                     _IVTBASEL	set	16341
    86   000000                     _IVTBASEH	set	16342
    87   000000                     _IVTBASEU	set	16343
    88   000000                     _PIE1bits	set	14737
    89   000000                     _PIR1bits	set	14753
    90                           
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94   0041B6                     __pcinit:
    95                           	callstack 0
    96   0041B6                     start_initialization:
    97                           	callstack 0
    98   0041B6                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (11 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103   0041B6  0E28               	movlw	low __pidataCOMRAM
   104   0041B8  6EF6               	movwf	tblptrl,c
   105   0041BA  0E42               	movlw	high __pidataCOMRAM
   106   0041BC  6EF7               	movwf	tblptrh,c
   107   0041BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108   0041C0  6EF8               	movwf	tblptru,c
   109   0041C2  EE00  F011         	lfsr	0,__pdataCOMRAM
   110   0041C6  EE10 F00B          	lfsr	1,11
   111   0041CA                     copy_data0:
   112   0041CA  0009               	tblrd		*+
   113   0041CC  006F FFD7 FFEE     	movff	tablat,postinc0
   114   0041D2  50E5               	movf	postdec1,w,c
   115   0041D4  50E1               	movf	fsr1l,w,c
   116   0041D6  E1F9               	bnz	copy_data0
   117                           
   118                           ; Clear objects allocated to COMRAM (3 bytes)
   119   0041D8  6A1E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   120   0041DA  6A1D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   121   0041DC  6A1C               	clrf	__pbssCOMRAM& (0+255),c
   122                           
   123                           ;
   124                           ; Setup IVTBASE
   125                           ;
   126   0041DE  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   127   0041E0  6ED5               	movwf	213,c
   128   0041E2  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   129   0041E4  6ED6               	movwf	214,c
   130   0041E6  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   131   0041E8  6ED7               	movwf	215,c
   132   0041EA                     end_of_initialization:
   133                           	callstack 0
   134   0041EA                     __end_of__initialization:
   135                           	callstack 0
   136   0041EA  0100               	movlb	0
   137   0041EC  EF8D  F020         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	bssCOMRAM
   140   00001C                     __pbssCOMRAM:
   141                           	callstack 0
   142   00001C                     _readCode:
   143                           	callstack 0
   144   00001C                     	ds	1
   145   00001D                     _secondInput:
   146                           	callstack 0
   147   00001D                     	ds	1
   148   00001E                     _firstInput:
   149                           	callstack 0
   150   00001E                     	ds	1
   151                           
   152                           	psect	dataCOMRAM
   153   000011                     __pdataCOMRAM:
   154                           	callstack 0
   155   000011                     displayNumber@F16523:
   156                           	callstack 0
   157   000011                     	ds	10
   158   00001B                     _SecretCode:
   159                           	callstack 0
   160   00001B                     	ds	1
   161                           
   162                           	psect	cstackCOMRAM
   163   000001                     __pcstackCOMRAM:
   164                           	callstack 0
   165   000001                     ??_INT0_ISR:
   166   000001                     
   167                           ; 1 bytes @ 0x0
   168   000001                     	ds	2
   169   000003                     INT0_ISR@beeps:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x2
   173   000003                     	ds	1
   174   000004                     displayNumber@lookupTable:
   175                           	callstack 0
   176                           
   177                           ; 10 bytes @ 0x3
   178   000004                     	ds	10
   179   00000E                     displayNumber@number:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0xD
   183   00000E                     	ds	1
   184   00000F                     ??_main:
   185                           
   186                           ; 1 bytes @ 0xE
   187   00000F                     	ds	2
   188                           
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 22 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   211 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   212 ;;Total ram usage:        2 bytes
   213 ;; Hardware stack levels required when called: 3
   214 ;; This function calls:
   215 ;;		_init
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           	psect	text0
   222   00411A                     __ptext0:
   223                           	callstack 0
   224   00411A                     _main:
   225                           	callstack 28
   226   00411A                     
   227                           ;main.c: 23:     init();
   228   00411A  ECB8  F020         	call	_init	;wreg free
   229   00411E                     l831:
   230                           
   231                           ;main.c: 26:     {;main.c: 27:         firstInput = 0;
   232   00411E  0E00               	movlw	0
   233   004120  6E1E               	movwf	_firstInput^0,c
   234   004122                     
   235                           ;main.c: 28:         secondInput = 0;
   236   004122  0E00               	movlw	0
   237   004124  6E1D               	movwf	_secondInput^0,c
   238   004126                     
   239                           ;main.c: 30:         firstInput = 1;
   240   004126  0E01               	movlw	1
   241   004128  6E1E               	movwf	_firstInput^0,c
   242   00412A                     
   243                           ;main.c: 31:         PORTBbits.RB5 = 1;
   244   00412A  8ACB               	bsf	203,5,c	;volatile
   245   00412C                     
   246                           ;main.c: 34:         secondInput = 2;
   247   00412C  0E02               	movlw	2
   248   00412E  6E1D               	movwf	_secondInput^0,c
   249   004130                     
   250                           ;main.c: 35:         readCode = (firstInput << 4) + secondInput;
   251   004130  0E12               	movlw	18
   252   004132  6E1C               	movwf	_readCode^0,c
   253   004134                     
   254                           ;main.c: 37:         {;main.c: 38:             PORTBbits.RB4 = 1;
   255   004134  88CB               	bsf	203,4,c	;volatile
   256   004136                     
   257                           ;main.c: 39:             _delay((unsigned long)((300)*(4000000/4000.0)));
   258   004136  0E02               	movlw	2
   259   004138  6E10               	movwf	(??_main+1)^0,c
   260   00413A  0E86               	movlw	134
   261   00413C  6E0F               	movwf	??_main^0,c
   262   00413E  0E99               	movlw	153
   263   004140                     u117:
   264   004140  2EE8               	decfsz	wreg,f,c
   265   004142  D7FE               	bra	u117
   266   004144  2E0F               	decfsz	??_main^0,f,c
   267   004146  D7FC               	bra	u117
   268   004148  2E10               	decfsz	(??_main+1)^0,f,c
   269   00414A  D7FA               	bra	u117
   270   00414C  0000               	nop	
   271   00414E                     
   272                           ;main.c: 40:             PORTBbits.RB4 = 0;
   273   00414E  98CB               	bcf	203,4,c	;volatile
   274   004150                     
   275                           ;main.c: 48:         PORTBbits.RB5 = 0;
   276   004150  9ACB               	bcf	203,5,c	;volatile
   277                           
   278                           ;main.c: 49:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   279   004152  0E06               	movlw	6
   280   004154  6E10               	movwf	(??_main+1)^0,c
   281   004156  0E13               	movlw	19
   282   004158  6E0F               	movwf	??_main^0,c
   283   00415A  0EAE               	movlw	174
   284   00415C                     u127:
   285   00415C  2EE8               	decfsz	wreg,f,c
   286   00415E  D7FE               	bra	u127
   287   004160  2E0F               	decfsz	??_main^0,f,c
   288   004162  D7FC               	bra	u127
   289   004164  2E10               	decfsz	(??_main+1)^0,f,c
   290   004166  D7FA               	bra	u127
   291   004168  EF8F  F020         	goto	l831
   292   00416C  EF57  F020         	goto	start
   293   004170                     __end_of_main:
   294                           	callstack 0
   295                           
   296 ;; *************** function _init *****************
   297 ;; Defined at:
   298 ;;		line 43 in file "././functions.h"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used: 1
   318 ;; Hardware stack levels required when called: 2
   319 ;; This function calls:
   320 ;;		_displayNumber
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text1
   327   004170                     __ptext1:
   328                           	callstack 0
   329   004170                     _init:
   330                           	callstack 28
   331   004170                     
   332                           ;././functions.h: 47:     TRISD = 0;
   333   004170  0E00               	movlw	0
   334   004172  6EC5               	movwf	197,c	;volatile
   335                           
   336                           ;././functions.h: 48:     ANSELD = 0;
   337   004174  0E00               	movlw	0
   338   004176  013A               	movlb	58	; () banked
   339   004178  6F70               	movwf	112,b	;volatile
   340                           
   341                           ;././functions.h: 49:     LATD = 0;
   342   00417A  0E00               	movlw	0
   343   00417C  6EBD               	movwf	189,c	;volatile
   344                           
   345                           ;././functions.h: 50:     PORTD = 0;
   346   00417E  0E00               	movlw	0
   347   004180  6ECD               	movwf	205,c	;volatile
   348                           
   349                           ;././functions.h: 53:     TRISB = 0x0F;
   350   004182  0E0F               	movlw	15
   351   004184  6EC3               	movwf	195,c	;volatile
   352                           
   353                           ;././functions.h: 54:     ANSELB = 0;
   354   004186  0E00               	movlw	0
   355   004188  6F50               	movwf	80,b	;volatile
   356                           
   357                           ;././functions.h: 55:     LATB = 0;
   358   00418A  0E00               	movlw	0
   359   00418C  6EBB               	movwf	187,c	;volatile
   360                           
   361                           ;././functions.h: 56:     PORTB = 0;
   362   00418E  0E00               	movlw	0
   363   004190  6ECB               	movwf	203,c	;volatile
   364   004192                     
   365                           ; BSR set to: 58
   366                           ;././functions.h: 59:     INTCON0bits.IPEN = 1;
   367   004192  8AD2               	bsf	210,5,c	;volatile
   368   004194                     
   369                           ; BSR set to: 58
   370                           ;././functions.h: 60:     INTCON0bits.GIEH = 1;
   371   004194  8ED2               	bsf	210,7,c	;volatile
   372   004196                     
   373                           ; BSR set to: 58
   374                           ;././functions.h: 61:     INTCON0bits.GIEL = 1;
   375   004196  8CD2               	bsf	210,6,c	;volatile
   376   004198                     
   377                           ; BSR set to: 58
   378                           ;././functions.h: 62:     INTCON0bits.INT0EDG = 1;
   379   004198  80D2               	bsf	210,0,c	;volatile
   380   00419A                     
   381                           ; BSR set to: 58
   382                           ;././functions.h: 63:     IPR1bits.INT0IP = 1;
   383   00419A  0139               	movlb	57	; () banked
   384   00419C  8181               	bsf	129,0,b	;volatile
   385   00419E                     
   386                           ; BSR set to: 57
   387                           ;././functions.h: 64:     PIE1bits.INT0IE = 1;
   388   00419E  8191               	bsf	145,0,b	;volatile
   389   0041A0                     
   390                           ; BSR set to: 57
   391                           ;././functions.h: 65:     PIR1bits.INT0IF = 0;
   392   0041A0  91A1               	bcf	161,0,b	;volatile
   393                           
   394                           ;././functions.h: 66:     IVTBASEU = 0;
   395   0041A2  0E00               	movlw	0
   396   0041A4  6ED7               	movwf	215,c	;volatile
   397                           
   398                           ;././functions.h: 67:     IVTBASEH = 0x40;
   399   0041A6  0E40               	movlw	64
   400   0041A8  6ED6               	movwf	214,c	;volatile
   401                           
   402                           ;././functions.h: 68:     IVTBASEL = 0x08;
   403   0041AA  0E08               	movlw	8
   404   0041AC  6ED5               	movwf	213,c	;volatile
   405   0041AE                     
   406                           ; BSR set to: 57
   407                           ;././functions.h: 69:     displayNumber(0);
   408   0041AE  0E00               	movlw	0
   409   0041B0  ECF8  F020         	call	_displayNumber
   410   0041B4  0012               	return		;funcret
   411   0041B6                     __end_of_init:
   412                           	callstack 0
   413                           
   414 ;; *************** function _displayNumber *****************
   415 ;; Defined at:
   416 ;;		line 129 in file "././functions.h"
   417 ;; Parameters:    Size  Location     Type
   418 ;;  number          1    wreg     unsigned char 
   419 ;; Auto vars:     Size  Location     Type
   420 ;;  number          1   13[COMRAM] unsigned char 
   421 ;;  lookupTable    10    3[COMRAM] unsigned char [10]
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   432 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   434 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   435 ;;Total ram usage:       11 bytes
   436 ;; Hardware stack levels used: 1
   437 ;; Hardware stack levels required when called: 1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		_init
   442 ;;		_getPR1Input
   443 ;;		_getPR2Input
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text2
   448   0041F0                     __ptext2:
   449                           	callstack 0
   450   0041F0                     _displayNumber:
   451                           	callstack 28
   452                           
   453                           ;incstack = 0
   454                           ;displayNumber@number stored from wreg
   455   0041F0  6E0E               	movwf	displayNumber@number^0,c
   456   0041F2                     
   457                           ;././functions.h: 129: void displayNumber(unsigned char number);././functions.h: 130: {;
      +                          ././functions.h: 131:     if (number > 9)
   458   0041F2  0E09               	movlw	9
   459   0041F4  640E               	cpfsgt	displayNumber@number^0,c
   460   0041F6  EFFF  F020         	goto	u11
   461   0041FA  EF01  F021         	goto	u10
   462   0041FE                     u11:
   463   0041FE  EF03  F021         	goto	l773
   464   004202                     u10:
   465   004202                     
   466                           ;././functions.h: 132:     {;././functions.h: 133:         number = 0;
   467   004202  0E00               	movlw	0
   468   004204  6E0E               	movwf	displayNumber@number^0,c
   469   004206                     l773:
   470                           
   471                           ;././functions.h: 135:     unsigned char lookupTable [10] = {
   472   004206  EE20  F011         	lfsr	2,displayNumber@F16523
   473   00420A  EE10  F004         	lfsr	1,displayNumber@lookupTable
   474   00420E  0E09               	movlw	9
   475   004210                     u21:
   476   004210  006F FF6F FFE3     	movff	plusw2,plusw1
   477   004216  06E8               	decf	wreg,f,c
   478   004218  E2FB               	bc	u21
   479   00421A                     
   480                           ;././functions.h: 148:     PORTD = lookupTable[number];
   481   00421A  500E               	movf	displayNumber@number^0,w,c
   482   00421C  0F04               	addlw	low displayNumber@lookupTable
   483   00421E  6ED9               	movwf	fsr2l,c
   484   004220  6ADA               	clrf	fsr2h,c
   485   004222  50DF               	movf	indf2,w,c
   486   004224  6ECD               	movwf	205,c	;volatile
   487   004226  0012               	return		;funcret
   488   004228                     __end_of_displayNumber:
   489                           	callstack 0
   490                           
   491 ;; *************** function _INT0_ISR *****************
   492 ;; Defined at:
   493 ;;		line 73 in file "././functions.h"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  beeps           1    2[COMRAM] unsigned char 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   510 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   511 ;;Total ram usage:        3 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		Interrupt level 2
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           	psect	text3
   521   0040B4                     __ptext3:
   522                           	callstack 0
   523   0040B4                     _INT0_ISR:
   524                           	callstack 28
   525   0040B4                     
   526                           ;././functions.h: 76:     if (PIR1bits.INT0IF == 1)
   527   0040B4  0139               	movlb	57	; () banked
   528   0040B6  A1A1               	btfss	161,0,b	;volatile
   529   0040B8  EF60  F020         	goto	i2u3_41
   530   0040BC  EF62  F020         	goto	i2u3_40
   531   0040C0                     i2u3_41:
   532   0040C0  EF8C  F020         	goto	i2l49
   533   0040C4                     i2u3_40:
   534   0040C4                     
   535                           ; BSR set to: 57
   536                           ;././functions.h: 77:     {;././functions.h: 79:         for (unsigned char beeps = 0; b
      +                          eeps < 20; beeps++)
   537   0040C4  0E00               	movlw	0
   538   0040C6  6E03               	movwf	INT0_ISR@beeps^0,c
   539   0040C8                     i2l803:
   540                           
   541                           ;././functions.h: 80:         {;././functions.h: 81:             PORTDbits.RD7 = !PORTDb
      +                          its.RD7;
   542   0040C8  AECD               	btfss	205,7,c	;volatile
   543   0040CA  EF69  F020         	goto	i2u4_41
   544   0040CE  EF6D  F020         	goto	i2u4_40
   545   0040D2                     i2u4_41:
   546   0040D2  6A01               	clrf	??_INT0_ISR^0,c
   547   0040D4  2A01               	incf	??_INT0_ISR^0,f,c
   548   0040D6  EF6E  F020         	goto	i2u5_48
   549   0040DA                     i2u4_40:
   550   0040DA  6A01               	clrf	??_INT0_ISR^0,c
   551   0040DC                     i2u5_48:
   552   0040DC  3201               	rrcf	??_INT0_ISR^0,f,c
   553   0040DE  3201               	rrcf	??_INT0_ISR^0,f,c
   554   0040E0  50CD               	movf	205,w,c	;volatile
   555   0040E2  1801               	xorwf	??_INT0_ISR^0,w,c
   556   0040E4  0B7F               	andlw	-129
   557   0040E6  1801               	xorwf	??_INT0_ISR^0,w,c
   558   0040E8  6ECD               	movwf	205,c	;volatile
   559   0040EA                     
   560                           ;././functions.h: 83:             _delay((unsigned long)((250)*(4000000/4000.0)));
   561   0040EA  0E02               	movlw	2
   562   0040EC  6E02               	movwf	(??_INT0_ISR+1)^0,c
   563   0040EE  0E45               	movlw	69
   564   0040F0  6E01               	movwf	??_INT0_ISR^0,c
   565   0040F2  0EAA               	movlw	170
   566   0040F4                     i2u13_47:
   567   0040F4  2EE8               	decfsz	wreg,f,c
   568   0040F6  D7FE               	bra	i2u13_47
   569   0040F8  2E01               	decfsz	??_INT0_ISR^0,f,c
   570   0040FA  D7FC               	bra	i2u13_47
   571   0040FC  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
   572   0040FE  D7FA               	bra	i2u13_47
   573                           
   574                           ;././functions.h: 85:         }
   575   004100  2A03               	incf	INT0_ISR@beeps^0,f,c
   576   004102  0E13               	movlw	19
   577   004104  6403               	cpfsgt	INT0_ISR@beeps^0,c
   578   004106  EF87  F020         	goto	i2u6_41
   579   00410A  EF89  F020         	goto	i2u6_40
   580   00410E                     i2u6_41:
   581   00410E  EF64  F020         	goto	i2l803
   582   004112                     i2u6_40:
   583   004112                     
   584                           ;././functions.h: 86:     PIR1bits.INT0IF = 0;
   585   004112  0139               	movlb	57	; () banked
   586   004114  91A1               	bcf	161,0,b	;volatile
   587                           
   588                           ;././functions.h: 87:     PORTDbits.RD0 = 0;
   589   004116  90CD               	bcf	205,0,c	;volatile
   590   004118                     i2l49:
   591                           
   592                           ; BSR set to: 57
   593   004118  0011               	retfie		f
   594   00411A                     __end_of_INT0_ISR:
   595                           	callstack 0
   596                           
   597                           ;
   598                           ; Interrupt Vector Table @ 0x4008
   599                           ;
   600                           
   601                           	psect	ivt0x4008
   602   004008                     __pivt0x4008:
   603                           	callstack 0
   604   004008                     ivt0x4008_base:
   605                           	callstack 0
   606                           
   607                           ; Vector 0 : SWINT
   608   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
   609                           
   610                           ; Vector 1 : HLVD
   611   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
   612                           
   613                           ; Vector 2 : OSF
   614   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
   615                           
   616                           ; Vector 3 : CSW
   617   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
   618                           
   619                           ; Vector 4 : NVM
   620   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
   621                           
   622                           ; Vector 5 : SCAN
   623   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
   624                           
   625                           ; Vector 6 : CRC
   626   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
   627                           
   628                           ; Vector 7 : IOC
   629   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
   630                           
   631                           ; Vector 8 : INT0
   632   004018  102D               	dw	_INT0_ISR shr (0+2)
   633                           
   634                           ; Vector 9 : ZCD
   635   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
   636                           
   637                           ; Vector 10 : AD
   638   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
   639                           
   640                           ; Vector 11 : ADT
   641   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
   642                           
   643                           ; Vector 12 : CMP1
   644   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
   645                           
   646                           ; Vector 13 : SMT1
   647   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
   648                           
   649                           ; Vector 14 : SMT1PRA
   650   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
   651                           
   652                           ; Vector 15 : SMT1PRW
   653   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
   654                           
   655                           ; Vector 16 : DMA1SCNT
   656   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
   657                           
   658                           ; Vector 17 : DMA1DCNT
   659   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
   660                           
   661                           ; Vector 18 : DMA1OR
   662   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
   663                           
   664                           ; Vector 19 : DMA1A
   665   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
   666                           
   667                           ; Vector 20 : SPI1RX
   668   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
   669                           
   670                           ; Vector 21 : SPI1TX
   671   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
   672                           
   673                           ; Vector 22 : SPI1
   674   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
   675                           
   676                           ; Vector 23 : I2C1RX
   677   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
   678                           
   679                           ; Vector 24 : I2C1TX
   680   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
   681                           
   682                           ; Vector 25 : I2C1
   683   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
   684                           
   685                           ; Vector 26 : I2C1E
   686   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
   687                           
   688                           ; Vector 27 : U1RX
   689   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
   690                           
   691                           ; Vector 28 : U1TX
   692   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
   693                           
   694                           ; Vector 29 : U1E
   695   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
   696                           
   697                           ; Vector 30 : U1
   698   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
   699                           
   700                           ; Vector 31 : TMR0
   701   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
   702                           
   703                           ; Vector 32 : TMR1
   704   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
   705                           
   706                           ; Vector 33 : TMR1G
   707   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
   708                           
   709                           ; Vector 34 : TMR2
   710   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
   711                           
   712                           ; Vector 35 : CCP1
   713   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
   714                           
   715                           ; Vector 36 : Undefined
   716   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
   717                           
   718                           ; Vector 37 : NCO1
   719   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
   720                           
   721                           ; Vector 38 : CWG1
   722   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
   723                           
   724                           ; Vector 39 : CLC1
   725   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
   726                           
   727                           ; Vector 40 : INT1
   728   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
   729                           
   730                           ; Vector 41 : CMP2
   731   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
   732                           
   733                           ; Vector 42 : DMA2SCNT
   734   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
   735                           
   736                           ; Vector 43 : DMA2DCNT
   737   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
   738                           
   739                           ; Vector 44 : DMA2OR
   740   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
   741                           
   742                           ; Vector 45 : DMA2A
   743   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
   744                           
   745                           ; Vector 46 : I2C2RX
   746   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
   747                           
   748                           ; Vector 47 : I2C2TX
   749   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
   750                           
   751                           ; Vector 48 : I2C2
   752   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
   753                           
   754                           ; Vector 49 : I2C2E
   755   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
   756                           
   757                           ; Vector 50 : U2RX
   758   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
   759                           
   760                           ; Vector 51 : U2TX
   761   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
   762                           
   763                           ; Vector 52 : U2E
   764   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
   765                           
   766                           ; Vector 53 : U2
   767   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
   768                           
   769                           ; Vector 54 : TMR3
   770   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
   771                           
   772                           ; Vector 55 : TMR3G
   773   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
   774                           
   775                           ; Vector 56 : TMR4
   776   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
   777                           
   778                           ; Vector 57 : CCP2
   779   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
   780                           
   781                           ; Vector 58 : Undefined
   782   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
   783                           
   784                           ; Vector 59 : CWG2
   785   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
   786                           
   787                           ; Vector 60 : CLC2
   788   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
   789                           
   790                           ; Vector 61 : INT2
   791   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
   792                           
   793                           ; Vector 62 : Undefined
   794   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
   795                           
   796                           ; Vector 63 : Undefined
   797   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
   798                           
   799                           ; Vector 64 : Undefined
   800   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
   801                           
   802                           ; Vector 65 : Undefined
   803   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
   804                           
   805                           ; Vector 66 : Undefined
   806   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
   807                           
   808                           ; Vector 67 : Undefined
   809   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
   810                           
   811                           ; Vector 68 : Undefined
   812   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
   813                           
   814                           ; Vector 69 : Undefined
   815   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
   816                           
   817                           ; Vector 70 : TMR5
   818   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
   819                           
   820                           ; Vector 71 : TMR5G
   821   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
   822                           
   823                           ; Vector 72 : TMR6
   824   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
   825                           
   826                           ; Vector 73 : CCP3
   827   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
   828                           
   829                           ; Vector 74 : CWG3
   830   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
   831                           
   832                           ; Vector 75 : CLC3
   833   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
   834                           
   835                           ; Vector 76 : Undefined
   836   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
   837                           
   838                           ; Vector 77 : Undefined
   839   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
   840                           
   841                           ; Vector 78 : Undefined
   842   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
   843                           
   844                           ; Vector 79 : Undefined
   845   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
   846                           
   847                           ; Vector 80 : CCP4
   848   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
   849                           
   850                           ; Vector 81 : CLC4
   851   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
   852   0040AC                     ivt0x4008_undefint:
   853                           	callstack 0
   854   0040AC  00FF               	reset	
   855                           
   856                           	psect	smallconst
   857   002000                     __psmallconst:
   858                           	callstack 0
   859   002000  00                 	db	0
   860   002001  00                 	db	0	; dummy byte at the end
   861   000000                     
   862                           	psect	rparam
   863   000000                     
   864                           	psect	config
   865                           
   866                           ;Config register CONFIG1L @ 0x300000
   867                           ;	External Oscillator Selection
   868                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
   869                           ;	Reset Oscillator Selection
   870                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
   871   300000                     	org	3145728
   872   300000  F8                 	db	248
   873                           
   874                           ;Config register CONFIG1H @ 0x300001
   875                           ;	Clock out Enable bit
   876                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   877                           ;	PRLOCKED One-Way Set Enable bit
   878                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
   879                           ;	Clock Switch Enable bit
   880                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   881                           ;	Fail-Safe Clock Monitor Enable bit
   882                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   883   300001                     	org	3145729
   884   300001  FF                 	db	255
   885                           
   886                           ;Config register CONFIG2L @ 0x300002
   887                           ;	MCLR Enable bit
   888                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   889                           ;	Power-up timer selection bits
   890                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   891                           ;	Multi-vector enable bit
   892                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   893                           ;	IVTLOCK bit One-way set enable bit
   894                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
   895                           ;	Low Power BOR Enable bit
   896                           ;	LPBOREN = OFF, ULPBOR disabled
   897                           ;	Brown-out Reset Enable bits
   898                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   899   300002                     	org	3145730
   900   300002  FF                 	db	255
   901                           
   902                           ;Config register CONFIG2H @ 0x300003
   903                           ;	Brown-out Reset Voltage Selection bits
   904                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
   905                           ;	ZCD Disable bit
   906                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   907                           ;	PPSLOCK bit One-Way Set Enable bit
   908                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   909                           ;	Stack Full/Underflow Reset Enable bit
   910                           ;	STVREN = ON, Stack full/underflow will cause Reset
   911                           ;	Debugger Enable bit
   912                           ;	DEBUG = OFF, Background debugger disabled
   913                           ;	Extended Instruction Set Enable bit
   914                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   915   300003                     	org	3145731
   916   300003  FF                 	db	255
   917                           
   918                           ;Config register CONFIG3L @ 0x300004
   919                           ;	WDT Period selection bits
   920                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   921                           ;	WDT operating mode
   922                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   923   300004                     	org	3145732
   924   300004  9F                 	db	159
   925                           
   926                           ;Config register CONFIG3H @ 0x300005
   927                           ;	WDT Window Select bits
   928                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   929                           ;	WDT input clock selector
   930                           ;	WDTCCS = SC, Software Control
   931   300005                     	org	3145733
   932   300005  FF                 	db	255
   933                           
   934                           ;Config register CONFIG4L @ 0x300006
   935                           ;	Boot Block Size selection bits
   936                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   937                           ;	Boot Block enable bit
   938                           ;	BBEN = OFF, Boot block disabled
   939                           ;	Storage Area Flash enable bit
   940                           ;	SAFEN = OFF, SAF disabled
   941                           ;	Application Block write protection bit
   942                           ;	WRTAPP = OFF, Application Block not write protected
   943   300006                     	org	3145734
   944   300006  FF                 	db	255
   945                           
   946                           ;Config register CONFIG4H @ 0x300007
   947                           ;	Boot Block Write Protection bit
   948                           ;	WRTB = OFF, Boot Block not write-protected
   949                           ;	Configuration Register Write Protection bit
   950                           ;	WRTC = OFF, Configuration registers not write-protected
   951                           ;	Data EEPROM Write Protection bit
   952                           ;	WRTD = OFF, Data EEPROM not write-protected
   953                           ;	SAF Write protection bit
   954                           ;	WRTSAF = OFF, SAF not Write Protected
   955                           ;	Low Voltage Programming Enable bit
   956                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   957   300007                     	org	3145735
   958   300007  FF                 	db	255
   959                           
   960                           ;Config register CONFIG5L @ 0x300008
   961                           ;	PFM and Data EEPROM Code Protection bit
   962                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   963   300008                     	org	3145736
   964   300008  FF                 	db	255
   965                           
   966                           ;Config register CONFIG5H @ 0x300009
   967                           ;	unspecified, using default values
   968   300009                     	org	3145737
   969   300009  FF                 	db	255
   970                           tosu	equ	0x3FFF
   971                           tosh	equ	0x3FFE
   972                           tosl	equ	0x3FFD
   973                           stkptr	equ	0x3FFC
   974                           pclatu	equ	0x3FFB
   975                           pclath	equ	0x3FFA
   976                           pcl	equ	0x3FF9
   977                           tblptru	equ	0x3FF8
   978                           tblptrh	equ	0x3FF7
   979                           tblptrl	equ	0x3FF6
   980                           tablat	equ	0x3FF5
   981                           prodh	equ	0x3FF4
   982                           prodl	equ	0x3FF3
   983                           indf0	equ	0x3FEF
   984                           postinc0	equ	0x3FEE
   985                           postdec0	equ	0x3FED
   986                           preinc0	equ	0x3FEC
   987                           plusw0	equ	0x3FEB
   988                           fsr0h	equ	0x3FEA
   989                           fsr0l	equ	0x3FE9
   990                           wreg	equ	0x3FE8
   991                           indf1	equ	0x3FE7
   992                           postinc1	equ	0x3FE6
   993                           postdec1	equ	0x3FE5
   994                           preinc1	equ	0x3FE4
   995                           plusw1	equ	0x3FE3
   996                           fsr1h	equ	0x3FE2
   997                           fsr1l	equ	0x3FE1
   998                           bsr	equ	0x3FE0
   999                           indf2	equ	0x3FDF
  1000                           postinc2	equ	0x3FDE
  1001                           postdec2	equ	0x3FDD
  1002                           preinc2	equ	0x3FDC
  1003                           plusw2	equ	0x3FDB
  1004                           fsr2h	equ	0x3FDA
  1005                           fsr2l	equ	0x3FD9
  1006                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _init->_displayNumber

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      45
                                             14 COMRAM     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      45
                      _displayNumber
 ---------------------------------------------------------------------------------
 (2) _displayNumber                                       11    11      0      45
                                              3 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _displayNumber

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      83        0.0%
BITBIGSFRlhll      54A      0       0      77        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      181      0       0      82        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRlllhhh     AE      0       0      79        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      1E       1       31.6%
BITBIGSFRhhhh       28      0       0      69        0.0%
BITBIGSFRllh        1F      0       0      78        0.0%
BITBIGSFRlllhhl      F      0       0      80        0.0%
BITBIGSFRlllhl       F      0       0      81        0.0%
BITBIGSFRlhhl        5      0       0      75        0.0%
BITBIGSFRhll         5      0       0      73        0.0%
BITBIGSFRhhl         4      0       0      71        0.0%
BITBIGSFRhhhl        2      0       0      70        0.0%
BITBIGSFRhlh         1      0       0      72        0.0%
BITBIGSFRlhlh        1      0       0      76        0.0%
BITBIGSFRlhhh        1      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      14        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Apr 23 13:56:38 2024

                      l41 41B4                        l75 4226                        u10 4202  
                      u11 41FE                        u21 4210                       l831 411E  
                     l841 4130                       l833 4122                       l771 4202  
                     l843 4134                       l835 4126                       l773 4206  
                     l781 4194                       l845 4134                       l837 412A  
                     l829 411A                       l775 421A                       l791 41A0  
                     l783 4196                       l855 4150                       l847 4136  
                     l839 412C                       l769 41F2                       l793 41AE  
                     l785 4198                       l777 4170                       l849 414E  
                     l787 419A                       l779 4192                       l789 419E  
                     u117 4140                       u127 415C                       wreg 3FE8  
          ?_displayNumber 0001                      _LATB 3FBB                      _LATD 3FBD  
                    i2l48 4112                      i2l49 4118                      _main 411A  
                    _init 4170                      fsr2h 3FDA                      indf2 3FDF  
                    fsr1l 3FE1                      fsr2l 3FD9                      start 40AE  
            ___param_bank 0000          __end_of_INT0_ISR 411A                     ?_main 0001  
                   ?_init 0001                     i2l803 40C8                     i2l805 40EA  
                   i2l807 4102                     i2l795 40B4                     i2l797 40C4  
                   _PORTB 3FCB                     _PORTD 3FCD       displayNumber@F16523 0011  
                   _TRISB 3FC3                     _TRISD 3FC5                     tablat 3FF5  
                   plusw1 3FE3                     plusw2 3FDB           __initialization 41B6  
            __end_of_main 4170              __end_of_init 41B6       displayNumber@number 000E  
                  ??_main 000F                    ??_init 000F             __activetblptr 0000  
         ??_displayNumber 0004                _SecretCode 001B                    _ANSELB 3A50  
                  _ANSELD 3A70                    i2u3_40 40C4                    i2u3_41 40C0  
                  i2u4_40 40DA                    i2u4_41 40D2                    i2u6_40 4112  
                  i2u5_48 40DC                    i2u6_41 410E                    isa$std 0001  
            __pdataCOMRAM 0011              __mediumconst 0000                    tblptrh 3FF7  
                  tblptrl 3FF6                    tblptru 3FF8                __accesstop 0060  
 __end_of__initialization 41EA                 ?_INT0_ISR 0001             ___rparam_used 0001  
          __pcstackCOMRAM 0001             INT0_ISR@beeps 0003                ??_INT0_ISR 0001  
                 IVTBASEH 3FD6                   IVTBASEL 3FD5                   IVTBASEU 3FD7  
                 i2u13_47 40F4                _firstInput 001E                   __Hparam 0000  
                 __Lparam 0000              __psmallconst 2000                   __pcinit 41B6  
                 __ramtop 2000             ivt0x4008_base 4008                   __ptext0 411A  
                 __ptext1 4170                   __ptext2 41F0                   __ptext3 40B4  
    end_of_initialization 41EA                   postdec1 3FE5                   postinc0 3FEE  
               _PORTBbits 3FCB                 _PORTDbits 3FCD     __end_of_displayNumber 4228  
           __pidataCOMRAM 4228       start_initialization 41B6  displayNumber@lookupTable 0004  
             __pbssCOMRAM 001C               __pivt0x4008 4008               __smallconst 2000  
                _INT0_ISR 40B4                  _IPR1bits 3981                  _PIE1bits 3991  
                _IVTBASEH 3FD6                  _IVTBASEL 3FD5                  _IVTBASEU 3FD7  
                _PIR1bits 39A1         ivt0x4008_undefint 40AC               _INTCON0bits 3FD2  
               copy_data0 41CA                  __Hrparam 0000                  __Lrparam 0000  
                _readCode 001C                  isa$xinst 0000               _secondInput 001D  
                intlevel2 0000             _displayNumber 41F0  
