

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Apr 23 16:04:09 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=4,class=CODE,delta=1
    16                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 21/07/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47K42 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   00433C                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for displayNumber@F16523
    62   00433C  3F                 	db	63
    63   00433D  06                 	db	6
    64   00433E  5B                 	db	91
    65   00433F  4F                 	db	79
    66   004340  66                 	db	102
    67   004341  6D                 	db	109
    68   004342  7D                 	db	125
    69   004343  07                 	db	7
    70   004344  7F                 	db	127
    71   004345  6F                 	db	111
    72                           
    73                           ;initializer for _SecretCode
    74   004346  12                 	db	18
    75   000000                     _PORTAbits	set	16330
    76   000000                     _PORTBbits	set	16331
    77   000000                     _PORTDbits	set	16333
    78   000000                     _IPR1bits	set	14721
    79   000000                     _ANSELA	set	14912
    80   000000                     _ANSELD	set	14960
    81   000000                     _TRISD	set	16325
    82   000000                     _PORTA	set	16330
    83   000000                     _PORTD	set	16333
    84   000000                     _LATA	set	16314
    85   000000                     _LATD	set	16317
    86   000000                     _TRISA	set	16322
    87   000000                     _INTCON0bits	set	16338
    88   000000                     _TRISB	set	16323
    89   000000                     _ANSELB	set	14928
    90   000000                     _LATB	set	16315
    91   000000                     _PORTB	set	16331
    92   000000                     _IVTBASEL	set	16341
    93   000000                     _IVTBASEH	set	16342
    94   000000                     _IVTBASEU	set	16343
    95   000000                     _PIE1bits	set	14737
    96   000000                     _PIR1bits	set	14753
    97                           
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101   0042CA                     __pcinit:
   102                           	callstack 0
   103   0042CA                     start_initialization:
   104                           	callstack 0
   105   0042CA                     __initialization:
   106                           	callstack 0
   107                           
   108                           ; Initialize objects allocated to COMRAM (11 bytes)
   109                           ; load TBLPTR registers with __pidataCOMRAM
   110   0042CA  0E3C               	movlw	low __pidataCOMRAM
   111   0042CC  6EF6               	movwf	tblptrl,c
   112   0042CE  0E43               	movlw	high __pidataCOMRAM
   113   0042D0  6EF7               	movwf	tblptrh,c
   114   0042D2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   115   0042D4  6EF8               	movwf	tblptru,c
   116   0042D6  EE00  F014         	lfsr	0,__pdataCOMRAM
   117   0042DA  EE10 F00B          	lfsr	1,11
   118   0042DE                     copy_data0:
   119   0042DE  0009               	tblrd		*+
   120   0042E0  006F FFD7 FFEE     	movff	tablat,postinc0
   121   0042E6  50E5               	movf	postdec1,w,c
   122   0042E8  50E1               	movf	fsr1l,w,c
   123   0042EA  E1F9               	bnz	copy_data0
   124                           
   125                           ; Clear objects allocated to COMRAM (3 bytes)
   126   0042EC  6A21               	clrf	(__pbssCOMRAM+2)& (0+255),c
   127   0042EE  6A20               	clrf	(__pbssCOMRAM+1)& (0+255),c
   128   0042F0  6A1F               	clrf	__pbssCOMRAM& (0+255),c
   129                           
   130                           ;
   131                           ; Setup IVTBASE
   132                           ;
   133   0042F2  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   134   0042F4  6ED5               	movwf	213,c
   135   0042F6  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   136   0042F8  6ED6               	movwf	214,c
   137   0042FA  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   138   0042FC  6ED7               	movwf	215,c
   139   0042FE                     end_of_initialization:
   140                           	callstack 0
   141   0042FE                     __end_of__initialization:
   142                           	callstack 0
   143   0042FE  0100               	movlb	0
   144   004300  EF59  F020         	goto	_main	;jump to C main() function
   145                           
   146                           	psect	bssCOMRAM
   147   00001F                     __pbssCOMRAM:
   148                           	callstack 0
   149   00001F                     _readCode:
   150                           	callstack 0
   151   00001F                     	ds	1
   152   000020                     _secondInput:
   153                           	callstack 0
   154   000020                     	ds	1
   155   000021                     _firstInput:
   156                           	callstack 0
   157   000021                     	ds	1
   158                           
   159                           	psect	dataCOMRAM
   160   000014                     __pdataCOMRAM:
   161                           	callstack 0
   162   000014                     displayNumber@F16523:
   163                           	callstack 0
   164   000014                     	ds	10
   165   00001E                     _SecretCode:
   166                           	callstack 0
   167   00001E                     	ds	1
   168                           
   169                           	psect	cstackCOMRAM
   170   000001                     __pcstackCOMRAM:
   171                           	callstack 0
   172   000001                     ??_INT0_ISR:
   173   000001                     
   174                           ; 1 bytes @ 0x0
   175   000001                     	ds	2
   176   000003                     INT0_ISR@beeps:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x2
   180   000003                     	ds	1
   181   000004                     displayNumber@lookupTable:
   182                           	callstack 0
   183                           
   184                           ; 10 bytes @ 0x3
   185   000004                     	ds	10
   186   00000E                     displayNumber@number:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0xD
   190   00000E                     	ds	1
   191   00000F                     ??_getPR1Input:
   192   00000F                     ??_getPR2Input:
   193                           
   194                           ; 1 bytes @ 0xE
   195   00000F                     	ds	2
   196   000011                     getPR1Input@count:
   197                           	callstack 0
   198   000011                     getPR2Input@count:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x10
   202   000011                     	ds	1
   203   000012                     ??_main:
   204                           
   205                           ; 1 bytes @ 0x11
   206   000012                     	ds	2
   207                           
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 22 in file "main.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   231 ;;Total ram usage:        2 bytes
   232 ;; Hardware stack levels required when called: 3
   233 ;; This function calls:
   234 ;;		_getPR1Input
   235 ;;		_getPR2Input
   236 ;;		_init
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	text0
   243   0040B2                     __ptext0:
   244                           	callstack 0
   245   0040B2                     _main:
   246                           	callstack 28
   247   0040B2                     
   248                           ;main.c: 23:     init();
   249   0040B2  ECE6  F020         	call	_init	;wreg free
   250   0040B6                     l851:
   251                           
   252                           ;main.c: 26:     {;main.c: 27:         firstInput = 0;
   253   0040B6  0E00               	movlw	0
   254   0040B8  6E21               	movwf	_firstInput^0,c
   255   0040BA                     
   256                           ;main.c: 28:         secondInput = 0;
   257   0040BA  0E00               	movlw	0
   258   0040BC  6E20               	movwf	_secondInput^0,c
   259                           
   260                           ;main.c: 30:         firstInput = getPR1Input();
   261   0040BE  EC3B  F021         	call	_getPR1Input	;wreg free
   262   0040C2  6E21               	movwf	_firstInput^0,c
   263   0040C4                     
   264                           ;main.c: 31:         PORTBbits.RB5 = 1;
   265   0040C4  8ACB               	bsf	203,5,c	;volatile
   266   0040C6                     
   267                           ;main.c: 32:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   268   0040C6  0E06               	movlw	6
   269   0040C8  6E13               	movwf	(??_main+1)^0,c
   270   0040CA  0E13               	movlw	19
   271   0040CC  6E12               	movwf	??_main^0,c
   272   0040CE  0EAE               	movlw	174
   273   0040D0                     u127:
   274   0040D0  2EE8               	decfsz	wreg,f,c
   275   0040D2  D7FE               	bra	u127
   276   0040D4  2E12               	decfsz	??_main^0,f,c
   277   0040D6  D7FC               	bra	u127
   278   0040D8  2E13               	decfsz	(??_main+1)^0,f,c
   279   0040DA  D7FA               	bra	u127
   280   0040DC                     
   281                           ;main.c: 34:         secondInput = getPR2Input();
   282   0040DC  EC11  F021         	call	_getPR2Input	;wreg free
   283   0040E0  6E20               	movwf	_secondInput^0,c
   284   0040E2                     
   285                           ;main.c: 35:         readCode = (firstInput << 4) + secondInput;
   286   0040E2  5021               	movf	_firstInput^0,w,c
   287   0040E4  0D10               	mullw	16
   288   0040E6  50F3               	movf	243,w,c
   289   0040E8  2420               	addwf	_secondInput^0,w,c
   290   0040EA  6E1F               	movwf	_readCode^0,c
   291   0040EC                     
   292                           ;main.c: 36:         if (readCode == SecretCode)
   293   0040EC  0E12               	movlw	18
   294   0040EE  181F               	xorwf	_readCode^0,w,c
   295   0040F0  A4D8               	btfss	status,2,c
   296   0040F2  EF7D  F020         	goto	u111
   297   0040F6  EF7F  F020         	goto	u110
   298   0040FA                     u111:
   299   0040FA  EF8E  F020         	goto	l99
   300   0040FE                     u110:
   301   0040FE                     
   302                           ;main.c: 37:         {;main.c: 38:             PORTAbits.RA5 = 1;
   303   0040FE  8ACA               	bsf	202,5,c	;volatile
   304   004100                     
   305                           ;main.c: 39:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   306   004100  0E06               	movlw	6
   307   004102  6E13               	movwf	(??_main+1)^0,c
   308   004104  0E13               	movlw	19
   309   004106  6E12               	movwf	??_main^0,c
   310   004108  0EAE               	movlw	174
   311   00410A                     u137:
   312   00410A  2EE8               	decfsz	wreg,f,c
   313   00410C  D7FE               	bra	u137
   314   00410E  2E12               	decfsz	??_main^0,f,c
   315   004110  D7FC               	bra	u137
   316   004112  2E13               	decfsz	(??_main+1)^0,f,c
   317   004114  D7FA               	bra	u137
   318   004116                     
   319                           ;main.c: 40:             PORTAbits.RA5 = 0;
   320   004116  9ACA               	bcf	202,5,c	;volatile
   321                           
   322                           ;main.c: 41:         }
   323   004118  EF9B  F020         	goto	l875
   324   00411C                     l99:
   325                           
   326                           ;main.c: 43:         {;main.c: 44:             PORTDbits.RD7 = 1;
   327   00411C  8ECD               	bsf	205,7,c	;volatile
   328   00411E                     
   329                           ;main.c: 45:             _delay((unsigned long)((1500)*(4000000/4000.0)));
   330   00411E  0E08               	movlw	8
   331   004120  6E13               	movwf	(??_main+1)^0,c
   332   004122  0E9D               	movlw	157
   333   004124  6E12               	movwf	??_main^0,c
   334   004126  0E06               	movlw	6
   335   004128                     u147:
   336   004128  2EE8               	decfsz	wreg,f,c
   337   00412A  D7FE               	bra	u147
   338   00412C  2E12               	decfsz	??_main^0,f,c
   339   00412E  D7FC               	bra	u147
   340   004130  2E13               	decfsz	(??_main+1)^0,f,c
   341   004132  D7FA               	bra	u147
   342   004134                     
   343                           ;main.c: 46:             PORTDbits.RD7 = 0;
   344   004134  9ECD               	bcf	205,7,c	;volatile
   345   004136                     l875:
   346                           
   347                           ;main.c: 48:         PORTBbits.RB5 = 0;
   348   004136  9ACB               	bcf	203,5,c	;volatile
   349                           
   350                           ;main.c: 49:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   351   004138  0E06               	movlw	6
   352   00413A  6E13               	movwf	(??_main+1)^0,c
   353   00413C  0E13               	movlw	19
   354   00413E  6E12               	movwf	??_main^0,c
   355   004140  0EAE               	movlw	174
   356   004142                     u157:
   357   004142  2EE8               	decfsz	wreg,f,c
   358   004144  D7FE               	bra	u157
   359   004146  2E12               	decfsz	??_main^0,f,c
   360   004148  D7FC               	bra	u157
   361   00414A  2E13               	decfsz	(??_main+1)^0,f,c
   362   00414C  D7FA               	bra	u157
   363   00414E  EF5B  F020         	goto	l851
   364   004152  EF57  F020         	goto	start
   365   004156                     __end_of_main:
   366                           	callstack 0
   367                           
   368 ;; *************** function _init *****************
   369 ;; Defined at:
   370 ;;		line 43 in file "././functions.h"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels used: 1
   390 ;; Hardware stack levels required when called: 2
   391 ;; This function calls:
   392 ;;		_displayNumber
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text1
   399   0041CC                     __ptext1:
   400                           	callstack 0
   401   0041CC                     _init:
   402                           	callstack 28
   403   0041CC                     
   404                           ;././functions.h: 47:     TRISD = 0;
   405   0041CC  0E00               	movlw	0
   406   0041CE  6EC5               	movwf	197,c	;volatile
   407                           
   408                           ;././functions.h: 48:     ANSELD = 0;
   409   0041D0  0E00               	movlw	0
   410   0041D2  013A               	movlb	58	; () banked
   411   0041D4  6F70               	movwf	112,b	;volatile
   412                           
   413                           ;././functions.h: 49:     LATD = 0;
   414   0041D6  0E00               	movlw	0
   415   0041D8  6EBD               	movwf	189,c	;volatile
   416                           
   417                           ;././functions.h: 50:     PORTD = 0;
   418   0041DA  0E00               	movlw	0
   419   0041DC  6ECD               	movwf	205,c	;volatile
   420                           
   421                           ;././functions.h: 53:     TRISA = 0;
   422   0041DE  0E00               	movlw	0
   423   0041E0  6EC2               	movwf	194,c	;volatile
   424                           
   425                           ;././functions.h: 54:     ANSELA = 0;
   426   0041E2  0E00               	movlw	0
   427   0041E4  6F40               	movwf	64,b	;volatile
   428                           
   429                           ;././functions.h: 55:     LATA = 0;
   430   0041E6  0E00               	movlw	0
   431   0041E8  6EBA               	movwf	186,c	;volatile
   432                           
   433                           ;././functions.h: 56:     PORTA = 0;
   434   0041EA  0E00               	movlw	0
   435   0041EC  6ECA               	movwf	202,c	;volatile
   436                           
   437                           ;././functions.h: 59:     TRISB = 0x0F;
   438   0041EE  0E0F               	movlw	15
   439   0041F0  6EC3               	movwf	195,c	;volatile
   440                           
   441                           ;././functions.h: 60:     ANSELB = 0;
   442   0041F2  0E00               	movlw	0
   443   0041F4  6F50               	movwf	80,b	;volatile
   444                           
   445                           ;././functions.h: 61:     LATB = 0;
   446   0041F6  0E00               	movlw	0
   447   0041F8  6EBB               	movwf	187,c	;volatile
   448                           
   449                           ;././functions.h: 62:     PORTB = 0;
   450   0041FA  0E00               	movlw	0
   451   0041FC  6ECB               	movwf	203,c	;volatile
   452   0041FE                     
   453                           ; BSR set to: 58
   454                           ;././functions.h: 65:     INTCON0bits.IPEN = 1;
   455   0041FE  8AD2               	bsf	210,5,c	;volatile
   456   004200                     
   457                           ; BSR set to: 58
   458                           ;././functions.h: 66:     INTCON0bits.GIEH = 1;
   459   004200  8ED2               	bsf	210,7,c	;volatile
   460   004202                     
   461                           ; BSR set to: 58
   462                           ;././functions.h: 67:     INTCON0bits.GIEL = 1;
   463   004202  8CD2               	bsf	210,6,c	;volatile
   464   004204                     
   465                           ; BSR set to: 58
   466                           ;././functions.h: 68:     INTCON0bits.INT0EDG = 0;
   467   004204  90D2               	bcf	210,0,c	;volatile
   468   004206                     
   469                           ; BSR set to: 58
   470                           ;././functions.h: 69:     IPR1bits.INT0IP = 0;
   471   004206  0139               	movlb	57	; () banked
   472   004208  9181               	bcf	129,0,b	;volatile
   473   00420A                     
   474                           ; BSR set to: 57
   475                           ;././functions.h: 70:     PIE1bits.INT0IE = 1;
   476   00420A  8191               	bsf	145,0,b	;volatile
   477   00420C                     
   478                           ; BSR set to: 57
   479                           ;././functions.h: 71:     PIR1bits.INT0IF = 0;
   480   00420C  91A1               	bcf	161,0,b	;volatile
   481                           
   482                           ;././functions.h: 72:     IVTBASEU = 0;
   483   00420E  0E00               	movlw	0
   484   004210  6ED7               	movwf	215,c	;volatile
   485                           
   486                           ;././functions.h: 73:     IVTBASEH = 0x40;
   487   004212  0E40               	movlw	64
   488   004214  6ED6               	movwf	214,c	;volatile
   489                           
   490                           ;././functions.h: 74:     IVTBASEL = 0x08;
   491   004216  0E08               	movlw	8
   492   004218  6ED5               	movwf	213,c	;volatile
   493   00421A                     
   494                           ; BSR set to: 57
   495                           ;././functions.h: 75:     displayNumber(0);
   496   00421A  0E00               	movlw	0
   497   00421C  EC82  F021         	call	_displayNumber
   498   004220  0012               	return		;funcret
   499   004222                     __end_of_init:
   500                           	callstack 0
   501                           
   502 ;; *************** function _getPR2Input *****************
   503 ;; Defined at:
   504 ;;		line 118 in file "././functions.h"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  count           1   16[COMRAM] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      unsigned char 
   511 ;; Registers used:
   512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   521 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   522 ;;Total ram usage:        3 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; Hardware stack levels required when called: 2
   525 ;; This function calls:
   526 ;;		_displayNumber
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text2
   533   004222                     __ptext2:
   534                           	callstack 0
   535   004222                     _getPR2Input:
   536                           	callstack 28
   537   004222                     
   538                           ;././functions.h: 120:     unsigned char count = 0;
   539   004222  0E00               	movlw	0
   540   004224  6E11               	movwf	getPR2Input@count^0,c
   541   004226                     
   542                           ;././functions.h: 121:     displayNumber(count);
   543   004226  0E00               	movlw	0
   544   004228  EC82  F021         	call	_displayNumber
   545   00422C  EF22  F021         	goto	l73
   546   004230                     l74:
   547                           
   548                           ;././functions.h: 126:         {;././functions.h: 128:             if (PORTBbits.RB3)
   549   004230  A6CB               	btfss	203,3,c	;volatile
   550   004232  EF1D  F021         	goto	u51
   551   004236  EF1F  F021         	goto	u50
   552   00423A                     u51:
   553   00423A  EF22  F021         	goto	l73
   554   00423E                     u50:
   555   00423E                     
   556                           ;././functions.h: 129:                 return count;
   557   00423E  5011               	movf	getPR2Input@count^0,w,c
   558   004240  EF3A  F021         	goto	l76
   559   004244                     l73:
   560                           
   561                           ;././functions.h: 125:         while (PORTBbits.RB2)
   562   004244  B4CB               	btfsc	203,2,c	;volatile
   563   004246  EF27  F021         	goto	u61
   564   00424A  EF29  F021         	goto	u60
   565   00424E                     u61:
   566   00424E  EF18  F021         	goto	l74
   567   004252                     u60:
   568   004252                     
   569                           ;././functions.h: 131:         count++;
   570   004252  2A11               	incf	getPR2Input@count^0,f,c
   571   004254                     
   572                           ;././functions.h: 132:         displayNumber(count);
   573   004254  5011               	movf	getPR2Input@count^0,w,c
   574   004256  EC82  F021         	call	_displayNumber
   575   00425A                     
   576                           ;././functions.h: 133:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   577   00425A  0E06               	movlw	6
   578   00425C  6E10               	movwf	(??_getPR2Input+1)^0,c
   579   00425E  0E13               	movlw	19
   580   004260  6E0F               	movwf	??_getPR2Input^0,c
   581   004262  0EAE               	movlw	174
   582   004264                     u167:
   583   004264  2EE8               	decfsz	wreg,f,c
   584   004266  D7FE               	bra	u167
   585   004268  2E0F               	decfsz	??_getPR2Input^0,f,c
   586   00426A  D7FC               	bra	u167
   587   00426C  2E10               	decfsz	(??_getPR2Input+1)^0,f,c
   588   00426E  D7FA               	bra	u167
   589   004270  EF22  F021         	goto	l73
   590   004274                     l76:
   591   004274  0012               	return		;funcret
   592   004276                     __end_of_getPR2Input:
   593                           	callstack 0
   594                           
   595 ;; *************** function _getPR1Input *****************
   596 ;; Defined at:
   597 ;;		line 100 in file "././functions.h"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  count           1   16[COMRAM] unsigned char 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      unsigned char 
   604 ;; Registers used:
   605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   614 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   615 ;;Total ram usage:        3 bytes
   616 ;; Hardware stack levels used: 1
   617 ;; Hardware stack levels required when called: 2
   618 ;; This function calls:
   619 ;;		_displayNumber
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text3
   626   004276                     __ptext3:
   627                           	callstack 0
   628   004276                     _getPR1Input:
   629                           	callstack 28
   630   004276                     
   631                           ;././functions.h: 102:     unsigned char count = 0;
   632   004276  0E00               	movlw	0
   633   004278  6E11               	movwf	getPR1Input@count^0,c
   634   00427A                     
   635                           ;././functions.h: 103:     displayNumber(count);
   636   00427A  0E00               	movlw	0
   637   00427C  EC82  F021         	call	_displayNumber
   638   004280  EF4C  F021         	goto	l63
   639   004284                     l64:
   640                           
   641                           ;././functions.h: 108:         {;././functions.h: 110:             if (PORTBbits.RB3)
   642   004284  A6CB               	btfss	203,3,c	;volatile
   643   004286  EF47  F021         	goto	u31
   644   00428A  EF49  F021         	goto	u30
   645   00428E                     u31:
   646   00428E  EF4C  F021         	goto	l63
   647   004292                     u30:
   648   004292                     
   649                           ;././functions.h: 111:                 return count;
   650   004292  5011               	movf	getPR1Input@count^0,w,c
   651   004294  EF64  F021         	goto	l66
   652   004298                     l63:
   653                           
   654                           ;././functions.h: 107:         while (PORTBbits.RB1)
   655   004298  B2CB               	btfsc	203,1,c	;volatile
   656   00429A  EF51  F021         	goto	u41
   657   00429E  EF53  F021         	goto	u40
   658   0042A2                     u41:
   659   0042A2  EF42  F021         	goto	l64
   660   0042A6                     u40:
   661   0042A6                     
   662                           ;././functions.h: 113:         count++;
   663   0042A6  2A11               	incf	getPR1Input@count^0,f,c
   664   0042A8                     
   665                           ;././functions.h: 114:         displayNumber(count);
   666   0042A8  5011               	movf	getPR1Input@count^0,w,c
   667   0042AA  EC82  F021         	call	_displayNumber
   668   0042AE                     
   669                           ;././functions.h: 115:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   670   0042AE  0E06               	movlw	6
   671   0042B0  6E10               	movwf	(??_getPR1Input+1)^0,c
   672   0042B2  0E13               	movlw	19
   673   0042B4  6E0F               	movwf	??_getPR1Input^0,c
   674   0042B6  0EAE               	movlw	174
   675   0042B8                     u177:
   676   0042B8  2EE8               	decfsz	wreg,f,c
   677   0042BA  D7FE               	bra	u177
   678   0042BC  2E0F               	decfsz	??_getPR1Input^0,f,c
   679   0042BE  D7FC               	bra	u177
   680   0042C0  2E10               	decfsz	(??_getPR1Input+1)^0,f,c
   681   0042C2  D7FA               	bra	u177
   682   0042C4  EF4C  F021         	goto	l63
   683   0042C8                     l66:
   684   0042C8  0012               	return		;funcret
   685   0042CA                     __end_of_getPR1Input:
   686                           	callstack 0
   687                           
   688 ;; *************** function _displayNumber *****************
   689 ;; Defined at:
   690 ;;		line 136 in file "././functions.h"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  number          1    wreg     unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  number          1   13[COMRAM] unsigned char 
   695 ;;  lookupTable    10    3[COMRAM] unsigned char [10]
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   706 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   708 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   709 ;;Total ram usage:       11 bytes
   710 ;; Hardware stack levels used: 1
   711 ;; Hardware stack levels required when called: 1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_init
   716 ;;		_getPR1Input
   717 ;;		_getPR2Input
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text4
   722   004304                     __ptext4:
   723                           	callstack 0
   724   004304                     _displayNumber:
   725                           	callstack 28
   726                           
   727                           ;incstack = 0
   728                           ;displayNumber@number stored from wreg
   729   004304  6E0E               	movwf	displayNumber@number^0,c
   730   004306                     
   731                           ;././functions.h: 136: void displayNumber(unsigned char number);././functions.h: 137: {;
      +                          ././functions.h: 138:     if (number > 9)
   732   004306  0E09               	movlw	9
   733   004308  640E               	cpfsgt	displayNumber@number^0,c
   734   00430A  EF89  F021         	goto	u11
   735   00430E  EF8B  F021         	goto	u10
   736   004312                     u11:
   737   004312  EF8D  F021         	goto	l783
   738   004316                     u10:
   739   004316                     
   740                           ;././functions.h: 139:     {;././functions.h: 140:         number = 0;
   741   004316  0E00               	movlw	0
   742   004318  6E0E               	movwf	displayNumber@number^0,c
   743   00431A                     l783:
   744                           
   745                           ;././functions.h: 142:     unsigned char lookupTable [10] = {
   746   00431A  EE20  F014         	lfsr	2,displayNumber@F16523
   747   00431E  EE10  F004         	lfsr	1,displayNumber@lookupTable
   748   004322  0E09               	movlw	9
   749   004324                     u21:
   750   004324  006F FF6F FFE3     	movff	plusw2,plusw1
   751   00432A  06E8               	decf	wreg,f,c
   752   00432C  E2FB               	bc	u21
   753   00432E                     
   754                           ;././functions.h: 155:     PORTD = lookupTable[number];
   755   00432E  500E               	movf	displayNumber@number^0,w,c
   756   004330  0F04               	addlw	low displayNumber@lookupTable
   757   004332  6ED9               	movwf	fsr2l,c
   758   004334  6ADA               	clrf	fsr2h,c
   759   004336  50DF               	movf	indf2,w,c
   760   004338  6ECD               	movwf	205,c	;volatile
   761   00433A  0012               	return		;funcret
   762   00433C                     __end_of_displayNumber:
   763                           	callstack 0
   764                           
   765 ;; *************** function _INT0_ISR *****************
   766 ;; Defined at:
   767 ;;		line 79 in file "././functions.h"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  beeps           1    2[COMRAM] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   783 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   784 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   785 ;;Total ram usage:        3 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		Interrupt level 2
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text5
   795   004158                     __ptext5:
   796                           	callstack 0
   797   004158                     _INT0_ISR:
   798                           	callstack 28
   799   004158                     
   800                           ;././functions.h: 82:     _delay((unsigned long)((100)*(4000000/4000.0)));
   801   004158  0E82               	movlw	130
   802   00415A  6E01               	movwf	??_INT0_ISR^0,c
   803   00415C  0EDE               	movlw	222
   804   00415E                     i2u18_47:
   805   00415E  2EE8               	decfsz	wreg,f,c
   806   004160  D7FE               	bra	i2u18_47
   807   004162  2E01               	decfsz	??_INT0_ISR^0,f,c
   808   004164  D7FC               	bra	i2u18_47
   809   004166                     
   810                           ;././functions.h: 83:     if (PIR1bits.INT0IF == 1)
   811   004166  0139               	movlb	57	; () banked
   812   004168  A1A1               	btfss	161,0,b	;volatile
   813   00416A  EFB9  F020         	goto	i2u7_41
   814   00416E  EFBB  F020         	goto	i2u7_40
   815   004172                     i2u7_41:
   816   004172  EFE5  F020         	goto	i2l59
   817   004176                     i2u7_40:
   818   004176                     
   819                           ; BSR set to: 57
   820                           ;././functions.h: 84:     {;././functions.h: 86:         for (unsigned char beeps = 0; b
      +                          eeps < 2; beeps++)
   821   004176  0E00               	movlw	0
   822   004178  6E03               	movwf	INT0_ISR@beeps^0,c
   823   00417A                     i2l843:
   824                           
   825                           ;././functions.h: 87:         {;././functions.h: 88:             PORTDbits.RD7 = !PORTDb
      +                          its.RD7;
   826   00417A  AECD               	btfss	205,7,c	;volatile
   827   00417C  EFC2  F020         	goto	i2u8_41
   828   004180  EFC6  F020         	goto	i2u8_40
   829   004184                     i2u8_41:
   830   004184  6A01               	clrf	??_INT0_ISR^0,c
   831   004186  2A01               	incf	??_INT0_ISR^0,f,c
   832   004188  EFC7  F020         	goto	i2u9_48
   833   00418C                     i2u8_40:
   834   00418C  6A01               	clrf	??_INT0_ISR^0,c
   835   00418E                     i2u9_48:
   836   00418E  3201               	rrcf	??_INT0_ISR^0,f,c
   837   004190  3201               	rrcf	??_INT0_ISR^0,f,c
   838   004192  50CD               	movf	205,w,c	;volatile
   839   004194  1801               	xorwf	??_INT0_ISR^0,w,c
   840   004196  0B7F               	andlw	-129
   841   004198  1801               	xorwf	??_INT0_ISR^0,w,c
   842   00419A  6ECD               	movwf	205,c	;volatile
   843   00419C                     
   844                           ;././functions.h: 90:             _delay((unsigned long)((250)*(4000000/4000.0)));
   845   00419C  0E02               	movlw	2
   846   00419E  6E02               	movwf	(??_INT0_ISR+1)^0,c
   847   0041A0  0E45               	movlw	69
   848   0041A2  6E01               	movwf	??_INT0_ISR^0,c
   849   0041A4  0EAA               	movlw	170
   850   0041A6                     i2u19_47:
   851   0041A6  2EE8               	decfsz	wreg,f,c
   852   0041A8  D7FE               	bra	i2u19_47
   853   0041AA  2E01               	decfsz	??_INT0_ISR^0,f,c
   854   0041AC  D7FC               	bra	i2u19_47
   855   0041AE  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
   856   0041B0  D7FA               	bra	i2u19_47
   857                           
   858                           ;././functions.h: 92:         }
   859   0041B2  2A03               	incf	INT0_ISR@beeps^0,f,c
   860   0041B4  0E01               	movlw	1
   861   0041B6  6403               	cpfsgt	INT0_ISR@beeps^0,c
   862   0041B8  EFE0  F020         	goto	i2u10_41
   863   0041BC  EFE2  F020         	goto	i2u10_40
   864   0041C0                     i2u10_41:
   865   0041C0  EFBD  F020         	goto	i2l843
   866   0041C4                     i2u10_40:
   867   0041C4                     
   868                           ;././functions.h: 93:     PIR1bits.INT0IF = 0;
   869   0041C4  0139               	movlb	57	; () banked
   870   0041C6  91A1               	bcf	161,0,b	;volatile
   871                           
   872                           ;././functions.h: 94:     PORTDbits.RD7 = 0;
   873   0041C8  9ECD               	bcf	205,7,c	;volatile
   874   0041CA                     i2l59:
   875                           
   876                           ; BSR set to: 57
   877   0041CA  0011               	retfie		f
   878   0041CC                     __end_of_INT0_ISR:
   879                           	callstack 0
   880                           
   881                           ;
   882                           ; Interrupt Vector Table @ 0x4008
   883                           ;
   884                           
   885                           	psect	ivt0x4008
   886   004008                     __pivt0x4008:
   887                           	callstack 0
   888   004008                     ivt0x4008_base:
   889                           	callstack 0
   890                           
   891                           ; Vector 0 : SWINT
   892   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
   893                           
   894                           ; Vector 1 : HLVD
   895   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
   896                           
   897                           ; Vector 2 : OSF
   898   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
   899                           
   900                           ; Vector 3 : CSW
   901   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
   902                           
   903                           ; Vector 4 : NVM
   904   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
   905                           
   906                           ; Vector 5 : SCAN
   907   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
   908                           
   909                           ; Vector 6 : CRC
   910   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
   911                           
   912                           ; Vector 7 : IOC
   913   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
   914                           
   915                           ; Vector 8 : INT0
   916   004018  1056               	dw	_INT0_ISR shr (0+2)
   917                           
   918                           ; Vector 9 : ZCD
   919   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
   920                           
   921                           ; Vector 10 : AD
   922   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
   923                           
   924                           ; Vector 11 : ADT
   925   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
   926                           
   927                           ; Vector 12 : CMP1
   928   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
   929                           
   930                           ; Vector 13 : SMT1
   931   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
   932                           
   933                           ; Vector 14 : SMT1PRA
   934   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
   935                           
   936                           ; Vector 15 : SMT1PRW
   937   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
   938                           
   939                           ; Vector 16 : DMA1SCNT
   940   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
   941                           
   942                           ; Vector 17 : DMA1DCNT
   943   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
   944                           
   945                           ; Vector 18 : DMA1OR
   946   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
   947                           
   948                           ; Vector 19 : DMA1A
   949   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
   950                           
   951                           ; Vector 20 : SPI1RX
   952   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
   953                           
   954                           ; Vector 21 : SPI1TX
   955   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
   956                           
   957                           ; Vector 22 : SPI1
   958   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
   959                           
   960                           ; Vector 23 : I2C1RX
   961   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
   962                           
   963                           ; Vector 24 : I2C1TX
   964   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
   965                           
   966                           ; Vector 25 : I2C1
   967   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
   968                           
   969                           ; Vector 26 : I2C1E
   970   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
   971                           
   972                           ; Vector 27 : U1RX
   973   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
   974                           
   975                           ; Vector 28 : U1TX
   976   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
   977                           
   978                           ; Vector 29 : U1E
   979   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
   980                           
   981                           ; Vector 30 : U1
   982   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
   983                           
   984                           ; Vector 31 : TMR0
   985   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
   986                           
   987                           ; Vector 32 : TMR1
   988   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
   989                           
   990                           ; Vector 33 : TMR1G
   991   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
   992                           
   993                           ; Vector 34 : TMR2
   994   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
   995                           
   996                           ; Vector 35 : CCP1
   997   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
   998                           
   999                           ; Vector 36 : Undefined
  1000   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1001                           
  1002                           ; Vector 37 : NCO1
  1003   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1004                           
  1005                           ; Vector 38 : CWG1
  1006   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1007                           
  1008                           ; Vector 39 : CLC1
  1009   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1010                           
  1011                           ; Vector 40 : INT1
  1012   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1013                           
  1014                           ; Vector 41 : CMP2
  1015   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1016                           
  1017                           ; Vector 42 : DMA2SCNT
  1018   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1019                           
  1020                           ; Vector 43 : DMA2DCNT
  1021   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1022                           
  1023                           ; Vector 44 : DMA2OR
  1024   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1025                           
  1026                           ; Vector 45 : DMA2A
  1027   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1028                           
  1029                           ; Vector 46 : I2C2RX
  1030   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1031                           
  1032                           ; Vector 47 : I2C2TX
  1033   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1034                           
  1035                           ; Vector 48 : I2C2
  1036   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1037                           
  1038                           ; Vector 49 : I2C2E
  1039   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1040                           
  1041                           ; Vector 50 : U2RX
  1042   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1043                           
  1044                           ; Vector 51 : U2TX
  1045   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1046                           
  1047                           ; Vector 52 : U2E
  1048   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1049                           
  1050                           ; Vector 53 : U2
  1051   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1052                           
  1053                           ; Vector 54 : TMR3
  1054   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1055                           
  1056                           ; Vector 55 : TMR3G
  1057   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1058                           
  1059                           ; Vector 56 : TMR4
  1060   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1061                           
  1062                           ; Vector 57 : CCP2
  1063   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1064                           
  1065                           ; Vector 58 : Undefined
  1066   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1067                           
  1068                           ; Vector 59 : CWG2
  1069   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1070                           
  1071                           ; Vector 60 : CLC2
  1072   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1073                           
  1074                           ; Vector 61 : INT2
  1075   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1076                           
  1077                           ; Vector 62 : Undefined
  1078   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1079                           
  1080                           ; Vector 63 : Undefined
  1081   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1082                           
  1083                           ; Vector 64 : Undefined
  1084   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1085                           
  1086                           ; Vector 65 : Undefined
  1087   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1088                           
  1089                           ; Vector 66 : Undefined
  1090   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1091                           
  1092                           ; Vector 67 : Undefined
  1093   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1094                           
  1095                           ; Vector 68 : Undefined
  1096   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1097                           
  1098                           ; Vector 69 : Undefined
  1099   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1100                           
  1101                           ; Vector 70 : TMR5
  1102   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1103                           
  1104                           ; Vector 71 : TMR5G
  1105   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1106                           
  1107                           ; Vector 72 : TMR6
  1108   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1109                           
  1110                           ; Vector 73 : CCP3
  1111   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1112                           
  1113                           ; Vector 74 : CWG3
  1114   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1115                           
  1116                           ; Vector 75 : CLC3
  1117   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1118                           
  1119                           ; Vector 76 : Undefined
  1120   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1121                           
  1122                           ; Vector 77 : Undefined
  1123   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1124                           
  1125                           ; Vector 78 : Undefined
  1126   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1127                           
  1128                           ; Vector 79 : Undefined
  1129   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1130                           
  1131                           ; Vector 80 : CCP4
  1132   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1133                           
  1134                           ; Vector 81 : CLC4
  1135   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1136   0040AC                     ivt0x4008_undefint:
  1137                           	callstack 0
  1138   0040AC  00FF               	reset	
  1139                           
  1140                           	psect	smallconst
  1141   002000                     __psmallconst:
  1142                           	callstack 0
  1143   002000  00                 	db	0
  1144   002001  00                 	db	0	; dummy byte at the end
  1145   000000                     
  1146                           	psect	rparam
  1147   000000                     
  1148                           	psect	config
  1149                           
  1150                           ;Config register CONFIG1L @ 0x300000
  1151                           ;	External Oscillator Selection
  1152                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1153                           ;	Reset Oscillator Selection
  1154                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1155   300000                     	org	3145728
  1156   300000  F8                 	db	248
  1157                           
  1158                           ;Config register CONFIG1H @ 0x300001
  1159                           ;	Clock out Enable bit
  1160                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1161                           ;	PRLOCKED One-Way Set Enable bit
  1162                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1163                           ;	Clock Switch Enable bit
  1164                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1165                           ;	Fail-Safe Clock Monitor Enable bit
  1166                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1167   300001                     	org	3145729
  1168   300001  FF                 	db	255
  1169                           
  1170                           ;Config register CONFIG2L @ 0x300002
  1171                           ;	MCLR Enable bit
  1172                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1173                           ;	Power-up timer selection bits
  1174                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1175                           ;	Multi-vector enable bit
  1176                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1177                           ;	IVTLOCK bit One-way set enable bit
  1178                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1179                           ;	Low Power BOR Enable bit
  1180                           ;	LPBOREN = OFF, ULPBOR disabled
  1181                           ;	Brown-out Reset Enable bits
  1182                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1183   300002                     	org	3145730
  1184   300002  FF                 	db	255
  1185                           
  1186                           ;Config register CONFIG2H @ 0x300003
  1187                           ;	Brown-out Reset Voltage Selection bits
  1188                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1189                           ;	ZCD Disable bit
  1190                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1191                           ;	PPSLOCK bit One-Way Set Enable bit
  1192                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1193                           ;	Stack Full/Underflow Reset Enable bit
  1194                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1195                           ;	Debugger Enable bit
  1196                           ;	DEBUG = OFF, Background debugger disabled
  1197                           ;	Extended Instruction Set Enable bit
  1198                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1199   300003                     	org	3145731
  1200   300003  FF                 	db	255
  1201                           
  1202                           ;Config register CONFIG3L @ 0x300004
  1203                           ;	WDT Period selection bits
  1204                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1205                           ;	WDT operating mode
  1206                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1207   300004                     	org	3145732
  1208   300004  9F                 	db	159
  1209                           
  1210                           ;Config register CONFIG3H @ 0x300005
  1211                           ;	WDT Window Select bits
  1212                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1213                           ;	WDT input clock selector
  1214                           ;	WDTCCS = SC, Software Control
  1215   300005                     	org	3145733
  1216   300005  FF                 	db	255
  1217                           
  1218                           ;Config register CONFIG4L @ 0x300006
  1219                           ;	Boot Block Size selection bits
  1220                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1221                           ;	Boot Block enable bit
  1222                           ;	BBEN = OFF, Boot block disabled
  1223                           ;	Storage Area Flash enable bit
  1224                           ;	SAFEN = OFF, SAF disabled
  1225                           ;	Application Block write protection bit
  1226                           ;	WRTAPP = OFF, Application Block not write protected
  1227   300006                     	org	3145734
  1228   300006  FF                 	db	255
  1229                           
  1230                           ;Config register CONFIG4H @ 0x300007
  1231                           ;	Boot Block Write Protection bit
  1232                           ;	WRTB = OFF, Boot Block not write-protected
  1233                           ;	Configuration Register Write Protection bit
  1234                           ;	WRTC = OFF, Configuration registers not write-protected
  1235                           ;	Data EEPROM Write Protection bit
  1236                           ;	WRTD = OFF, Data EEPROM not write-protected
  1237                           ;	SAF Write protection bit
  1238                           ;	WRTSAF = OFF, SAF not Write Protected
  1239                           ;	Low Voltage Programming Enable bit
  1240                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1241   300007                     	org	3145735
  1242   300007  FF                 	db	255
  1243                           
  1244                           ;Config register CONFIG5L @ 0x300008
  1245                           ;	PFM and Data EEPROM Code Protection bit
  1246                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1247   300008                     	org	3145736
  1248   300008  FF                 	db	255
  1249                           
  1250                           ;Config register CONFIG5H @ 0x300009
  1251                           ;	unspecified, using default values
  1252   300009                     	org	3145737
  1253   300009  FF                 	db	255
  1254                           tosu	equ	0x3FFF
  1255                           tosh	equ	0x3FFE
  1256                           tosl	equ	0x3FFD
  1257                           stkptr	equ	0x3FFC
  1258                           pclatu	equ	0x3FFB
  1259                           pclath	equ	0x3FFA
  1260                           pcl	equ	0x3FF9
  1261                           tblptru	equ	0x3FF8
  1262                           tblptrh	equ	0x3FF7
  1263                           tblptrl	equ	0x3FF6
  1264                           tablat	equ	0x3FF5
  1265                           prodh	equ	0x3FF4
  1266                           prodl	equ	0x3FF3
  1267                           indf0	equ	0x3FEF
  1268                           postinc0	equ	0x3FEE
  1269                           postdec0	equ	0x3FED
  1270                           preinc0	equ	0x3FEC
  1271                           plusw0	equ	0x3FEB
  1272                           fsr0h	equ	0x3FEA
  1273                           fsr0l	equ	0x3FE9
  1274                           wreg	equ	0x3FE8
  1275                           indf1	equ	0x3FE7
  1276                           postinc1	equ	0x3FE6
  1277                           postdec1	equ	0x3FE5
  1278                           preinc1	equ	0x3FE4
  1279                           plusw1	equ	0x3FE3
  1280                           fsr1h	equ	0x3FE2
  1281                           fsr1l	equ	0x3FE1
  1282                           bsr	equ	0x3FE0
  1283                           indf2	equ	0x3FDF
  1284                           postinc2	equ	0x3FDE
  1285                           postdec2	equ	0x3FDD
  1286                           preinc2	equ	0x3FDC
  1287                           plusw2	equ	0x3FDB
  1288                           fsr2h	equ	0x3FDA
  1289                           fsr2l	equ	0x3FD9
  1290                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_getPR1Input
    _main->_getPR2Input
    _init->_displayNumber
    _getPR2Input->_displayNumber
    _getPR1Input->_displayNumber

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     225
                                             17 COMRAM     2     2      0
                        _getPR1Input
                        _getPR2Input
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      45
                      _displayNumber
 ---------------------------------------------------------------------------------
 (1) _getPR2Input                                          3     3      0      90
                                             14 COMRAM     3     3      0
                      _displayNumber
 ---------------------------------------------------------------------------------
 (1) _getPR1Input                                          3     3      0      90
                                             14 COMRAM     3     3      0
                      _displayNumber
 ---------------------------------------------------------------------------------
 (2) _displayNumber                                       11    11      0      45
                                              3 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getPR1Input
     _displayNumber
   _getPR2Input
     _displayNumber
   _init
     _displayNumber

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      84        0.0%
BITBIGSFRlhll      549      0       0      77        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      181      0       0      83        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlllhhh     9E      0       0      80        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      21       1       34.7%
BITBIGSFRhhhh       28      0       0      69        0.0%
BITBIGSFRllhh       1F      0       0      78        0.0%
BITBIGSFRlllhhl      F      0       0      81        0.0%
BITBIGSFRlllhl       F      0       0      82        0.0%
BITBIGSFRllhl        F      0       0      79        0.0%
BITBIGSFRhhl         4      0       0      71        0.0%
BITBIGSFRlhhl        4      0       0      75        0.0%
BITBIGSFRhll         4      0       0      73        0.0%
BITBIGSFRhhhl        2      0       0      70        0.0%
BITBIGSFRhlh         1      0       0      72        0.0%
BITBIGSFRlhlh        1      0       0      76        0.0%
BITBIGSFRlhhh        1      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      30        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Apr 23 16:04:09 2024

                      l51 4220                        l63 4298                        l64 4284  
                      l73 4244                        l66 42C8                        l74 4230  
                      l76 4274                        l85 433A                        l99 411C  
                      u10 4316                        u11 4312                        u21 4324  
                      u30 4292                        u31 428E                        u40 42A6  
                      u41 42A2                        u50 423E                        u51 423A  
                      u60 4252                        u61 424E                       l801 420C  
                     l803 421A                       l813 42A6                       l805 4276  
                     l821 4226                       l815 42A8                       l807 427A  
                     l831 425A                       l823 423E                       l817 42AE  
                     l809 4292                       l827 4252                       l819 4222  
                     l851 40B6                       l781 4316                       l829 4254  
                     l861 40E2                       l853 40BA                       l783 431A  
                     l791 4200                       l871 411E                       l863 40EC  
                     l855 40C4                       l785 432E                       l793 4202  
                     l873 4134                       l865 40FE                       l857 40C6  
                     l849 40B2                       l779 4306                       l795 4204  
                     l787 41CC                       l875 4136                       l867 4100  
                     l859 40DC                       l797 4206                       l789 41FE  
                     l869 4116                       l799 420A                       u110 40FE  
                     u111 40FA                       u127 40D0                       u137 410A  
                     u147 4128                       u157 4142                       u167 4264  
                     u177 42B8                       wreg 3FE8            ?_displayNumber 0001  
                    _LATA 3FBA                      _LATB 3FBB                      _LATD 3FBD  
                    i2l58 41C4                      i2l59 41CA                      _main 40B2  
                    _init 41CC                      fsr2h 3FDA                      indf2 3FDF  
                    fsr1l 3FE1                      fsr2l 3FD9                      prodl 3FF3  
                    start 40AE              ___param_bank 0000          __end_of_INT0_ISR 41CC  
                   ?_main 0001                     ?_init 0001                     i2l833 4158  
                   i2l843 417A                     i2l835 4166                     i2l845 419C  
                   i2l837 4176                     i2l847 41B4                     _PORTA 3FCA  
                   _PORTB 3FCB                     _PORTD 3FCD       displayNumber@F16523 0014  
                   _TRISA 3FC2                     _TRISB 3FC3                     _TRISD 3FC5  
                   tablat 3FF5                     plusw1 3FE3                     plusw2 3FDB  
                   status 3FD8           __initialization 42CA              __end_of_main 4156  
            __end_of_init 4222       displayNumber@number 000E                    ??_main 0012  
                  ??_init 000F             __activetblptr 0000           ??_displayNumber 0004  
              _SecretCode 001E                    _ANSELA 3A40                    _ANSELB 3A50  
                  _ANSELD 3A70                    i2u7_40 4176                    i2u7_41 4172  
                  i2u8_40 418C                    i2u8_41 4184                    i2u9_48 418E  
                  isa$std 0001              __pdataCOMRAM 0014              __mediumconst 0000  
                  tblptrh 3FF7                    tblptrl 3FF6                    tblptru 3FF8  
              __accesstop 0060   __end_of__initialization 42FE                 ?_INT0_ISR 0001  
           ___rparam_used 0001            __pcstackCOMRAM 0001             INT0_ISR@beeps 0003  
              ??_INT0_ISR 0001                   IVTBASEH 3FD6                   IVTBASEL 3FD5  
                 IVTBASEU 3FD7                   i2u10_40 41C4                   i2u10_41 41C0  
                 i2u18_47 415E                   i2u19_47 41A6                _firstInput 0021  
                 __Hparam 0000                   __Lparam 0000              __psmallconst 2000  
                 __pcinit 42CA                   __ramtop 2000             ivt0x4008_base 4008  
                 __ptext0 40B2                   __ptext1 41CC                   __ptext2 4222  
                 __ptext3 4276                   __ptext4 4304                   __ptext5 4158  
           ??_getPR1Input 000F             ??_getPR2Input 000F      end_of_initialization 42FE  
                 postdec1 3FE5                   postinc0 3FEE                 _PORTAbits 3FCA  
               _PORTBbits 3FCB                 _PORTDbits 3FCD     __end_of_displayNumber 433C  
     __end_of_getPR1Input 42CA       __end_of_getPR2Input 4276             __pidataCOMRAM 433C  
     start_initialization 42CA  displayNumber@lookupTable 0004               __pbssCOMRAM 001F  
             _getPR1Input 4276               _getPR2Input 4222               __pivt0x4008 4008  
             __smallconst 2000                  _INT0_ISR 4158                  _IPR1bits 3981  
                _PIE1bits 3991                  _IVTBASEH 3FD6                  _IVTBASEL 3FD5  
                _IVTBASEU 3FD7                  _PIR1bits 39A1         ivt0x4008_undefint 40AC  
             _INTCON0bits 3FD2                 copy_data0 42DE                  __Hrparam 0000  
                __Lrparam 0000                  _readCode 001F          getPR1Input@count 0011  
                isa$xinst 0000               _secondInput 0020          getPR2Input@count 0011  
            ?_getPR1Input 0001              ?_getPR2Input 0001                  intlevel2 0000  
           _displayNumber 4304  
