

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Apr 11 15:37:13 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F47K42 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	nvCOMRAM
    59   000016                     __pnvCOMRAM:
    60                           	callstack 0
    61   000016                     _key:
    62                           	callstack 0
    63   000016                     	ds	1
    64   000000                     _ANSELB	set	14928
    65   000000                     _LATB	set	16315
    66   000000                     _TRISB	set	16323
    67   000000                     _PORTB	set	16331
    68   000000                     _PORTD	set	16333
    69   000000                     _TRISD	set	16325
    70   000000                     _LATD	set	16317
    71   000000                     _ANSELD	set	14960
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76   002398                     __pcinit:
    77                           	callstack 0
    78   002398                     start_initialization:
    79                           	callstack 0
    80   002398                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (4 bytes)
    84   002398  6A15               	clrf	(__pbssCOMRAM+3)& (0+255),c
    85   00239A  6A14               	clrf	(__pbssCOMRAM+2)& (0+255),c
    86   00239C  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
    87   00239E  6A12               	clrf	__pbssCOMRAM& (0+255),c
    88   0023A0                     end_of_initialization:
    89                           	callstack 0
    90   0023A0                     __end_of__initialization:
    91                           	callstack 0
    92   0023A0  0100               	movlb	0
    93   0023A2  EF37  F011         	goto	_main	;jump to C main() function
    94                           
    95                           	psect	bssCOMRAM
    96   000012                     __pbssCOMRAM:
    97                           	callstack 0
    98   000012                     _Result:
    99                           	callstack 0
   100   000012                     	ds	1
   101   000013                     _Operation:
   102                           	callstack 0
   103   000013                     	ds	1
   104   000014                     _input_Y:
   105                           	callstack 0
   106   000014                     	ds	1
   107   000015                     _input_X:
   108                           	callstack 0
   109   000015                     	ds	1
   110                           
   111                           	psect	cstackCOMRAM
   112   000001                     __pcstackCOMRAM:
   113                           	callstack 0
   114   000001                     ?___awdiv:
   115                           	callstack 0
   116   000001                     display@Result:
   117                           	callstack 0
   118   000001                     ___awdiv@dividend:
   119                           	callstack 0
   120                           
   121                           ; 2 bytes @ 0x0
   122   000001                     	ds	2
   123   000003                     ___awdiv@divisor:
   124                           	callstack 0
   125                           
   126                           ; 2 bytes @ 0x2
   127   000003                     	ds	2
   128   000005                     ___awdiv@counter:
   129                           	callstack 0
   130                           
   131                           ; 1 bytes @ 0x4
   132   000005                     	ds	1
   133   000006                     ___awdiv@sign:
   134                           	callstack 0
   135                           
   136                           ; 1 bytes @ 0x5
   137   000006                     	ds	1
   138   000007                     ___awdiv@quotient:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x6
   142   000007                     	ds	2
   143   000009                     evaluate@input_X:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x8
   147   000009                     	ds	2
   148   00000B                     evaluate@input_Y:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0xA
   152   00000B                     	ds	2
   153   00000D                     evaluate@Operation:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0xC
   157   00000D                     	ds	2
   158   00000F                     ??_evaluate:
   159                           
   160                           ; 1 bytes @ 0xE
   161   00000F                     	ds	2
   162   000011                     evaluate@result:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0x10
   166   000011                     	ds	1
   167   000012                     
   168                           ; 1 bytes @ 0x11
   169 ;;
   170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   171 ;;
   172 ;; *************** function _main *****************
   173 ;; Defined at:
   174 ;;		line 225 in file "newmain.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   192 ;;Total ram usage:        0 bytes
   193 ;; Hardware stack levels required when called: 2
   194 ;; This function calls:
   195 ;;		_display
   196 ;;		_evaluate
   197 ;;		_getInputOperation
   198 ;;		_getInputX
   199 ;;		_getInputY
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text0
   206   00226E                     __ptext0:
   207                           	callstack 0
   208   00226E                     _main:
   209                           	callstack 29
   210   00226E                     
   211                           ;newmain.c: 228:     TRISB = 0xF0;
   212   00226E  0EF0               	movlw	240
   213   002270  6EC3               	movwf	195,c	;volatile
   214                           
   215                           ;newmain.c: 229:     LATB = 0;
   216   002272  0E00               	movlw	0
   217   002274  6EBB               	movwf	187,c	;volatile
   218                           
   219                           ;newmain.c: 230:     PORTB = 0;
   220   002276  0E00               	movlw	0
   221   002278  6ECB               	movwf	203,c	;volatile
   222                           
   223                           ;newmain.c: 231:     ANSELB = 0;
   224   00227A  0E00               	movlw	0
   225   00227C  013A               	movlb	58	; () banked
   226   00227E  6F50               	movwf	80,b	;volatile
   227                           
   228                           ;newmain.c: 233:     TRISD = 0;
   229   002280  0E00               	movlw	0
   230   002282  6EC5               	movwf	197,c	;volatile
   231                           
   232                           ;newmain.c: 234:     LATD = 0;
   233   002284  0E00               	movlw	0
   234   002286  6EBD               	movwf	189,c	;volatile
   235                           
   236                           ;newmain.c: 235:     PORTD = 0;
   237   002288  0E00               	movlw	0
   238   00228A  6ECD               	movwf	205,c	;volatile
   239                           
   240                           ;newmain.c: 236:     ANSELD = 0;
   241   00228C  0E00               	movlw	0
   242   00228E  6F70               	movwf	112,b	;volatile
   243   002290                     l1123:
   244                           
   245                           ;newmain.c: 240:     {;newmain.c: 241:         getInputX();
   246   002290  EC8C  F011         	call	_getInputX	;wreg free
   247   002294                     
   248                           ;newmain.c: 242:         PORTD = 0x01;
   249   002294  0E01               	movlw	1
   250   002296  6ECD               	movwf	205,c	;volatile
   251   002298                     
   252                           ;newmain.c: 244:         getInputOperation();
   253   002298  ECB1  F011         	call	_getInputOperation	;wreg free
   254   00229C                     
   255                           ;newmain.c: 245:         PORTD = 0x03;
   256   00229C  0E03               	movlw	3
   257   00229E  6ECD               	movwf	205,c	;volatile
   258   0022A0                     
   259                           ;newmain.c: 247:         getInputY();
   260   0022A0  EC67  F011         	call	_getInputY	;wreg free
   261   0022A4                     
   262                           ;newmain.c: 248:         PORTD = 0x02;
   263   0022A4  0E02               	movlw	2
   264   0022A6  6ECD               	movwf	205,c	;volatile
   265   0022A8                     
   266                           ;newmain.c: 260:         Result = evaluate(input_X,input_Y,Operation);
   267   0022A8  C015  F009         	movff	_input_X,evaluate@input_X
   268   0022AC  6A0A               	clrf	(evaluate@input_X+1)^0,c
   269   0022AE  C014  F00B         	movff	_input_Y,evaluate@input_Y
   270   0022B2  6A0C               	clrf	(evaluate@input_Y+1)^0,c
   271   0022B4  C013  F00D         	movff	_Operation,evaluate@Operation
   272   0022B8  6A0E               	clrf	(evaluate@Operation+1)^0,c
   273   0022BA  ECF3  F010         	call	_evaluate	;wreg free
   274   0022BE  6E12               	movwf	_Result^0,c
   275   0022C0                     
   276                           ;newmain.c: 261:         display(Result);
   277   0022C0  5012               	movf	_Result^0,w,c
   278   0022C2  ECD3  F011         	call	_display
   279                           
   280                           ;newmain.c: 272:         if (0)
   281   0022C6  EF48  F011         	goto	l1123
   282   0022CA  EFFE  F0FF         	goto	start
   283   0022CE                     __end_of_main:
   284                           	callstack 0
   285                           
   286 ;; *************** function _getInputY *****************
   287 ;; Defined at:
   288 ;;		line 165 in file "newmain.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels used: 1
   308 ;; Hardware stack levels required when called: 1
   309 ;; This function calls:
   310 ;;		_getKeypress
   311 ;; This function is called by:
   312 ;;		_main
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text1
   317   0022CE                     __ptext1:
   318                           	callstack 0
   319   0022CE                     _getInputY:
   320                           	callstack 29
   321   0022CE                     
   322                           ;newmain.c: 167:     input_Y = 0;
   323   0022CE  0E00               	movlw	0
   324   0022D0  6E14               	movwf	_input_Y^0,c
   325   0022D2                     
   326                           ;newmain.c: 168:     key = 0xFF;
   327   0022D2  6816               	setf	_key^0,c
   328                           
   329                           ;newmain.c: 169:     while (key >= 0x0A){
   330   0022D4  EF6F  F011         	goto	l937
   331   0022D8                     l935:
   332                           
   333                           ;newmain.c: 170:         key = getKeypress();
   334   0022D8  EC01  F010         	call	_getKeypress	;wreg free
   335   0022DC  6E16               	movwf	_key^0,c
   336   0022DE                     l937:
   337                           
   338                           ;newmain.c: 169:     while (key >= 0x0A){
   339   0022DE  0E0A               	movlw	10
   340   0022E0  6016               	cpfslt	_key^0,c
   341   0022E2  EF75  F011         	goto	u91
   342   0022E6  EF77  F011         	goto	u90
   343   0022EA                     u91:
   344   0022EA  EF6C  F011         	goto	l935
   345   0022EE                     u90:
   346   0022EE                     
   347                           ;newmain.c: 174:     input_Y += 10*key;
   348   0022EE  5016               	movf	_key^0,w,c
   349   0022F0  0D0A               	mullw	10
   350   0022F2  50F3               	movf	243,w,c
   351   0022F4  2614               	addwf	_input_Y^0,f,c
   352   0022F6                     
   353                           ;newmain.c: 175:     key = 0xFF;
   354   0022F6  6816               	setf	_key^0,c
   355                           
   356                           ;newmain.c: 176:     while (key >= 0x0A){
   357   0022F8  EF81  F011         	goto	l945
   358   0022FC                     l943:
   359                           
   360                           ;newmain.c: 177:         key = getKeypress();
   361   0022FC  EC01  F010         	call	_getKeypress	;wreg free
   362   002300  6E16               	movwf	_key^0,c
   363   002302                     l945:
   364                           
   365                           ;newmain.c: 176:     while (key >= 0x0A){
   366   002302  0E0A               	movlw	10
   367   002304  6016               	cpfslt	_key^0,c
   368   002306  EF87  F011         	goto	u101
   369   00230A  EF89  F011         	goto	u100
   370   00230E                     u101:
   371   00230E  EF7E  F011         	goto	l943
   372   002312                     u100:
   373   002312                     
   374                           ;newmain.c: 180:     input_Y += key;
   375   002312  5016               	movf	_key^0,w,c
   376   002314  2614               	addwf	_input_Y^0,f,c
   377   002316  0012               	return		;funcret
   378   002318                     __end_of_getInputY:
   379                           	callstack 0
   380                           
   381 ;; *************** function _getInputX *****************
   382 ;; Defined at:
   383 ;;		line 146 in file "newmain.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; Hardware stack levels required when called: 1
   404 ;; This function calls:
   405 ;;		_getKeypress
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text2
   412   002318                     __ptext2:
   413                           	callstack 0
   414   002318                     _getInputX:
   415                           	callstack 29
   416   002318                     
   417                           ;newmain.c: 148:     input_X = 0;
   418   002318  0E00               	movlw	0
   419   00231A  6E15               	movwf	_input_X^0,c
   420   00231C                     
   421                           ;newmain.c: 149:     key = 0xFF;
   422   00231C  6816               	setf	_key^0,c
   423                           
   424                           ;newmain.c: 150:     while (key >= 0x0A){
   425   00231E  EF94  F011         	goto	l919
   426   002322                     l917:
   427                           
   428                           ;newmain.c: 151:         key = getKeypress();
   429   002322  EC01  F010         	call	_getKeypress	;wreg free
   430   002326  6E16               	movwf	_key^0,c
   431   002328                     l919:
   432                           
   433                           ;newmain.c: 150:     while (key >= 0x0A){
   434   002328  0E0A               	movlw	10
   435   00232A  6016               	cpfslt	_key^0,c
   436   00232C  EF9A  F011         	goto	u71
   437   002330  EF9C  F011         	goto	u70
   438   002334                     u71:
   439   002334  EF91  F011         	goto	l917
   440   002338                     u70:
   441   002338                     
   442                           ;newmain.c: 155:     input_X += 10*key;
   443   002338  5016               	movf	_key^0,w,c
   444   00233A  0D0A               	mullw	10
   445   00233C  50F3               	movf	243,w,c
   446   00233E  2615               	addwf	_input_X^0,f,c
   447   002340                     
   448                           ;newmain.c: 156:     key = 0xFF;
   449   002340  6816               	setf	_key^0,c
   450                           
   451                           ;newmain.c: 157:     while (key >= 0x0A){
   452   002342  EFA6  F011         	goto	l927
   453   002346                     l925:
   454                           
   455                           ;newmain.c: 158:         key = getKeypress();
   456   002346  EC01  F010         	call	_getKeypress	;wreg free
   457   00234A  6E16               	movwf	_key^0,c
   458   00234C                     l927:
   459                           
   460                           ;newmain.c: 157:     while (key >= 0x0A){
   461   00234C  0E0A               	movlw	10
   462   00234E  6016               	cpfslt	_key^0,c
   463   002350  EFAC  F011         	goto	u81
   464   002354  EFAE  F011         	goto	u80
   465   002358                     u81:
   466   002358  EFA3  F011         	goto	l925
   467   00235C                     u80:
   468   00235C                     
   469                           ;newmain.c: 161:     input_X += key;
   470   00235C  5016               	movf	_key^0,w,c
   471   00235E  2615               	addwf	_input_X^0,f,c
   472   002360  0012               	return		;funcret
   473   002362                     __end_of_getInputX:
   474                           	callstack 0
   475                           
   476 ;; *************** function _getInputOperation *****************
   477 ;; Defined at:
   478 ;;		line 183 in file "newmain.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 1
   499 ;; This function calls:
   500 ;;		_getKeypress
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text3
   507   002362                     __ptext3:
   508                           	callstack 0
   509   002362                     _getInputOperation:
   510                           	callstack 29
   511   002362                     
   512                           ;newmain.c: 185:     Operation = 0;
   513   002362  0E00               	movlw	0
   514   002364  6E13               	movwf	_Operation^0,c
   515   002366                     
   516                           ;newmain.c: 186:     key = 0xFF;
   517   002366  6816               	setf	_key^0,c
   518                           
   519                           ;newmain.c: 187:     while (key > 0x0F || key < 0x0A)
   520   002368  EFB9  F011         	goto	l955
   521   00236C                     l953:
   522                           
   523                           ;newmain.c: 188:     {;newmain.c: 189:         key = getKeypress();
   524   00236C  EC01  F010         	call	_getKeypress	;wreg free
   525   002370  6E16               	movwf	_key^0,c
   526   002372                     l955:
   527                           
   528                           ;newmain.c: 187:     while (key > 0x0F || key < 0x0A)
   529   002372  0E10               	movlw	16
   530   002374  6016               	cpfslt	_key^0,c
   531   002376  EFBF  F011         	goto	u111
   532   00237A  EFC1  F011         	goto	u110
   533   00237E                     u111:
   534   00237E  EFB6  F011         	goto	l953
   535   002382                     u110:
   536   002382  0E09               	movlw	9
   537   002384  6416               	cpfsgt	_key^0,c
   538   002386  EFC7  F011         	goto	u121
   539   00238A  EFC9  F011         	goto	u120
   540   00238E                     u121:
   541   00238E  EFB6  F011         	goto	l953
   542   002392                     u120:
   543   002392                     
   544                           ;newmain.c: 192:         Operation = key;
   545   002392  C016  F013         	movff	_key,_Operation
   546   002396  0012               	return		;funcret
   547   002398                     __end_of_getInputOperation:
   548                           	callstack 0
   549                           
   550 ;; *************** function _getKeypress *****************
   551 ;; Defined at:
   552 ;;		line 34 in file "newmain.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      unsigned char 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_getInputX
   576 ;;		_getInputY
   577 ;;		_getInputOperation
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text4
   582   002002                     __ptext4:
   583                           	callstack 0
   584   002002                     _getKeypress:
   585                           	callstack 29
   586   002002                     
   587                           ;newmain.c: 38:     key = 0xFF;
   588   002002  6816               	setf	_key^0,c
   589   002004                     
   590                           ;newmain.c: 39:     PORTB = 0x01;
   591   002004  0E01               	movlw	1
   592   002006  6ECB               	movwf	203,c	;volatile
   593                           
   594                           ;newmain.c: 41:     switch (PORTB)
   595   002008  EF12  F010         	goto	l797
   596   00200C                     l779:
   597                           
   598                           ;newmain.c: 44:             {;newmain.c: 45:                 return 0x0D;
   599   00200C  0E0D               	movlw	13
   600   00200E  EF90  F010         	goto	l31
   601   002012                     l783:
   602                           
   603                           ;newmain.c: 50:                 return 0x0C;
   604   002012  0E0C               	movlw	12
   605   002014  EF90  F010         	goto	l31
   606   002018                     l787:
   607                           
   608                           ;newmain.c: 55:                 return 0x0B;
   609   002018  0E0B               	movlw	11
   610   00201A  EF90  F010         	goto	l31
   611   00201E                     l791:
   612                           
   613                           ;newmain.c: 60:                 return 0x0A;
   614   00201E  0E0A               	movlw	10
   615   002020  EF90  F010         	goto	l31
   616   002024                     l797:
   617   002024  50CB               	movf	203,w,c	;volatile
   618                           
   619                           ; Switch size 1, requested type "simple"
   620                           ; Number of cases is 4, Range of values is 17 to 129
   621                           ; switch strategies available:
   622                           ; Name         Instructions Cycles
   623                           ; simple_byte           13     7 (average)
   624                           ;	Chosen strategy is simple_byte
   625   002026  0A11               	xorlw	17	; case 17
   626   002028  B4D8               	btfsc	status,2,c
   627   00202A  EF06  F010         	goto	l779
   628   00202E  0A30               	xorlw	48	; case 33
   629   002030  B4D8               	btfsc	status,2,c
   630   002032  EF09  F010         	goto	l783
   631   002036  0A60               	xorlw	96	; case 65
   632   002038  B4D8               	btfsc	status,2,c
   633   00203A  EF0C  F010         	goto	l787
   634   00203E  0AC0               	xorlw	192	; case 129
   635   002040  B4D8               	btfsc	status,2,c
   636   002042  EF0F  F010         	goto	l791
   637   002046  EF25  F010         	goto	l799
   638   00204A                     l799:
   639                           
   640                           ;newmain.c: 66:     PORTB = 0x02;
   641   00204A  0E02               	movlw	2
   642   00204C  6ECB               	movwf	203,c	;volatile
   643                           
   644                           ;newmain.c: 68:     switch (PORTB)
   645   00204E  EF35  F010         	goto	l819
   646   002052                     l801:
   647                           
   648                           ;newmain.c: 71:                 return 0x0F;
   649   002052  0E0F               	movlw	15
   650   002054  EF90  F010         	goto	l31
   651   002058                     l805:
   652                           
   653                           ;newmain.c: 76:                 return 9;
   654   002058  0E09               	movlw	9
   655   00205A  EF90  F010         	goto	l31
   656   00205E                     l809:
   657                           
   658                           ;newmain.c: 81:                 return 6;
   659   00205E  0E06               	movlw	6
   660   002060  EF90  F010         	goto	l31
   661   002064                     l813:
   662                           
   663                           ;newmain.c: 86:                 return 3;
   664   002064  0E03               	movlw	3
   665   002066  EF90  F010         	goto	l31
   666   00206A                     l819:
   667   00206A  50CB               	movf	203,w,c	;volatile
   668                           
   669                           ; Switch size 1, requested type "simple"
   670                           ; Number of cases is 4, Range of values is 18 to 130
   671                           ; switch strategies available:
   672                           ; Name         Instructions Cycles
   673                           ; simple_byte           13     7 (average)
   674                           ;	Chosen strategy is simple_byte
   675   00206C  0A12               	xorlw	18	; case 18
   676   00206E  B4D8               	btfsc	status,2,c
   677   002070  EF29  F010         	goto	l801
   678   002074  0A30               	xorlw	48	; case 34
   679   002076  B4D8               	btfsc	status,2,c
   680   002078  EF2C  F010         	goto	l805
   681   00207C  0A60               	xorlw	96	; case 66
   682   00207E  B4D8               	btfsc	status,2,c
   683   002080  EF2F  F010         	goto	l809
   684   002084  0AC0               	xorlw	192	; case 130
   685   002086  B4D8               	btfsc	status,2,c
   686   002088  EF32  F010         	goto	l813
   687   00208C  EF48  F010         	goto	l821
   688   002090                     l821:
   689                           
   690                           ;newmain.c: 91:     PORTB = 0x04;
   691   002090  0E04               	movlw	4
   692   002092  6ECB               	movwf	203,c	;volatile
   693                           
   694                           ;newmain.c: 93:     switch (PORTB)
   695   002094  EF58  F010         	goto	l841
   696   002098                     l823:
   697                           
   698                           ;newmain.c: 96:                 return 0;
   699   002098  0E00               	movlw	0
   700   00209A  EF90  F010         	goto	l31
   701   00209E                     l827:
   702                           
   703                           ;newmain.c: 101:                 return 8;
   704   00209E  0E08               	movlw	8
   705   0020A0  EF90  F010         	goto	l31
   706   0020A4                     l831:
   707                           
   708                           ;newmain.c: 106:                 return 5;
   709   0020A4  0E05               	movlw	5
   710   0020A6  EF90  F010         	goto	l31
   711   0020AA                     l835:
   712                           
   713                           ;newmain.c: 111:                 return 2;
   714   0020AA  0E02               	movlw	2
   715   0020AC  EF90  F010         	goto	l31
   716   0020B0                     l841:
   717   0020B0  50CB               	movf	203,w,c	;volatile
   718                           
   719                           ; Switch size 1, requested type "simple"
   720                           ; Number of cases is 4, Range of values is 20 to 132
   721                           ; switch strategies available:
   722                           ; Name         Instructions Cycles
   723                           ; simple_byte           13     7 (average)
   724                           ;	Chosen strategy is simple_byte
   725   0020B2  0A14               	xorlw	20	; case 20
   726   0020B4  B4D8               	btfsc	status,2,c
   727   0020B6  EF4C  F010         	goto	l823
   728   0020BA  0A30               	xorlw	48	; case 36
   729   0020BC  B4D8               	btfsc	status,2,c
   730   0020BE  EF4F  F010         	goto	l827
   731   0020C2  0A60               	xorlw	96	; case 68
   732   0020C4  B4D8               	btfsc	status,2,c
   733   0020C6  EF52  F010         	goto	l831
   734   0020CA  0AC0               	xorlw	192	; case 132
   735   0020CC  B4D8               	btfsc	status,2,c
   736   0020CE  EF55  F010         	goto	l835
   737   0020D2  EF6B  F010         	goto	l843
   738   0020D6                     l843:
   739                           
   740                           ;newmain.c: 116:     PORTB = 0x08;
   741   0020D6  0E08               	movlw	8
   742   0020D8  6ECB               	movwf	203,c	;volatile
   743                           
   744                           ;newmain.c: 118:     switch (PORTB)
   745   0020DA  EF7B  F010         	goto	l863
   746   0020DE                     l845:
   747                           
   748                           ;newmain.c: 121:                 return 0x0E;
   749   0020DE  0E0E               	movlw	14
   750   0020E0  EF90  F010         	goto	l31
   751   0020E4                     l849:
   752                           
   753                           ;newmain.c: 126:                 return 7;
   754   0020E4  0E07               	movlw	7
   755   0020E6  EF90  F010         	goto	l31
   756   0020EA                     l853:
   757                           
   758                           ;newmain.c: 131:                 return 4;
   759   0020EA  0E04               	movlw	4
   760   0020EC  EF90  F010         	goto	l31
   761   0020F0                     l857:
   762                           
   763                           ;newmain.c: 136:                 return 1;
   764   0020F0  0E01               	movlw	1
   765   0020F2  EF90  F010         	goto	l31
   766   0020F6                     l863:
   767   0020F6  50CB               	movf	203,w,c	;volatile
   768                           
   769                           ; Switch size 1, requested type "simple"
   770                           ; Number of cases is 4, Range of values is 24 to 136
   771                           ; switch strategies available:
   772                           ; Name         Instructions Cycles
   773                           ; simple_byte           13     7 (average)
   774                           ;	Chosen strategy is simple_byte
   775   0020F8  0A18               	xorlw	24	; case 24
   776   0020FA  B4D8               	btfsc	status,2,c
   777   0020FC  EF6F  F010         	goto	l845
   778   002100  0A30               	xorlw	48	; case 40
   779   002102  B4D8               	btfsc	status,2,c
   780   002104  EF72  F010         	goto	l849
   781   002108  0A60               	xorlw	96	; case 72
   782   00210A  B4D8               	btfsc	status,2,c
   783   00210C  EF75  F010         	goto	l853
   784   002110  0AC0               	xorlw	192	; case 136
   785   002112  B4D8               	btfsc	status,2,c
   786   002114  EF78  F010         	goto	l857
   787   002118  EF8E  F010         	goto	l53
   788   00211C                     l53:
   789                           
   790                           ;newmain.c: 141:     key = 0xFF;
   791   00211C  6816               	setf	_key^0,c
   792   00211E                     
   793                           ;newmain.c: 142:     return key;
   794   00211E  5016               	movf	_key^0,w,c
   795   002120                     l31:
   796   002120  0012               	return		;funcret
   797   002122                     __end_of_getKeypress:
   798                           	callstack 0
   799                           
   800 ;; *************** function _evaluate *****************
   801 ;; Defined at:
   802 ;;		line 197 in file "newmain.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;  input_X         2    8[COMRAM] int 
   805 ;;  input_Y         2   10[COMRAM] int 
   806 ;;  Operation       2   12[COMRAM] int 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  result          1   16[COMRAM] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      unsigned char 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   818 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   821 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   822 ;;Total ram usage:        9 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 1
   825 ;; This function calls:
   826 ;;		___awdiv
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text5
   833   0021E6                     __ptext5:
   834                           	callstack 0
   835   0021E6                     _evaluate:
   836                           	callstack 29
   837   0021E6                     
   838                           ;newmain.c: 200:     switch (Operation)
   839   0021E6  EF17  F011         	goto	l1111
   840   0021EA                     l1085:
   841                           
   842                           ;newmain.c: 203:                 result = input_X + input_Y;
   843   0021EA  5009               	movf	evaluate@input_X^0,w,c
   844   0021EC  240B               	addwf	evaluate@input_Y^0,w,c
   845   0021EE  6E11               	movwf	evaluate@result^0,c
   846   0021F0                     l1087:
   847                           
   848                           ;newmain.c: 204:                 return result;
   849   0021F0  5011               	movf	evaluate@result^0,w,c
   850   0021F2  EF36  F011         	goto	l82
   851   0021F6                     l1091:
   852                           
   853                           ;newmain.c: 206:                 result = input_X - input_Y;
   854   0021F6  500B               	movf	evaluate@input_Y^0,w,c
   855   0021F8  5C09               	subwf	evaluate@input_X^0,w,c
   856   0021FA  6E11               	movwf	evaluate@result^0,c
   857   0021FC  EFF8  F010         	goto	l1087
   858   002200                     l1097:
   859                           
   860                           ;newmain.c: 209:                 result = input_X * input_Y;
   861   002200  5009               	movf	evaluate@input_X^0,w,c
   862   002202  020B               	mulwf	evaluate@input_Y^0,c
   863   002204  006F FFCC  F011    	movff	prodl,evaluate@result
   864   00220A  EFF8  F010         	goto	l1087
   865   00220E                     l1103:
   866                           
   867                           ;newmain.c: 212:                 result = input_X / input_Y;
   868   00220E  C009  F001         	movff	evaluate@input_X,___awdiv@dividend
   869   002212  C00A  F002         	movff	evaluate@input_X+1,___awdiv@dividend+1
   870   002216  C00B  F003         	movff	evaluate@input_Y,___awdiv@divisor
   871   00221A  C00C  F004         	movff	evaluate@input_Y+1,___awdiv@divisor+1
   872   00221E  EC91  F010         	call	___awdiv	;wreg free
   873   002222  5001               	movf	?___awdiv^0,w,c
   874   002224  6E11               	movwf	evaluate@result^0,c
   875   002226  EFF8  F010         	goto	l1087
   876   00222A                     l1109:
   877                           
   878                           ;newmain.c: 216:     }
   879   00222A  EF35  F011         	goto	l1113
   880   00222E                     l1111:
   881   00222E  C00D  F00F         	movff	evaluate@Operation,??_evaluate
   882   002232  C00E  F010         	movff	evaluate@Operation+1,??_evaluate+1
   883                           
   884                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   885                           ; Switch size 1, requested type "simple"
   886                           ; Number of cases is 1, Range of values is 0 to 0
   887                           ; switch strategies available:
   888                           ; Name         Instructions Cycles
   889                           ; simple_byte            4     3 (average)
   890                           ;	Chosen strategy is simple_byte
   891   002236  5010               	movf	(??_evaluate+1)^0,w,c
   892   002238  0A00               	xorlw	0	; case 0
   893   00223A  B4D8               	btfsc	status,2,c
   894   00223C  EF22  F011         	goto	l1161
   895   002240  EF15  F011         	goto	l1109
   896   002244                     l1161:
   897                           
   898                           ; Switch size 1, requested type "simple"
   899                           ; Number of cases is 4, Range of values is 10 to 13
   900                           ; switch strategies available:
   901                           ; Name         Instructions Cycles
   902                           ; simple_byte           13     7 (average)
   903                           ;	Chosen strategy is simple_byte
   904   002244  500F               	movf	??_evaluate^0,w,c
   905   002246  0A0A               	xorlw	10	; case 10
   906   002248  B4D8               	btfsc	status,2,c
   907   00224A  EFF5  F010         	goto	l1085
   908   00224E  0A01               	xorlw	1	; case 11
   909   002250  B4D8               	btfsc	status,2,c
   910   002252  EFFB  F010         	goto	l1091
   911   002256  0A07               	xorlw	7	; case 12
   912   002258  B4D8               	btfsc	status,2,c
   913   00225A  EF00  F011         	goto	l1097
   914   00225E  0A01               	xorlw	1	; case 13
   915   002260  B4D8               	btfsc	status,2,c
   916   002262  EF07  F011         	goto	l1103
   917   002266  EF15  F011         	goto	l1109
   918   00226A                     l1113:
   919                           
   920                           ;newmain.c: 217:     return result;
   921   00226A  0E00               	movlw	0
   922   00226C                     l82:
   923   00226C  0012               	return		;funcret
   924   00226E                     __end_of_evaluate:
   925                           	callstack 0
   926                           
   927 ;; *************** function ___awdiv *****************
   928 ;; Defined at:
   929 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  dividend        2    0[COMRAM] int 
   932 ;;  divisor         2    2[COMRAM] int 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  quotient        2    6[COMRAM] int 
   935 ;;  sign            1    5[COMRAM] unsigned char 
   936 ;;  counter         1    4[COMRAM] unsigned char 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  2    0[COMRAM] int 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   947 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   949 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   950 ;;Total ram usage:        8 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_evaluate
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text6
   960   002122                     __ptext6:
   961                           	callstack 0
   962   002122                     ___awdiv:
   963                           	callstack 29
   964   002122  0E00               	movlw	0
   965   002124  6E06               	movwf	___awdiv@sign^0,c
   966   002126  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   967   002128  EF9A  F010         	goto	u130
   968   00212C  EF98  F010         	goto	u131
   969   002130                     u131:
   970   002130  EFA0  F010         	goto	l1047
   971   002134                     u130:
   972   002134  6C03               	negf	___awdiv@divisor^0,c
   973   002136  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   974   002138  B0D8               	btfsc	status,0,c
   975   00213A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   976   00213C  0E01               	movlw	1
   977   00213E  6E06               	movwf	___awdiv@sign^0,c
   978   002140                     l1047:
   979   002140  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   980   002142  EFA7  F010         	goto	u140
   981   002146  EFA5  F010         	goto	u141
   982   00214A                     u141:
   983   00214A  EFAD  F010         	goto	l1053
   984   00214E                     u140:
   985   00214E  6C01               	negf	___awdiv@dividend^0,c
   986   002150  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   987   002152  B0D8               	btfsc	status,0,c
   988   002154  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   989   002156  0E01               	movlw	1
   990   002158  1A06               	xorwf	___awdiv@sign^0,f,c
   991   00215A                     l1053:
   992   00215A  0E00               	movlw	0
   993   00215C  6E08               	movwf	(___awdiv@quotient+1)^0,c
   994   00215E  0E00               	movlw	0
   995   002160  6E07               	movwf	___awdiv@quotient^0,c
   996   002162  5003               	movf	___awdiv@divisor^0,w,c
   997   002164  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   998   002166  B4D8               	btfsc	status,2,c
   999   002168  EFB8  F010         	goto	u151
  1000   00216C  EFBA  F010         	goto	u150
  1001   002170                     u151:
  1002   002170  EFE2  F010         	goto	l1075
  1003   002174                     u150:
  1004   002174  0E01               	movlw	1
  1005   002176  6E05               	movwf	___awdiv@counter^0,c
  1006   002178  EFC2  F010         	goto	l1061
  1007   00217C                     l1059:
  1008   00217C  90D8               	bcf	status,0,c
  1009   00217E  3603               	rlcf	___awdiv@divisor^0,f,c
  1010   002180  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1011   002182  2A05               	incf	___awdiv@counter^0,f,c
  1012   002184                     l1061:
  1013   002184  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1014   002186  EFC7  F010         	goto	u161
  1015   00218A  EFC9  F010         	goto	u160
  1016   00218E                     u161:
  1017   00218E  EFBE  F010         	goto	l1059
  1018   002192                     u160:
  1019   002192                     l1063:
  1020   002192  90D8               	bcf	status,0,c
  1021   002194  3607               	rlcf	___awdiv@quotient^0,f,c
  1022   002196  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1023   002198  5003               	movf	___awdiv@divisor^0,w,c
  1024   00219A  5C01               	subwf	___awdiv@dividend^0,w,c
  1025   00219C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1026   00219E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1027   0021A0  A0D8               	btfss	status,0,c
  1028   0021A2  EFD5  F010         	goto	u171
  1029   0021A6  EFD7  F010         	goto	u170
  1030   0021AA                     u171:
  1031   0021AA  EFDC  F010         	goto	l1071
  1032   0021AE                     u170:
  1033   0021AE  5003               	movf	___awdiv@divisor^0,w,c
  1034   0021B0  5E01               	subwf	___awdiv@dividend^0,f,c
  1035   0021B2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1036   0021B4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1037   0021B6  8007               	bsf	___awdiv@quotient^0,0,c
  1038   0021B8                     l1071:
  1039   0021B8  90D8               	bcf	status,0,c
  1040   0021BA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1041   0021BC  3203               	rrcf	___awdiv@divisor^0,f,c
  1042   0021BE  2E05               	decfsz	___awdiv@counter^0,f,c
  1043   0021C0  EFC9  F010         	goto	l1063
  1044   0021C4                     l1075:
  1045   0021C4  5006               	movf	___awdiv@sign^0,w,c
  1046   0021C6  B4D8               	btfsc	status,2,c
  1047   0021C8  EFE8  F010         	goto	u181
  1048   0021CC  EFEA  F010         	goto	u180
  1049   0021D0                     u181:
  1050   0021D0  EFEE  F010         	goto	l1079
  1051   0021D4                     u180:
  1052   0021D4  6C07               	negf	___awdiv@quotient^0,c
  1053   0021D6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1054   0021D8  B0D8               	btfsc	status,0,c
  1055   0021DA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1056   0021DC                     l1079:
  1057   0021DC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1058   0021E0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1059   0021E4  0012               	return		;funcret
  1060   0021E6                     __end_of___awdiv:
  1061                           	callstack 0
  1062                           
  1063 ;; *************** function _display *****************
  1064 ;; Defined at:
  1065 ;;		line 220 in file "newmain.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  Result          1    wreg     unsigned char 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  Result          1    0[COMRAM] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1083 ;;Total ram usage:        1 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text7
  1093   0023A6                     __ptext7:
  1094                           	callstack 0
  1095   0023A6                     _display:
  1096                           	callstack 30
  1097                           
  1098                           ;incstack = 0
  1099                           ;display@Result stored from wreg
  1100   0023A6  6E01               	movwf	display@Result^0,c
  1101   0023A8                     
  1102                           ;newmain.c: 220: void display(unsigned char Result);newmain.c: 221: {;newmain.c: 222:   
      +                            PORTD = Result;
  1103   0023A8  0060  F007  FFCD   	movff	display@Result,16333	;volatile
  1104   0023AE  0012               	return		;funcret
  1105   0023B0                     __end_of_display:
  1106                           	callstack 0
  1107                           
  1108                           	psect	smallconst
  1109   002000                     __psmallconst:
  1110                           	callstack 0
  1111   002000  00                 	db	0
  1112   002001  00                 	db	0	; dummy byte at the end
  1113   000000                     
  1114                           	psect	rparam
  1115   000000                     
  1116                           	psect	idloc
  1117                           
  1118                           ;Config register IDLOC0 @ 0x200000
  1119                           ;	unspecified, using default values
  1120   200000                     	org	2097152
  1121   200000  FFFF               	dw	65535
  1122                           
  1123                           ;Config register IDLOC1 @ 0x200002
  1124                           ;	unspecified, using default values
  1125   200002                     	org	2097154
  1126   200002  FFFF               	dw	65535
  1127                           
  1128                           ;Config register IDLOC2 @ 0x200004
  1129                           ;	unspecified, using default values
  1130   200004                     	org	2097156
  1131   200004  FFFF               	dw	65535
  1132                           
  1133                           ;Config register IDLOC3 @ 0x200006
  1134                           ;	unspecified, using default values
  1135   200006                     	org	2097158
  1136   200006  FFFF               	dw	65535
  1137                           
  1138                           ;Config register IDLOC4 @ 0x200008
  1139                           ;	unspecified, using default values
  1140   200008                     	org	2097160
  1141   200008  FFFF               	dw	65535
  1142                           
  1143                           ;Config register IDLOC5 @ 0x20000A
  1144                           ;	unspecified, using default values
  1145   20000A                     	org	2097162
  1146   20000A  FFFF               	dw	65535
  1147                           
  1148                           ;Config register IDLOC6 @ 0x20000C
  1149                           ;	unspecified, using default values
  1150   20000C                     	org	2097164
  1151   20000C  FFFF               	dw	65535
  1152                           
  1153                           ;Config register IDLOC7 @ 0x20000E
  1154                           ;	unspecified, using default values
  1155   20000E                     	org	2097166
  1156   20000E  FFFF               	dw	65535
  1157                           
  1158                           	psect	config
  1159                           
  1160                           ;Config register CONFIG1L @ 0x300000
  1161                           ;	External Oscillator Selection
  1162                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1163                           ;	Reset Oscillator Selection
  1164                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1165   300000                     	org	3145728
  1166   300000  F8                 	db	248
  1167                           
  1168                           ;Config register CONFIG1H @ 0x300001
  1169                           ;	Clock out Enable bit
  1170                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1171                           ;	PRLOCKED One-Way Set Enable bit
  1172                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1173                           ;	Clock Switch Enable bit
  1174                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1175                           ;	Fail-Safe Clock Monitor Enable bit
  1176                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1177   300001                     	org	3145729
  1178   300001  FF                 	db	255
  1179                           
  1180                           ;Config register CONFIG2L @ 0x300002
  1181                           ;	MCLR Enable bit
  1182                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1183                           ;	Power-up timer selection bits
  1184                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1185                           ;	Multi-vector enable bit
  1186                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1187                           ;	IVTLOCK bit One-way set enable bit
  1188                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1189                           ;	Low Power BOR Enable bit
  1190                           ;	LPBOREN = OFF, ULPBOR disabled
  1191                           ;	Brown-out Reset Enable bits
  1192                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1193   300002                     	org	3145730
  1194   300002  FF                 	db	255
  1195                           
  1196                           ;Config register CONFIG2H @ 0x300003
  1197                           ;	Brown-out Reset Voltage Selection bits
  1198                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1199                           ;	ZCD Disable bit
  1200                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1201                           ;	PPSLOCK bit One-Way Set Enable bit
  1202                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1203                           ;	Stack Full/Underflow Reset Enable bit
  1204                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1205                           ;	Debugger Enable bit
  1206                           ;	DEBUG = OFF, Background debugger disabled
  1207                           ;	Extended Instruction Set Enable bit
  1208                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1209   300003                     	org	3145731
  1210   300003  FF                 	db	255
  1211                           
  1212                           ;Config register CONFIG3L @ 0x300004
  1213                           ;	WDT Period selection bits
  1214                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1215                           ;	WDT operating mode
  1216                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1217   300004                     	org	3145732
  1218   300004  9F                 	db	159
  1219                           
  1220                           ;Config register CONFIG3H @ 0x300005
  1221                           ;	WDT Window Select bits
  1222                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1223                           ;	WDT input clock selector
  1224                           ;	WDTCCS = SC, Software Control
  1225   300005                     	org	3145733
  1226   300005  FF                 	db	255
  1227                           
  1228                           ;Config register CONFIG4L @ 0x300006
  1229                           ;	Boot Block Size selection bits
  1230                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1231                           ;	Boot Block enable bit
  1232                           ;	BBEN = OFF, Boot block disabled
  1233                           ;	Storage Area Flash enable bit
  1234                           ;	SAFEN = OFF, SAF disabled
  1235                           ;	Application Block write protection bit
  1236                           ;	WRTAPP = OFF, Application Block not write protected
  1237   300006                     	org	3145734
  1238   300006  FF                 	db	255
  1239                           
  1240                           ;Config register CONFIG4H @ 0x300007
  1241                           ;	Boot Block Write Protection bit
  1242                           ;	WRTB = OFF, Boot Block not write-protected
  1243                           ;	Configuration Register Write Protection bit
  1244                           ;	WRTC = OFF, Configuration registers not write-protected
  1245                           ;	Data EEPROM Write Protection bit
  1246                           ;	WRTD = OFF, Data EEPROM not write-protected
  1247                           ;	SAF Write protection bit
  1248                           ;	WRTSAF = OFF, SAF not Write Protected
  1249                           ;	Low Voltage Programming Enable bit
  1250                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1251   300007                     	org	3145735
  1252   300007  FF                 	db	255
  1253                           
  1254                           ;Config register CONFIG5L @ 0x300008
  1255                           ;	PFM and Data EEPROM Code Protection bit
  1256                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1257   300008                     	org	3145736
  1258   300008  FF                 	db	255
  1259                           
  1260                           ;Config register CONFIG5H @ 0x300009
  1261                           ;	unspecified, using default values
  1262   300009                     	org	3145737
  1263   300009  FF                 	db	255
  1264                           tosu	equ	0x3FFF
  1265                           tosh	equ	0x3FFE
  1266                           tosl	equ	0x3FFD
  1267                           stkptr	equ	0x3FFC
  1268                           pclatu	equ	0x3FFB
  1269                           pclath	equ	0x3FFA
  1270                           pcl	equ	0x3FF9
  1271                           tblptru	equ	0x3FF8
  1272                           tblptrh	equ	0x3FF7
  1273                           tblptrl	equ	0x3FF6
  1274                           tablat	equ	0x3FF5
  1275                           prodh	equ	0x3FF4
  1276                           prodl	equ	0x3FF3
  1277                           indf0	equ	0x3FEF
  1278                           postinc0	equ	0x3FEE
  1279                           postdec0	equ	0x3FED
  1280                           preinc0	equ	0x3FEC
  1281                           plusw0	equ	0x3FEB
  1282                           fsr0h	equ	0x3FEA
  1283                           fsr0l	equ	0x3FE9
  1284                           wreg	equ	0x3FE8
  1285                           indf1	equ	0x3FE7
  1286                           postinc1	equ	0x3FE6
  1287                           postdec1	equ	0x3FE5
  1288                           preinc1	equ	0x3FE4
  1289                           plusw1	equ	0x3FE3
  1290                           fsr1h	equ	0x3FE2
  1291                           fsr1l	equ	0x3FE1
  1292                           bsr	equ	0x3FE0
  1293                           indf2	equ	0x3FDF
  1294                           postinc2	equ	0x3FDE
  1295                           postdec2	equ	0x3FDD
  1296                           preinc2	equ	0x3FDC
  1297                           plusw2	equ	0x3FDB
  1298                           fsr2h	equ	0x3FDA
  1299                           fsr2l	equ	0x3FD9
  1300                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_evaluate
    _evaluate->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1009
                            _display
                           _evaluate
                  _getInputOperation
                          _getInputX
                          _getInputY
 ---------------------------------------------------------------------------------
 (1) _getInputY                                            0     0      0       0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getInputX                                            0     0      0       0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getInputOperation                                    0     0      0       0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (2) _getKeypress                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _evaluate                                             9     3      6     994
                                              8 COMRAM     9     3      6
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _display                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _evaluate
     ___awdiv
   _getInputOperation
     _getKeypress
   _getInputX
     _getKeypress
   _getInputY
     _getKeypress

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      78        0.0%
BITBIGSFRlllhh     54A      0       0      75        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      250      0       0      77        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      16       1       23.2%
BITBIGSFRhh         32      0       0      69        0.0%
BITBIGSFRlllhl      1F      0       0      76        0.0%
BITBIGSFRllhh        5      0       0      73        0.0%
BITBIGSFRlhh         5      0       0      71        0.0%
BITBIGSFRllhl        1      0       0      74        0.0%
BITBIGSFRlhl         1      0       0      72        0.0%
BITBIGSFRhl          1      0       0      70        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      16        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Apr 11 15:37:13 2024

                       l31 2120                         l53 211C                         l62 2360  
                       l71 2316                         l90 23AE                         l82 226C  
                       l76 2392                         l77 2396                         u70 2338  
                       u71 2334                         u80 235C                         u81 2358  
                       u90 22EE                         u91 22EA               ___awdiv@sign 0006  
                      l333 21E4                        l801 2052                        l821 2090  
                      l813 2064                        l805 2058                        l831 20A4  
                      l823 2098                        l841 20B0                        l809 205E  
                      l921 2338                        l913 2318                        l843 20D6  
                      l835 20AA                        l827 209E                        l819 206A  
                      l923 2340                        l915 231C                        l931 22CE  
                      l853 20EA                        l845 20DE                        l925 2346  
                      l917 2322                        l941 22F6                        l933 22D2  
                      l863 20F6                        l791 201E                        l783 2012  
                      l775 2002                        l951 2366                        l927 234C  
                      l919 2328                        l943 22FC                        l935 22D8  
                      l865 211E                        l857 20F0                        l849 20E4  
                      l777 2004                        l953 236C                        l929 235C  
                      l945 2302                        l937 22DE                        l787 2018  
                      l779 200C                        l955 2372                        l947 2312  
                      l939 22EE                        l797 2024                        l957 2382  
                      l949 2362                        l799 204A                        l997 23A8  
                      u100 2312                        u101 230E                        u110 2382  
                      u111 237E                        u120 2392                        u121 238E  
                      u130 2134                        u131 2130                        u140 214E  
                      u141 214A                        u150 2174                        u151 2170  
                      u160 2192                        u161 218E                        u170 21AE  
                      u171 21AA                        u180 21D4                        u181 21D0  
                      _key 0016                       l1103 220E                       l1111 222E  
                     l1041 2126                       l1113 226A                       l1121 226E  
                     l1051 2156                       l1043 2134                       l1131 22A0  
                     l1123 2290                       l1061 2184                       l1053 215A  
                     l1045 213C                       l1109 222A                       l1133 22A4  
                     l1125 2294                       l1071 21B8                       l1063 2192  
                     l1055 2162                       l1047 2140                       l1039 2122  
                     l1135 22A8                       l1127 2298                       l1073 21BE  
                     l1065 2198                       l1057 2174                       l1049 214E  
                     l1161 2244                       l1137 22C0                       l1129 229C  
                     l1067 21AE                       l1059 217C                       l1075 21C4  
                     l1091 21F6                       l1083 21E6                       l1077 21D4  
                     l1069 21B6                       l1085 21EA                       l1079 21DC  
                     l1087 21F0                       l1097 2200                       _LATB 3FBB  
                     _LATD 3FBD                       _main 226E                       prodl 3FF3  
                     start FFFC               ___param_bank 0000                      ?_main 0001  
          __end_of___awdiv 21E6            ___awdiv@divisor 0003            ___awdiv@counter 0005  
                    _PORTB 3FCB                      _PORTD 3FCD                      _TRISB 3FC3  
                    _TRISD 3FC5            __end_of_display 23B0                      status 3FD8  
          __initialization 2398               __end_of_main 22CE                     ??_main 0012  
            __activetblptr 0003           ___awdiv@dividend 0001                     _ANSELB 3A50  
                   _ANSELD 3A70              display@Result 0001                     _Result 0012  
                ??___awdiv 0005           __end_of_evaluate 226E           ___awdiv@quotient 0007  
                   isa$std 0001                  ??_display 0001               __mediumconst 0000  
           evaluate@result 0011                 __accesstop 0060    __end_of__initialization 23A0  
            ___rparam_used 0001             __pcstackCOMRAM 0001                 __pnvCOMRAM 0016  
                ?_evaluate 0009          __end_of_getInputX 2362          __end_of_getInputY 2318  
                  __Hparam 0000                    __Lparam 0000                    ___awdiv 2122  
             __psmallconst 2000                    __pcinit 2398                    __ramtop 2000  
                  __ptext0 226E                    __ptext1 22CE                    __ptext2 2318  
                  __ptext3 2362                    __ptext4 2002                    __ptext5 21E6  
                  __ptext6 2122                    __ptext7 23A6                    _display 23A6  
                  _input_X 0015                    _input_Y 0014          _getInputOperation 2362  
       ?_getInputOperation 0001       end_of_initialization 23A0                 ??_evaluate 000F  
      ??_getInputOperation 0001              ??_getKeypress 0001  __end_of_getInputOperation 2398  
          evaluate@input_X 0009            evaluate@input_Y 000B        start_initialization 2398  
      __end_of_getKeypress 2122                  _Operation 0013                __pbssCOMRAM 0012  
                 ?___awdiv 0001                  _getInputX 2318                  _getInputY 22CE  
                 ?_display 0001                __smallconst 2000                _getKeypress 2002  
               ?_getInputX 0001                 ?_getInputY 0001                   __Hrparam 0000  
                 __Lrparam 0000                   _evaluate 21E6          evaluate@Operation 000D  
                 isa$xinst 0000                ??_getInputX 0001                ??_getInputY 0001  
             ?_getKeypress 0001  
