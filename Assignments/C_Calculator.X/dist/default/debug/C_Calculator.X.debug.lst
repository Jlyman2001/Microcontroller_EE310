

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 06 14:22:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	smallconst
    57   002000                     __psmallconst:
    58                           	callstack 0
    59   002000  00                 	db	0
    60   002001                     _lookupTable:
    61                           	callstack 0
    62   002001  E7                 	db	231
    63   002002  21                 	db	33
    64   002003  CB                 	db	203
    65   002004  6B                 	db	107
    66   002005  2D                 	db	45
    67   002006  6E                 	db	110
    68   002007  EE                 	db	238
    69   002008  27                 	db	39
    70   002009  EF                 	db	239
    71   00200A  6F                 	db	111
    72   00200B  AF                 	db	175
    73   00200C  EC                 	db	236
    74   00200D  C8                 	db	200
    75   00200E  E9                 	db	233
    76   00200F  CE                 	db	206
    77   002010  8E                 	db	142
    78   002011                     __end_of_lookupTable:
    79                           	callstack 0
    80   002011  00                 	db	0	; dummy byte at the end
    81   000000                     
    82                           	psect	nvCOMRAM
    83   000016                     __pnvCOMRAM:
    84                           	callstack 0
    85   000016                     _key:
    86                           	callstack 0
    87   000016                     	ds	1
    88   000000                     _ANSELB	set	14928
    89   000000                     _LATB	set	16315
    90   000000                     _TRISB	set	16323
    91   000000                     _PORTB	set	16331
    92   000000                     _PORTD	set	16333
    93   000000                     _PORTC	set	16332
    94   000000                     _TRISD	set	16325
    95   000000                     _LATD	set	16317
    96   000000                     _ANSELD	set	14960
    97                           
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101   00248C                     __pcinit:
   102                           	callstack 0
   103   00248C                     start_initialization:
   104                           	callstack 0
   105   00248C                     __initialization:
   106                           	callstack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (4 bytes)
   109   00248C  6A15               	clrf	(__pbssCOMRAM+3)& (0+255),c
   110   00248E  6A14               	clrf	(__pbssCOMRAM+2)& (0+255),c
   111   002490  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   112   002492  6A12               	clrf	__pbssCOMRAM& (0+255),c
   113   002494                     end_of_initialization:
   114                           	callstack 0
   115   002494                     __end_of__initialization:
   116                           	callstack 0
   117   002494  0100               	movlb	0
   118   002496  EF1A  F011         	goto	_main	;jump to C main() function
   119                           
   120                           	psect	bssCOMRAM
   121   000012                     __pbssCOMRAM:
   122                           	callstack 0
   123   000012                     _Result:
   124                           	callstack 0
   125   000012                     	ds	1
   126   000013                     _Operation:
   127                           	callstack 0
   128   000013                     	ds	1
   129   000014                     _input_Y:
   130                           	callstack 0
   131   000014                     	ds	1
   132   000015                     _input_X:
   133                           	callstack 0
   134   000015                     	ds	1
   135                           
   136                           	psect	cstackCOMRAM
   137   000001                     __pcstackCOMRAM:
   138                           	callstack 0
   139   000001                     ??_display:
   140   000001                     ?___awdiv:
   141                           	callstack 0
   142   000001                     ___awdiv@dividend:
   143                           	callstack 0
   144                           
   145                           ; 2 bytes @ 0x0
   146   000001                     	ds	2
   147   000003                     display@Result:
   148                           	callstack 0
   149   000003                     ___awdiv@divisor:
   150                           	callstack 0
   151                           
   152                           ; 2 bytes @ 0x2
   153   000003                     	ds	2
   154   000005                     ___awdiv@counter:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0x4
   158   000005                     	ds	1
   159   000006                     ___awdiv@sign:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x5
   163   000006                     	ds	1
   164   000007                     ___awdiv@quotient:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x6
   168   000007                     	ds	2
   169   000009                     evaluate@input_X:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x8
   173   000009                     	ds	2
   174   00000B                     evaluate@input_Y:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0xA
   178   00000B                     	ds	2
   179   00000D                     evaluate@Operation:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0xC
   183   00000D                     	ds	2
   184   00000F                     ??_evaluate:
   185                           
   186                           ; 1 bytes @ 0xE
   187   00000F                     	ds	2
   188   000011                     evaluate@result:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x10
   192   000011                     	ds	1
   193   000012                     
   194                           ; 1 bytes @ 0x11
   195 ;;
   196 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   197 ;;
   198 ;; *************** function _main *****************
   199 ;; Defined at:
   200 ;;		line 189 in file "newmain.c"
   201 ;; Parameters:    Size  Location     Type
   202 ;;		None
   203 ;; Auto vars:     Size  Location     Type
   204 ;;		None
   205 ;; Return value:  Size  Location     Type
   206 ;;                  1    wreg      void 
   207 ;; Registers used:
   208 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   209 ;; Tracked objects:
   210 ;;		On entry : 0/0
   211 ;;		On exit  : 0/0
   212 ;;		Unchanged: 0/0
   213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   218 ;;Total ram usage:        0 bytes
   219 ;; Hardware stack levels required when called: 2
   220 ;; This function calls:
   221 ;;		_display
   222 ;;		_evaluate
   223 ;;		_getInputOperation
   224 ;;		_getInputX
   225 ;;		_getInputY
   226 ;;		_getKeypress
   227 ;; This function is called by:
   228 ;;		Startup code after reset
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           	psect	text0
   233   002234                     __ptext0:
   234                           	callstack 0
   235   002234                     _main:
   236                           	callstack 29
   237   002234                     
   238                           ;newmain.c: 192:     TRISB = 0xF0;
   239   002234  0EF0               	movlw	240
   240   002236  6EC3               	movwf	195,c	;volatile
   241                           
   242                           ;newmain.c: 193:     LATB = 0;
   243   002238  0E00               	movlw	0
   244   00223A  6EBB               	movwf	187,c	;volatile
   245                           
   246                           ;newmain.c: 194:     PORTB = 0;
   247   00223C  0E00               	movlw	0
   248   00223E  6ECB               	movwf	203,c	;volatile
   249                           
   250                           ;newmain.c: 195:     ANSELB = 0;
   251   002240  0E00               	movlw	0
   252   002242  013A               	movlb	58	; () banked
   253   002244  6F50               	movwf	80,b	;volatile
   254                           
   255                           ;newmain.c: 198:     TRISD = 0;
   256   002246  0E00               	movlw	0
   257   002248  6EC5               	movwf	197,c	;volatile
   258                           
   259                           ;newmain.c: 199:     LATD = 0;
   260   00224A  0E00               	movlw	0
   261   00224C  6EBD               	movwf	189,c	;volatile
   262                           
   263                           ;newmain.c: 200:     PORTD = 0;
   264   00224E  0E00               	movlw	0
   265   002250  6ECD               	movwf	205,c	;volatile
   266                           
   267                           ;newmain.c: 201:     ANSELD = 0;
   268   002252  0E00               	movlw	0
   269   002254  6F70               	movwf	112,b	;volatile
   270                           
   271                           ;newmain.c: 204:     TRISD = 0;
   272   002256  0E00               	movlw	0
   273   002258  6EC5               	movwf	197,c	;volatile
   274                           
   275                           ;newmain.c: 205:     LATD = 0;
   276   00225A  0E00               	movlw	0
   277   00225C  6EBD               	movwf	189,c	;volatile
   278                           
   279                           ;newmain.c: 206:     PORTD = 0;
   280   00225E  0E00               	movlw	0
   281   002260  6ECD               	movwf	205,c	;volatile
   282                           
   283                           ;newmain.c: 207:     ANSELD = 0;
   284   002262  0E00               	movlw	0
   285   002264  6F70               	movwf	112,b	;volatile
   286   002266                     l1100:
   287                           
   288                           ;newmain.c: 212:     {;newmain.c: 213:         getInputX();
   289   002266  EC02  F012         	call	_getInputX	;wreg free
   290   00226A                     
   291                           ;newmain.c: 214:         getInputOperation();
   292   00226A  EC2B  F012         	call	_getInputOperation	;wreg free
   293   00226E                     
   294                           ;newmain.c: 215:         getInputY();
   295   00226E  ECD9  F011         	call	_getInputY	;wreg free
   296   002272                     
   297                           ;newmain.c: 216:         Result = evaluate(input_X,input_Y,Operation);
   298   002272  C015  F009         	movff	_input_X,evaluate@input_X
   299   002276  6A0A               	clrf	(evaluate@input_X+1)^0,c
   300   002278  C014  F00B         	movff	_input_Y,evaluate@input_Y
   301   00227C  6A0C               	clrf	(evaluate@input_Y+1)^0,c
   302   00227E  C013  F00D         	movff	_Operation,evaluate@Operation
   303   002282  6A0E               	clrf	(evaluate@Operation+1)^0,c
   304   002284  EC60  F011         	call	_evaluate	;wreg free
   305   002288  6E12               	movwf	_Result^0,c
   306   00228A                     l1108:
   307                           
   308                           ;newmain.c: 218:         {;newmain.c: 219:             display(Result);
   309   00228A  5012               	movf	_Result^0,w,c
   310   00228C  ECA5  F011         	call	_display
   311   002290                     
   312                           ;newmain.c: 220:         } while (getKeypress() != 0x0E || getKeypress() != 0x0F);
   313   002290  EC09  F010         	call	_getKeypress	;wreg free
   314   002294  0A0E               	xorlw	14
   315   002296  A4D8               	btfss	status,2,c
   316   002298  EF50  F011         	goto	u211
   317   00229C  EF52  F011         	goto	u210
   318   0022A0                     u211:
   319   0022A0  EF45  F011         	goto	l1108
   320   0022A4                     u210:
   321   0022A4  EC09  F010         	call	_getKeypress	;wreg free
   322   0022A8  0A0F               	xorlw	15
   323   0022AA  A4D8               	btfss	status,2,c
   324   0022AC  EF5A  F011         	goto	u221
   325   0022B0  EF5C  F011         	goto	u220
   326   0022B4                     u221:
   327   0022B4  EF45  F011         	goto	l1108
   328   0022B8                     u220:
   329   0022B8  EF33  F011         	goto	l1100
   330   0022BC  EFFE  F0FF         	goto	start
   331   0022C0                     __end_of_main:
   332                           	callstack 0
   333                           
   334 ;; *************** function _getInputY *****************
   335 ;; Defined at:
   336 ;;		line 125 in file "newmain.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels used: 1
   356 ;; Hardware stack levels required when called: 1
   357 ;; This function calls:
   358 ;;		_getKeypress
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text1
   365   0023B2                     __ptext1:
   366                           	callstack 0
   367   0023B2                     _getInputY:
   368                           	callstack 29
   369   0023B2                     
   370                           ;newmain.c: 127:     input_Y = 0;
   371   0023B2  0E00               	movlw	0
   372   0023B4  6E14               	movwf	_input_Y^0,c
   373   0023B6                     
   374                           ;newmain.c: 128:     key = 0xFF;
   375   0023B6  6816               	setf	_key^0,c
   376                           
   377                           ;newmain.c: 129:     while (key >= 0x0A)
   378   0023B8  EFE1  F011         	goto	l944
   379   0023BC                     l942:
   380                           
   381                           ;newmain.c: 130:         key = getKeypress();
   382   0023BC  EC09  F010         	call	_getKeypress	;wreg free
   383   0023C0  6E16               	movwf	_key^0,c
   384   0023C2                     l944:
   385                           
   386                           ;newmain.c: 129:     while (key >= 0x0A)
   387   0023C2  0E0A               	movlw	10
   388   0023C4  6016               	cpfslt	_key^0,c
   389   0023C6  EFE7  F011         	goto	u91
   390   0023CA  EFE9  F011         	goto	u90
   391   0023CE                     u91:
   392   0023CE  EFDE  F011         	goto	l942
   393   0023D2                     u90:
   394   0023D2                     
   395                           ;newmain.c: 131:     input_Y = (input_Y << 4) + key;
   396   0023D2  5014               	movf	_input_Y^0,w,c
   397   0023D4  0D10               	mullw	16
   398   0023D6  50F3               	movf	243,w,c
   399   0023D8  2416               	addwf	_key^0,w,c
   400   0023DA  6E14               	movwf	_input_Y^0,c
   401   0023DC                     
   402                           ;newmain.c: 134:     key = 0xFF;
   403   0023DC  6816               	setf	_key^0,c
   404                           
   405                           ;newmain.c: 135:     while (key >= 0x0A)
   406   0023DE  EFF4  F011         	goto	l952
   407   0023E2                     l950:
   408                           
   409                           ;newmain.c: 136:         key = getKeypress();
   410   0023E2  EC09  F010         	call	_getKeypress	;wreg free
   411   0023E6  6E16               	movwf	_key^0,c
   412   0023E8                     l952:
   413                           
   414                           ;newmain.c: 135:     while (key >= 0x0A)
   415   0023E8  0E0A               	movlw	10
   416   0023EA  6016               	cpfslt	_key^0,c
   417   0023EC  EFFA  F011         	goto	u101
   418   0023F0  EFFC  F011         	goto	u100
   419   0023F4                     u101:
   420   0023F4  EFF1  F011         	goto	l950
   421   0023F8                     u100:
   422   0023F8                     
   423                           ;newmain.c: 137:     input_Y = (input_Y << 4) + key;
   424   0023F8  5014               	movf	_input_Y^0,w,c
   425   0023FA  0D10               	mullw	16
   426   0023FC  50F3               	movf	243,w,c
   427   0023FE  2416               	addwf	_key^0,w,c
   428   002400  6E14               	movwf	_input_Y^0,c
   429   002402  0012               	return		;funcret
   430   002404                     __end_of_getInputY:
   431                           	callstack 0
   432                           
   433 ;; *************** function _getInputX *****************
   434 ;; Defined at:
   435 ;;		line 107 in file "newmain.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; Hardware stack levels required when called: 1
   456 ;; This function calls:
   457 ;;		_getKeypress
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text2
   464   002404                     __ptext2:
   465                           	callstack 0
   466   002404                     _getInputX:
   467                           	callstack 29
   468   002404                     
   469                           ;newmain.c: 109:     input_X = 0;
   470   002404  0E00               	movlw	0
   471   002406  6E15               	movwf	_input_X^0,c
   472   002408                     
   473                           ;newmain.c: 110:     key = 0xFF;
   474   002408  6816               	setf	_key^0,c
   475                           
   476                           ;newmain.c: 111:     while (key >= 0x0A)
   477   00240A  EF0A  F012         	goto	l926
   478   00240E                     l924:
   479                           
   480                           ;newmain.c: 112:         key = getKeypress();
   481   00240E  EC09  F010         	call	_getKeypress	;wreg free
   482   002412  6E16               	movwf	_key^0,c
   483   002414                     l926:
   484                           
   485                           ;newmain.c: 111:     while (key >= 0x0A)
   486   002414  0E0A               	movlw	10
   487   002416  6016               	cpfslt	_key^0,c
   488   002418  EF10  F012         	goto	u71
   489   00241C  EF12  F012         	goto	u70
   490   002420                     u71:
   491   002420  EF07  F012         	goto	l924
   492   002424                     u70:
   493   002424                     
   494                           ;newmain.c: 113:     input_X = (input_X << 4) + key;
   495   002424  5015               	movf	_input_X^0,w,c
   496   002426  0D10               	mullw	16
   497   002428  50F3               	movf	243,w,c
   498   00242A  2416               	addwf	_key^0,w,c
   499   00242C  6E15               	movwf	_input_X^0,c
   500   00242E                     
   501                           ;newmain.c: 116:     key = 0xFF;
   502   00242E  6816               	setf	_key^0,c
   503                           
   504                           ;newmain.c: 117:     while (key >= 0x0A)
   505   002430  EF1D  F012         	goto	l934
   506   002434                     l932:
   507                           
   508                           ;newmain.c: 118:         key = getKeypress();
   509   002434  EC09  F010         	call	_getKeypress	;wreg free
   510   002438  6E16               	movwf	_key^0,c
   511   00243A                     l934:
   512                           
   513                           ;newmain.c: 117:     while (key >= 0x0A)
   514   00243A  0E0A               	movlw	10
   515   00243C  6016               	cpfslt	_key^0,c
   516   00243E  EF23  F012         	goto	u81
   517   002442  EF25  F012         	goto	u80
   518   002446                     u81:
   519   002446  EF1A  F012         	goto	l932
   520   00244A                     u80:
   521   00244A                     
   522                           ;newmain.c: 119:     input_X = (input_X << 4) + key;
   523   00244A  5015               	movf	_input_X^0,w,c
   524   00244C  0D10               	mullw	16
   525   00244E  50F3               	movf	243,w,c
   526   002450  2416               	addwf	_key^0,w,c
   527   002452  6E15               	movwf	_input_X^0,c
   528   002454  0012               	return		;funcret
   529   002456                     __end_of_getInputX:
   530                           	callstack 0
   531                           
   532 ;; *************** function _getInputOperation *****************
   533 ;; Defined at:
   534 ;;		line 142 in file "newmain.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; Hardware stack levels required when called: 1
   555 ;; This function calls:
   556 ;;		_getKeypress
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text3
   563   002456                     __ptext3:
   564                           	callstack 0
   565   002456                     _getInputOperation:
   566                           	callstack 29
   567   002456                     
   568                           ;newmain.c: 144:     Operation = 0;
   569   002456  0E00               	movlw	0
   570   002458  6E13               	movwf	_Operation^0,c
   571   00245A                     
   572                           ;newmain.c: 145:     key = 0xFF;
   573   00245A  6816               	setf	_key^0,c
   574                           
   575                           ;newmain.c: 146:     while ((key > 0x0D) || (key < 0x0A))
   576   00245C  EF33  F012         	goto	l962
   577   002460                     l960:
   578                           
   579                           ;newmain.c: 148:         key = getKeypress();
   580   002460  EC09  F010         	call	_getKeypress	;wreg free
   581   002464  6E16               	movwf	_key^0,c
   582   002466                     l962:
   583                           
   584                           ;newmain.c: 146:     while ((key > 0x0D) || (key < 0x0A))
   585   002466  0E0E               	movlw	14
   586   002468  6016               	cpfslt	_key^0,c
   587   00246A  EF39  F012         	goto	u111
   588   00246E  EF3B  F012         	goto	u110
   589   002472                     u111:
   590   002472  EF30  F012         	goto	l960
   591   002476                     u110:
   592   002476  0E09               	movlw	9
   593   002478  6416               	cpfsgt	_key^0,c
   594   00247A  EF41  F012         	goto	u121
   595   00247E  EF43  F012         	goto	u120
   596   002482                     u121:
   597   002482  EF30  F012         	goto	l960
   598   002486                     u120:
   599   002486                     
   600                           ;newmain.c: 149:     Operation = key;
   601   002486  C016  F013         	movff	_key,_Operation
   602   00248A  0012               	return		;funcret
   603   00248C                     __end_of_getInputOperation:
   604                           	callstack 0
   605                           
   606 ;; *************** function _getKeypress *****************
   607 ;; Defined at:
   608 ;;		line 34 in file "newmain.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      unsigned char 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_getInputX
   632 ;;		_getInputY
   633 ;;		_getInputOperation
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text4
   639   002012                     __ptext4:
   640                           	callstack 0
   641   002012                     _getKeypress:
   642                           	callstack 30
   643   002012                     
   644                           ;newmain.c: 38:     key = 0xFF;
   645   002012  6816               	setf	_key^0,c
   646   002014                     
   647                           ;newmain.c: 39:     PORTB = 0x01;
   648   002014  0E01               	movlw	1
   649   002016  6ECB               	movwf	203,c	;volatile
   650                           
   651                           ;newmain.c: 40:     switch (PORTB)
   652   002018  EF22  F010         	goto	l804
   653   00201C                     l786:
   654                           
   655                           ;newmain.c: 43:                 key = 1;
   656   00201C  0E01               	movlw	1
   657   00201E  6E16               	movwf	_key^0,c
   658                           
   659                           ;newmain.c: 44:                 return key;
   660   002020  5016               	movf	_key^0,w,c
   661   002022  EFB7  F010         	goto	l37
   662   002026                     l790:
   663                           
   664                           ;newmain.c: 46:                 key = 2;
   665   002026  0E02               	movlw	2
   666   002028  6E16               	movwf	_key^0,c
   667                           
   668                           ;newmain.c: 47:                 return key;
   669   00202A  5016               	movf	_key^0,w,c
   670   00202C  EFB7  F010         	goto	l37
   671   002030                     l794:
   672                           
   673                           ;newmain.c: 49:                 key = 3;
   674   002030  0E03               	movlw	3
   675   002032  6E16               	movwf	_key^0,c
   676                           
   677                           ;newmain.c: 50:                 return key;
   678   002034  5016               	movf	_key^0,w,c
   679   002036  EFB7  F010         	goto	l37
   680   00203A                     l798:
   681                           
   682                           ;newmain.c: 52:                 key = 0x0A;
   683   00203A  0E0A               	movlw	10
   684   00203C  6E16               	movwf	_key^0,c
   685                           
   686                           ;newmain.c: 53:                 return key;
   687   00203E  5016               	movf	_key^0,w,c
   688   002040  EFB7  F010         	goto	l37
   689   002044                     l804:
   690   002044  50CB               	movf	203,w,c	;volatile
   691                           
   692                           ; Switch size 1, requested type "simple"
   693                           ; Number of cases is 4, Range of values is 17 to 129
   694                           ; switch strategies available:
   695                           ; Name         Instructions Cycles
   696                           ; simple_byte           13     7 (average)
   697                           ;	Chosen strategy is simple_byte
   698   002046  0A11               	xorlw	17	; case 17
   699   002048  B4D8               	btfsc	status,2,c
   700   00204A  EF0E  F010         	goto	l786
   701   00204E  0A30               	xorlw	48	; case 33
   702   002050  B4D8               	btfsc	status,2,c
   703   002052  EF13  F010         	goto	l790
   704   002056  0A60               	xorlw	96	; case 65
   705   002058  B4D8               	btfsc	status,2,c
   706   00205A  EF18  F010         	goto	l794
   707   00205E  0AC0               	xorlw	192	; case 129
   708   002060  B4D8               	btfsc	status,2,c
   709   002062  EF1D  F010         	goto	l798
   710   002066  EF35  F010         	goto	l806
   711   00206A                     l806:
   712                           
   713                           ;newmain.c: 56:     PORTB = 0x02;
   714   00206A  0E02               	movlw	2
   715   00206C  6ECB               	movwf	203,c	;volatile
   716                           
   717                           ;newmain.c: 57:     switch (PORTB)
   718   00206E  EF4D  F010         	goto	l826
   719   002072                     l808:
   720                           
   721                           ;newmain.c: 60:                 key = 4;
   722   002072  0E04               	movlw	4
   723   002074  6E16               	movwf	_key^0,c
   724                           
   725                           ;newmain.c: 61:                 return key;
   726   002076  5016               	movf	_key^0,w,c
   727   002078  EFB7  F010         	goto	l37
   728   00207C                     l812:
   729                           
   730                           ;newmain.c: 63:                 key = 5;
   731   00207C  0E05               	movlw	5
   732   00207E  6E16               	movwf	_key^0,c
   733                           
   734                           ;newmain.c: 64:                 return key;
   735   002080  5016               	movf	_key^0,w,c
   736   002082  EFB7  F010         	goto	l37
   737   002086                     l816:
   738                           
   739                           ;newmain.c: 66:                 key = 6;
   740   002086  0E06               	movlw	6
   741   002088  6E16               	movwf	_key^0,c
   742                           
   743                           ;newmain.c: 67:                 return key;
   744   00208A  5016               	movf	_key^0,w,c
   745   00208C  EFB7  F010         	goto	l37
   746   002090                     l820:
   747                           
   748                           ;newmain.c: 69:                 key = 0x0B;
   749   002090  0E0B               	movlw	11
   750   002092  6E16               	movwf	_key^0,c
   751                           
   752                           ;newmain.c: 70:                 return key;
   753   002094  5016               	movf	_key^0,w,c
   754   002096  EFB7  F010         	goto	l37
   755   00209A                     l826:
   756   00209A  50CB               	movf	203,w,c	;volatile
   757                           
   758                           ; Switch size 1, requested type "simple"
   759                           ; Number of cases is 4, Range of values is 18 to 130
   760                           ; switch strategies available:
   761                           ; Name         Instructions Cycles
   762                           ; simple_byte           13     7 (average)
   763                           ;	Chosen strategy is simple_byte
   764   00209C  0A12               	xorlw	18	; case 18
   765   00209E  B4D8               	btfsc	status,2,c
   766   0020A0  EF39  F010         	goto	l808
   767   0020A4  0A30               	xorlw	48	; case 34
   768   0020A6  B4D8               	btfsc	status,2,c
   769   0020A8  EF3E  F010         	goto	l812
   770   0020AC  0A60               	xorlw	96	; case 66
   771   0020AE  B4D8               	btfsc	status,2,c
   772   0020B0  EF43  F010         	goto	l816
   773   0020B4  0AC0               	xorlw	192	; case 130
   774   0020B6  B4D8               	btfsc	status,2,c
   775   0020B8  EF48  F010         	goto	l820
   776   0020BC  EF60  F010         	goto	l828
   777   0020C0                     l828:
   778                           
   779                           ;newmain.c: 72:     PORTB = 0x04;
   780   0020C0  0E04               	movlw	4
   781   0020C2  6ECB               	movwf	203,c	;volatile
   782                           
   783                           ;newmain.c: 73:     switch (PORTB)
   784   0020C4  EF78  F010         	goto	l848
   785   0020C8                     l830:
   786                           
   787                           ;newmain.c: 76:                 key = 7;
   788   0020C8  0E07               	movlw	7
   789   0020CA  6E16               	movwf	_key^0,c
   790                           
   791                           ;newmain.c: 77:                 return key;
   792   0020CC  5016               	movf	_key^0,w,c
   793   0020CE  EFB7  F010         	goto	l37
   794   0020D2                     l834:
   795                           
   796                           ;newmain.c: 79:                 key = 8;
   797   0020D2  0E08               	movlw	8
   798   0020D4  6E16               	movwf	_key^0,c
   799                           
   800                           ;newmain.c: 80:                 return key;
   801   0020D6  5016               	movf	_key^0,w,c
   802   0020D8  EFB7  F010         	goto	l37
   803   0020DC                     l838:
   804                           
   805                           ;newmain.c: 82:                 key = 9;
   806   0020DC  0E09               	movlw	9
   807   0020DE  6E16               	movwf	_key^0,c
   808                           
   809                           ;newmain.c: 83:                 return key;
   810   0020E0  5016               	movf	_key^0,w,c
   811   0020E2  EFB7  F010         	goto	l37
   812   0020E6                     l842:
   813                           
   814                           ;newmain.c: 85:                 key = 0x0C;
   815   0020E6  0E0C               	movlw	12
   816   0020E8  6E16               	movwf	_key^0,c
   817                           
   818                           ;newmain.c: 86:                 return key;
   819   0020EA  5016               	movf	_key^0,w,c
   820   0020EC  EFB7  F010         	goto	l37
   821   0020F0                     l848:
   822   0020F0  50CB               	movf	203,w,c	;volatile
   823                           
   824                           ; Switch size 1, requested type "simple"
   825                           ; Number of cases is 4, Range of values is 20 to 132
   826                           ; switch strategies available:
   827                           ; Name         Instructions Cycles
   828                           ; simple_byte           13     7 (average)
   829                           ;	Chosen strategy is simple_byte
   830   0020F2  0A14               	xorlw	20	; case 20
   831   0020F4  B4D8               	btfsc	status,2,c
   832   0020F6  EF64  F010         	goto	l830
   833   0020FA  0A30               	xorlw	48	; case 36
   834   0020FC  B4D8               	btfsc	status,2,c
   835   0020FE  EF69  F010         	goto	l834
   836   002102  0A60               	xorlw	96	; case 68
   837   002104  B4D8               	btfsc	status,2,c
   838   002106  EF6E  F010         	goto	l838
   839   00210A  0AC0               	xorlw	192	; case 132
   840   00210C  B4D8               	btfsc	status,2,c
   841   00210E  EF73  F010         	goto	l842
   842   002112  EF8B  F010         	goto	l850
   843   002116                     l850:
   844                           
   845                           ;newmain.c: 88:     PORTB = 0x08;
   846   002116  0E08               	movlw	8
   847   002118  6ECB               	movwf	203,c	;volatile
   848                           
   849                           ;newmain.c: 89:     switch (PORTB)
   850   00211A  EFA3  F010         	goto	l870
   851   00211E                     l852:
   852                           
   853                           ;newmain.c: 92:                 key = 0x0E;
   854   00211E  0E0E               	movlw	14
   855   002120  6E16               	movwf	_key^0,c
   856                           
   857                           ;newmain.c: 93:                 return key;
   858   002122  5016               	movf	_key^0,w,c
   859   002124  EFB7  F010         	goto	l37
   860   002128                     l856:
   861                           
   862                           ;newmain.c: 95:                 key = 0;
   863   002128  0E00               	movlw	0
   864   00212A  6E16               	movwf	_key^0,c
   865                           
   866                           ;newmain.c: 96:                 return key;
   867   00212C  5016               	movf	_key^0,w,c
   868   00212E  EFB7  F010         	goto	l37
   869   002132                     l860:
   870                           
   871                           ;newmain.c: 98:                 key = 0x0F;
   872   002132  0E0F               	movlw	15
   873   002134  6E16               	movwf	_key^0,c
   874                           
   875                           ;newmain.c: 99:                 return key;
   876   002136  5016               	movf	_key^0,w,c
   877   002138  EFB7  F010         	goto	l37
   878   00213C                     l864:
   879                           
   880                           ;newmain.c: 101:                 key = 0x0D;
   881   00213C  0E0D               	movlw	13
   882   00213E  6E16               	movwf	_key^0,c
   883                           
   884                           ;newmain.c: 102:                 return key;
   885   002140  5016               	movf	_key^0,w,c
   886   002142  EFB7  F010         	goto	l37
   887   002146                     l870:
   888   002146  50CB               	movf	203,w,c	;volatile
   889                           
   890                           ; Switch size 1, requested type "simple"
   891                           ; Number of cases is 4, Range of values is 24 to 136
   892                           ; switch strategies available:
   893                           ; Name         Instructions Cycles
   894                           ; simple_byte           13     7 (average)
   895                           ;	Chosen strategy is simple_byte
   896   002148  0A18               	xorlw	24	; case 24
   897   00214A  B4D8               	btfsc	status,2,c
   898   00214C  EF8F  F010         	goto	l852
   899   002150  0A30               	xorlw	48	; case 40
   900   002152  B4D8               	btfsc	status,2,c
   901   002154  EF94  F010         	goto	l856
   902   002158  0A60               	xorlw	96	; case 72
   903   00215A  B4D8               	btfsc	status,2,c
   904   00215C  EF99  F010         	goto	l860
   905   002160  0AC0               	xorlw	192	; case 136
   906   002162  B4D8               	btfsc	status,2,c
   907   002164  EF9E  F010         	goto	l864
   908   002168  EFB6  F010         	goto	l872
   909   00216C                     l872:
   910                           
   911                           ;newmain.c: 104:     return key;
   912   00216C  5016               	movf	_key^0,w,c
   913   00216E                     l37:
   914   00216E  0012               	return		;funcret
   915   002170                     __end_of_getKeypress:
   916                           	callstack 0
   917                           
   918 ;; *************** function _evaluate *****************
   919 ;; Defined at:
   920 ;;		line 154 in file "newmain.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  input_X         2    8[COMRAM] int 
   923 ;;  input_Y         2   10[COMRAM] int 
   924 ;;  Operation       2   12[COMRAM] int 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  result          1   16[COMRAM] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      unsigned char 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   936 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   939 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   940 ;;Total ram usage:        9 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; Hardware stack levels required when called: 1
   943 ;; This function calls:
   944 ;;		___awdiv
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text5
   951   0022C0                     __ptext5:
   952                           	callstack 0
   953   0022C0                     _evaluate:
   954                           	callstack 29
   955   0022C0                     
   956                           ;newmain.c: 157:     switch (Operation)
   957   0022C0  EF85  F011         	goto	l1088
   958   0022C4                     l1078:
   959                           
   960                           ;newmain.c: 160:                 result = input_X + input_Y;
   961   0022C4  5009               	movf	evaluate@input_X^0,w,c
   962   0022C6  240B               	addwf	evaluate@input_Y^0,w,c
   963   0022C8  6E11               	movwf	evaluate@result^0,c
   964                           
   965                           ;newmain.c: 161:                 break;
   966   0022CA  EFA3  F011         	goto	l1090
   967   0022CE                     l1080:
   968                           
   969                           ;newmain.c: 163:                 result = input_X - input_Y;
   970   0022CE  500B               	movf	evaluate@input_Y^0,w,c
   971   0022D0  5C09               	subwf	evaluate@input_X^0,w,c
   972   0022D2  6E11               	movwf	evaluate@result^0,c
   973                           
   974                           ;newmain.c: 164:                 break;
   975   0022D4  EFA3  F011         	goto	l1090
   976   0022D8                     l1082:
   977                           
   978                           ;newmain.c: 166:                 result = input_X * input_Y;
   979   0022D8  5009               	movf	evaluate@input_X^0,w,c
   980   0022DA  020B               	mulwf	evaluate@input_Y^0,c
   981   0022DC  006F FFCC  F011    	movff	prodl,evaluate@result
   982                           
   983                           ;newmain.c: 167:                 break;
   984   0022E2  EFA3  F011         	goto	l1090
   985   0022E6                     l1084:
   986                           
   987                           ;newmain.c: 169:                 result = input_X / input_Y;
   988   0022E6  C009  F001         	movff	evaluate@input_X,___awdiv@dividend
   989   0022EA  C00A  F002         	movff	evaluate@input_X+1,___awdiv@dividend+1
   990   0022EE  C00B  F003         	movff	evaluate@input_Y,___awdiv@divisor
   991   0022F2  C00C  F004         	movff	evaluate@input_Y+1,___awdiv@divisor+1
   992   0022F6  ECB8  F010         	call	___awdiv	;wreg free
   993   0022FA  5001               	movf	?___awdiv^0,w,c
   994   0022FC  6E11               	movwf	evaluate@result^0,c
   995                           
   996                           ;newmain.c: 170:                 break;
   997   0022FE  EFA3  F011         	goto	l1090
   998   002302                     l1086:
   999                           
  1000                           ;newmain.c: 172:                 result = 0;
  1001   002302  0E00               	movlw	0
  1002   002304  6E11               	movwf	evaluate@result^0,c
  1003                           
  1004                           ;newmain.c: 173:     }
  1005   002306  EFA3  F011         	goto	l1090
  1006   00230A                     l1088:
  1007   00230A  C00D  F00F         	movff	evaluate@Operation,??_evaluate
  1008   00230E  C00E  F010         	movff	evaluate@Operation+1,??_evaluate+1
  1009                           
  1010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 1, Range of values is 0 to 0
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            4     3 (average)
  1016                           ;	Chosen strategy is simple_byte
  1017   002312  5010               	movf	(??_evaluate+1)^0,w,c
  1018   002314  0A00               	xorlw	0	; case 0
  1019   002316  B4D8               	btfsc	status,2,c
  1020   002318  EF90  F011         	goto	l1134
  1021   00231C  EF81  F011         	goto	l1086
  1022   002320                     l1134:
  1023                           
  1024                           ; Switch size 1, requested type "simple"
  1025                           ; Number of cases is 4, Range of values is 10 to 13
  1026                           ; switch strategies available:
  1027                           ; Name         Instructions Cycles
  1028                           ; simple_byte           13     7 (average)
  1029                           ;	Chosen strategy is simple_byte
  1030   002320  500F               	movf	??_evaluate^0,w,c
  1031   002322  0A0A               	xorlw	10	; case 10
  1032   002324  B4D8               	btfsc	status,2,c
  1033   002326  EF62  F011         	goto	l1078
  1034   00232A  0A01               	xorlw	1	; case 11
  1035   00232C  B4D8               	btfsc	status,2,c
  1036   00232E  EF67  F011         	goto	l1080
  1037   002332  0A07               	xorlw	7	; case 12
  1038   002334  B4D8               	btfsc	status,2,c
  1039   002336  EF6C  F011         	goto	l1082
  1040   00233A  0A01               	xorlw	1	; case 13
  1041   00233C  B4D8               	btfsc	status,2,c
  1042   00233E  EF73  F011         	goto	l1084
  1043   002342  EF81  F011         	goto	l1086
  1044   002346                     l1090:
  1045                           
  1046                           ;newmain.c: 174:     return result;
  1047   002346  5011               	movf	evaluate@result^0,w,c
  1048   002348  0012               	return		;funcret
  1049   00234A                     __end_of_evaluate:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function ___awdiv *****************
  1053 ;; Defined at:
  1054 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  dividend        2    0[COMRAM] int 
  1057 ;;  divisor         2    2[COMRAM] int 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  quotient        2    6[COMRAM] int 
  1060 ;;  sign            1    5[COMRAM] unsigned char 
  1061 ;;  counter         1    4[COMRAM] unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  2    0[COMRAM] int 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1072 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1074 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1075 ;;Total ram usage:        8 bytes
  1076 ;; Hardware stack levels used: 1
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_evaluate
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text6
  1085   002170                     __ptext6:
  1086                           	callstack 0
  1087   002170                     ___awdiv:
  1088                           	callstack 29
  1089   002170  0E00               	movlw	0
  1090   002172  6E06               	movwf	___awdiv@sign^0,c
  1091   002174  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1092   002176  EFC1  F010         	goto	u150
  1093   00217A  EFBF  F010         	goto	u151
  1094   00217E                     u151:
  1095   00217E  EFC7  F010         	goto	l1040
  1096   002182                     u150:
  1097   002182  6C03               	negf	___awdiv@divisor^0,c
  1098   002184  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1099   002186  B0D8               	btfsc	status,0,c
  1100   002188  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1101   00218A  0E01               	movlw	1
  1102   00218C  6E06               	movwf	___awdiv@sign^0,c
  1103   00218E                     l1040:
  1104   00218E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1105   002190  EFCE  F010         	goto	u160
  1106   002194  EFCC  F010         	goto	u161
  1107   002198                     u161:
  1108   002198  EFD4  F010         	goto	l1046
  1109   00219C                     u160:
  1110   00219C  6C01               	negf	___awdiv@dividend^0,c
  1111   00219E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1112   0021A0  B0D8               	btfsc	status,0,c
  1113   0021A2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1114   0021A4  0E01               	movlw	1
  1115   0021A6  1A06               	xorwf	___awdiv@sign^0,f,c
  1116   0021A8                     l1046:
  1117   0021A8  0E00               	movlw	0
  1118   0021AA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1119   0021AC  0E00               	movlw	0
  1120   0021AE  6E07               	movwf	___awdiv@quotient^0,c
  1121   0021B0  5003               	movf	___awdiv@divisor^0,w,c
  1122   0021B2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1123   0021B4  B4D8               	btfsc	status,2,c
  1124   0021B6  EFDF  F010         	goto	u171
  1125   0021BA  EFE1  F010         	goto	u170
  1126   0021BE                     u171:
  1127   0021BE  EF09  F011         	goto	l1068
  1128   0021C2                     u170:
  1129   0021C2  0E01               	movlw	1
  1130   0021C4  6E05               	movwf	___awdiv@counter^0,c
  1131   0021C6  EFE9  F010         	goto	l1054
  1132   0021CA                     l1052:
  1133   0021CA  90D8               	bcf	status,0,c
  1134   0021CC  3603               	rlcf	___awdiv@divisor^0,f,c
  1135   0021CE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1136   0021D0  2A05               	incf	___awdiv@counter^0,f,c
  1137   0021D2                     l1054:
  1138   0021D2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1139   0021D4  EFEE  F010         	goto	u181
  1140   0021D8  EFF0  F010         	goto	u180
  1141   0021DC                     u181:
  1142   0021DC  EFE5  F010         	goto	l1052
  1143   0021E0                     u180:
  1144   0021E0                     l1056:
  1145   0021E0  90D8               	bcf	status,0,c
  1146   0021E2  3607               	rlcf	___awdiv@quotient^0,f,c
  1147   0021E4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1148   0021E6  5003               	movf	___awdiv@divisor^0,w,c
  1149   0021E8  5C01               	subwf	___awdiv@dividend^0,w,c
  1150   0021EA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1151   0021EC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1152   0021EE  A0D8               	btfss	status,0,c
  1153   0021F0  EFFC  F010         	goto	u191
  1154   0021F4  EFFE  F010         	goto	u190
  1155   0021F8                     u191:
  1156   0021F8  EF03  F011         	goto	l1064
  1157   0021FC                     u190:
  1158   0021FC  5003               	movf	___awdiv@divisor^0,w,c
  1159   0021FE  5E01               	subwf	___awdiv@dividend^0,f,c
  1160   002200  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1161   002202  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1162   002204  8007               	bsf	___awdiv@quotient^0,0,c
  1163   002206                     l1064:
  1164   002206  90D8               	bcf	status,0,c
  1165   002208  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1166   00220A  3203               	rrcf	___awdiv@divisor^0,f,c
  1167   00220C  2E05               	decfsz	___awdiv@counter^0,f,c
  1168   00220E  EFF0  F010         	goto	l1056
  1169   002212                     l1068:
  1170   002212  5006               	movf	___awdiv@sign^0,w,c
  1171   002214  B4D8               	btfsc	status,2,c
  1172   002216  EF0F  F011         	goto	u201
  1173   00221A  EF11  F011         	goto	u200
  1174   00221E                     u201:
  1175   00221E  EF15  F011         	goto	l1072
  1176   002222                     u200:
  1177   002222  6C07               	negf	___awdiv@quotient^0,c
  1178   002224  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1179   002226  B0D8               	btfsc	status,0,c
  1180   002228  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1181   00222A                     l1072:
  1182   00222A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1183   00222E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1184   002232  0012               	return		;funcret
  1185   002234                     __end_of___awdiv:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _display *****************
  1189 ;; Defined at:
  1190 ;;		line 177 in file "newmain.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  Result          1    wreg     unsigned char 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  Result          1    2[COMRAM] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1208 ;;Total ram usage:        3 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text7
  1218   00234A                     __ptext7:
  1219                           	callstack 0
  1220   00234A                     _display:
  1221                           	callstack 30
  1222                           
  1223                           ;incstack = 0
  1224                           ;display@Result stored from wreg
  1225   00234A  6E03               	movwf	display@Result^0,c
  1226   00234C                     
  1227                           ;newmain.c: 177: void display(unsigned char Result);newmain.c: 178: {;newmain.c: 180:   
      +                            PORTC = 0b00000100;
  1228   00234C  0E04               	movlw	4
  1229   00234E  6ECC               	movwf	204,c	;volatile
  1230   002350                     
  1231                           ;newmain.c: 181:     PORTD = lookupTable[Result & 0x0F];
  1232   002350  C003  F001         	movff	display@Result,??_display
  1233   002354  0E0F               	movlw	15
  1234   002356  1601               	andwf	??_display^0,f,c
  1235   002358  5001               	movf	??_display^0,w,c
  1236   00235A  0F01               	addlw	low _lookupTable
  1237   00235C  6E02               	movwf	(??_display+1)^0,c
  1238   00235E  0060  F00B  FFF6   	movff	??_display+1,tblptrl
  1239   002364                     	if	1	;There is more than 1 active tblptr byte
  1240   002364  0E20               	movlw	high __smallconst
  1241   002366  6EF7               	movwf	tblptrh,c
  1242   002368                     	endif
  1243   002368                     	if	0	;tblptru may be non-zero
  1244   002368                     	endif
  1245   002368                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1246   002368  0E00               	movlw	low (__smallconst shr (0+16))
  1247   00236A  6EF8               	movwf	tblptru,c
  1248   00236C                     	endif
  1249   00236C  0008               	tblrd		*
  1250   00236E  006F FFD7 FFCD     	movff	tablat,16333	;volatile
  1251   002374                     
  1252                           ;newmain.c: 183:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1253   002374  0E0D               	movlw	13
  1254   002376  6E01               	movwf	??_display^0,c
  1255   002378  0EFC               	movlw	252
  1256   00237A                     u237:
  1257   00237A  2EE8               	decfsz	wreg,f,c
  1258   00237C  D7FE               	bra	u237
  1259   00237E  2E01               	decfsz	??_display^0,f,c
  1260   002380  D7FC               	bra	u237
  1261   002382                     
  1262                           ;newmain.c: 184:     PORTC = 0b00001000;
  1263   002382  0E08               	movlw	8
  1264   002384  6ECC               	movwf	204,c	;volatile
  1265                           
  1266                           ;newmain.c: 185:     PORTD = lookupTable[(Result & 0xF0) >> 4];
  1267   002386  C003  F001         	movff	display@Result,??_display
  1268   00238A  3A01               	swapf	??_display^0,f,c
  1269   00238C  0E0F               	movlw	15
  1270   00238E  1601               	andwf	??_display^0,f,c
  1271   002390  0E0F               	movlw	15
  1272   002392  1601               	andwf	??_display^0,f,c
  1273   002394  5001               	movf	??_display^0,w,c
  1274   002396  0F01               	addlw	low _lookupTable
  1275   002398  6E02               	movwf	(??_display+1)^0,c
  1276   00239A  0060  F00B  FFF6   	movff	??_display+1,tblptrl
  1277   0023A0                     	if	1	;There is more than 1 active tblptr byte
  1278   0023A0  0E20               	movlw	high __smallconst
  1279   0023A2  6EF7               	movwf	tblptrh,c
  1280   0023A4                     	endif
  1281   0023A4                     	if	0	;tblptru may be non-zero
  1282   0023A4                     	endif
  1283   0023A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1284   0023A4  0E00               	movlw	low (__smallconst shr (0+16))
  1285   0023A6  6EF8               	movwf	tblptru,c
  1286   0023A8                     	endif
  1287   0023A8  0008               	tblrd		*
  1288   0023AA  006F FFD7 FFCD     	movff	tablat,16333	;volatile
  1289   0023B0  0012               	return		;funcret
  1290   0023B2                     __end_of_display:
  1291                           	callstack 0
  1292                           
  1293                           	psect	rparam
  1294   000000                     tosu	equ	0x3FFF
  1295                           tosh	equ	0x3FFE
  1296                           tosl	equ	0x3FFD
  1297                           stkptr	equ	0x3FFC
  1298                           pclatu	equ	0x3FFB
  1299                           pclath	equ	0x3FFA
  1300                           pcl	equ	0x3FF9
  1301                           tblptru	equ	0x3FF8
  1302                           tblptrh	equ	0x3FF7
  1303                           tblptrl	equ	0x3FF6
  1304                           tablat	equ	0x3FF5
  1305                           prodh	equ	0x3FF4
  1306                           prodl	equ	0x3FF3
  1307                           indf0	equ	0x3FEF
  1308                           postinc0	equ	0x3FEE
  1309                           postdec0	equ	0x3FED
  1310                           preinc0	equ	0x3FEC
  1311                           plusw0	equ	0x3FEB
  1312                           fsr0h	equ	0x3FEA
  1313                           fsr0l	equ	0x3FE9
  1314                           wreg	equ	0x3FE8
  1315                           indf1	equ	0x3FE7
  1316                           postinc1	equ	0x3FE6
  1317                           postdec1	equ	0x3FE5
  1318                           preinc1	equ	0x3FE4
  1319                           plusw1	equ	0x3FE3
  1320                           fsr1h	equ	0x3FE2
  1321                           fsr1l	equ	0x3FE1
  1322                           bsr	equ	0x3FE0
  1323                           indf2	equ	0x3FDF
  1324                           postinc2	equ	0x3FDE
  1325                           postdec2	equ	0x3FDD
  1326                           preinc2	equ	0x3FDC
  1327                           plusw2	equ	0x3FDB
  1328                           fsr2h	equ	0x3FDA
  1329                           fsr2l	equ	0x3FD9
  1330                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         4
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_evaluate
    _evaluate->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     936
                            _display
                           _evaluate
                  _getInputOperation
                          _getInputX
                          _getInputY
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getInputY                                            0     0      0       0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getInputX                                            0     0      0       0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getInputOperation                                    0     0      0       0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getKeypress                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _evaluate                                             9     3      6     906
                                              8 COMRAM     9     3      6
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _display                                              3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _evaluate
     ___awdiv
   _getInputOperation
     _getKeypress
   _getInputX
     _getKeypress
   _getInputY
     _getKeypress
   _getKeypress

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      77        0.0%
BITBIGSFRlllhh     54A      0       0      73        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      250      0       0      75        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      16       1       23.2%
BITBIGSFRh          32      0       0      68        0.0%
BITBIGSFRlllhl      1F      0       0      74        0.0%
BITBIGSFRllhh        5      0       0      71        0.0%
BITBIGSFRlhh         5      0       0      69        0.0%
BITBIGSFRllhl        1      0       0      72        0.0%
BITBIGSFRlhl         1      0       0      70        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      76        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 06 14:22:45 2024

                       l37 216E                         l82 2486                         l83 248A  
                       l68 2454                         l93 2348                         l77 2402  
                       l96 23B0                         u70 2424                         u71 2420  
                       u80 244A                         u81 2446                         u90 23D2  
                       u91 23CE               ___awdiv@sign 0006                        l340 2232  
                      l820 2090                        l812 207C                        l804 2044  
                      l830 20C8                        l806 206A                        l816 2086  
                      l808 2072                        l920 2404                        l850 2116  
                      l842 20E6                        l834 20D2                        l826 209A  
                      l930 242E                        l922 2408                        l860 2132  
                      l852 211E                        l828 20C0                        l932 2434  
                      l924 240E                        l940 23B6                        l870 2146  
                      l838 20DC                        l790 2026                        l782 2012  
                      l934 243A                        l926 2414                        l950 23E2  
                      l942 23BC                        l872 216C                        l864 213C  
                      l856 2128                        l848 20F0                        l784 2014  
                      l960 2460                        l936 244A                        l928 2424  
                      l952 23E8                        l944 23C2                        l794 2030  
                      l786 201C                        l962 2466                        l954 23F8  
                      l946 23D2                        l938 23B2                        l964 2476  
                      l956 2456                        l948 23DC                        l990 2350  
                      l798 203A                        l958 245A                        l992 2374  
                      l994 2382                        l988 234C                        u100 23F8  
                      u101 23F4                        u110 2476                        u111 2472  
                      u200 2222                        u120 2486                        u201 221E  
                      u121 2482                        u210 22A4                        u211 22A0  
                      u220 22B8                        u221 22B4                        u150 2182  
                      u151 217E                        u160 219C                        u161 2198  
                      u170 21C2                        u171 21BE                        u180 21E0  
                      u237 237A                        u181 21DC                        u190 21FC  
                      u191 21F8                        _key 0016                        wreg 3FE8  
                     l1100 2266                       l1110 2290                       l1102 226A  
                     l1040 218E                       l1032 2170                       l1112 22A4  
                     l1104 226E                       l1050 21C2                       l1042 219C  
                     l1034 2174                       l1106 2272                       l1060 21FC  
                     l1052 21CA                       l1044 21A4                       l1036 2182  
                     l1108 228A                       l1070 2222                       l1062 2204  
                     l1054 21D2                       l1046 21A8                       l1038 218A  
                     l1134 2320                       l1072 222A                       l1064 2206  
                     l1056 21E0                       l1048 21B0                       l1080 22CE  
                     l1066 220C                       l1058 21E6                       l1082 22D8  
                     l1090 2346                       l1068 2212                       l1084 22E6  
                     l1076 22C0                       l1086 2302                       l1078 22C4  
                     l1088 230A                       l1098 2234                       _LATB 3FBB  
                     _LATD 3FBD                       _main 2234                       prodl 3FF3  
                     start FFFC               ___param_bank 0000                      ?_main 0001  
          __end_of___awdiv 2234            ___awdiv@divisor 0003            ___awdiv@counter 0005  
                    _PORTB 3FCB                      _PORTC 3FCC                      _PORTD 3FCD  
                    _TRISB 3FC3                      _TRISD 3FC5            __end_of_display 23B2  
                    tablat 3FF5                      status 3FD8            __initialization 248C  
             __end_of_main 22C0                     ??_main 0012              __activetblptr 0003  
         ___awdiv@dividend 0001                     _ANSELB 3A50                     _ANSELD 3A70  
            display@Result 0003                     _Result 0012                  ??___awdiv 0005  
         __end_of_evaluate 234A           ___awdiv@quotient 0007                     isa$std 0001  
                ??_display 0001               __mediumconst 0000                     tblptrh 3FF7  
                   tblptrl 3FF6                     tblptru 3FF8             evaluate@result 0011  
               __accesstop 0060    __end_of__initialization 2494              ___rparam_used 0001  
           __pcstackCOMRAM 0001                 __pnvCOMRAM 0016                  ?_evaluate 0009  
        __end_of_getInputX 2456          __end_of_getInputY 2404                    __Hparam 0000  
                  __Lparam 0000                    ___awdiv 2170               __psmallconst 2000  
                  __pcinit 248C                    __ramtop 2000                    __ptext0 2234  
                  __ptext1 23B2                    __ptext2 2404                    __ptext3 2456  
                  __ptext4 2012                    __ptext5 22C0                    __ptext6 2170  
                  __ptext7 234A                    _display 234A                    _input_X 0015  
                  _input_Y 0014          _getInputOperation 2456         ?_getInputOperation 0001  
     end_of_initialization 2494                 ??_evaluate 000F        ??_getInputOperation 0001  
            ??_getKeypress 0001  __end_of_getInputOperation 248C            evaluate@input_X 0009  
          evaluate@input_Y 000B        start_initialization 248C        __end_of_getKeypress 2170  
                _Operation 0013                __pbssCOMRAM 0012                   ?___awdiv 0001  
                _getInputX 2404                  _getInputY 23B2                   ?_display 0001  
              __smallconst 2000                _getKeypress 2012                 ?_getInputX 0001  
               ?_getInputY 0001        __end_of_lookupTable 2011                   __Hrparam 0000  
                 __Lrparam 0000                   _evaluate 22C0          evaluate@Operation 000D  
                 isa$xinst 0000                ??_getInputX 0001                ??_getInputY 0001  
              _lookupTable 2001               ?_getKeypress 0001  
