

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Apr 09 17:41:28 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47K42 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	nvCOMRAM
    58   000018                     __pnvCOMRAM:
    59                           	callstack 0
    60   000018                     _key:
    61                           	callstack 0
    62   000018                     	ds	1
    63   000000                     _ANSELB	set	14928
    64   000000                     _LATB	set	16315
    65   000000                     _TRISB	set	16323
    66   000000                     _PORTB	set	16331
    67   000000                     _PORTD	set	16333
    68   000000                     _TRISD	set	16325
    69   000000                     _LATD	set	16317
    70   000000                     _ANSELD	set	14960
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75   002648                     __pcinit:
    76                           	callstack 0
    77   002648                     start_initialization:
    78                           	callstack 0
    79   002648                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (4 bytes)
    83   002648  6A17               	clrf	(__pbssCOMRAM+3)& (0+255),c
    84   00264A  6A16               	clrf	(__pbssCOMRAM+2)& (0+255),c
    85   00264C  6A15               	clrf	(__pbssCOMRAM+1)& (0+255),c
    86   00264E  6A14               	clrf	__pbssCOMRAM& (0+255),c
    87   002650                     end_of_initialization:
    88                           	callstack 0
    89   002650                     __end_of__initialization:
    90                           	callstack 0
    91   002650  0100               	movlb	0
    92   002652  EF41  F011         	goto	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMRAM
    95   000014                     __pbssCOMRAM:
    96                           	callstack 0
    97   000014                     _Result:
    98                           	callstack 0
    99   000014                     	ds	1
   100   000015                     _Operation:
   101                           	callstack 0
   102   000015                     	ds	1
   103   000016                     _input_Y:
   104                           	callstack 0
   105   000016                     	ds	1
   106   000017                     _input_X:
   107                           	callstack 0
   108   000017                     	ds	1
   109                           
   110                           	psect	cstackCOMRAM
   111   000001                     __pcstackCOMRAM:
   112                           	callstack 0
   113   000001                     ??_getKeypress:
   114   000001                     ?___awdiv:
   115                           	callstack 0
   116   000001                     display@Result:
   117                           	callstack 0
   118   000001                     ___awdiv@dividend:
   119                           	callstack 0
   120                           
   121                           ; 2 bytes @ 0x0
   122   000001                     	ds	1
   123   000002                     ??_getInputX:
   124   000002                     ??_getInputY:
   125   000002                     ??_getInputOperation:
   126                           
   127                           ; 1 bytes @ 0x1
   128   000002                     	ds	1
   129   000003                     ___awdiv@divisor:
   130                           	callstack 0
   131                           
   132                           ; 2 bytes @ 0x2
   133   000003                     	ds	2
   134   000005                     ___awdiv@counter:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x4
   138   000005                     	ds	1
   139   000006                     ___awdiv@sign:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x5
   143   000006                     	ds	1
   144   000007                     ___awdiv@quotient:
   145                           	callstack 0
   146                           
   147                           ; 2 bytes @ 0x6
   148   000007                     	ds	2
   149   000009                     evaluate@input_X:
   150                           	callstack 0
   151                           
   152                           ; 2 bytes @ 0x8
   153   000009                     	ds	2
   154   00000B                     evaluate@input_Y:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0xA
   158   00000B                     	ds	2
   159   00000D                     evaluate@Operation:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0xC
   163   00000D                     	ds	2
   164   00000F                     ??_evaluate:
   165                           
   166                           ; 1 bytes @ 0xE
   167   00000F                     	ds	2
   168   000011                     evaluate@result:
   169                           	callstack 0
   170                           
   171                           ; 1 bytes @ 0x10
   172   000011                     	ds	1
   173   000012                     ??_main:
   174                           
   175                           ; 1 bytes @ 0x11
   176   000012                     	ds	2
   177                           
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 235 in file "newmain.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   200 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   201 ;;Total ram usage:        2 bytes
   202 ;; Hardware stack levels required when called: 2
   203 ;; This function calls:
   204 ;;		_display
   205 ;;		_evaluate
   206 ;;		_getInputOperation
   207 ;;		_getInputX
   208 ;;		_getInputY
   209 ;;		_getKeypress
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text0
   216   002282                     __ptext0:
   217                           	callstack 0
   218   002282                     _main:
   219                           	callstack 29
   220   002282                     
   221                           ;newmain.c: 238:     TRISB = 0xF0;
   222   002282  0EF0               	movlw	240
   223   002284  6EC3               	movwf	195,c	;volatile
   224                           
   225                           ;newmain.c: 239:     LATB = 0;
   226   002286  0E00               	movlw	0
   227   002288  6EBB               	movwf	187,c	;volatile
   228                           
   229                           ;newmain.c: 240:     PORTB = 0;
   230   00228A  0E00               	movlw	0
   231   00228C  6ECB               	movwf	203,c	;volatile
   232                           
   233                           ;newmain.c: 241:     ANSELB = 0;
   234   00228E  0E00               	movlw	0
   235   002290  013A               	movlb	58	; () banked
   236   002292  6F50               	movwf	80,b	;volatile
   237                           
   238                           ;newmain.c: 243:     TRISD = 0;
   239   002294  0E00               	movlw	0
   240   002296  6EC5               	movwf	197,c	;volatile
   241                           
   242                           ;newmain.c: 244:     LATD = 0;
   243   002298  0E00               	movlw	0
   244   00229A  6EBD               	movwf	189,c	;volatile
   245                           
   246                           ;newmain.c: 245:     PORTD = 0;
   247   00229C  0E00               	movlw	0
   248   00229E  6ECD               	movwf	205,c	;volatile
   249                           
   250                           ;newmain.c: 246:     ANSELD = 0;
   251   0022A0  0E00               	movlw	0
   252   0022A2  6F70               	movwf	112,b	;volatile
   253   0022A4                     l1177:
   254                           
   255                           ;newmain.c: 250:     {;newmain.c: 251:         getInputX();
   256   0022A4  ECA3  F012         	call	_getInputX	;wreg free
   257   0022A8                     
   258                           ;newmain.c: 252:         PORTD = 0x01;
   259   0022A8  0E01               	movlw	1
   260   0022AA  6ECD               	movwf	205,c	;volatile
   261   0022AC                     
   262                           ;newmain.c: 253:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   263   0022AC  0E06               	movlw	6
   264   0022AE  6E13               	movwf	(??_main+1)^0,c
   265   0022B0  0E13               	movlw	19
   266   0022B2  6E12               	movwf	??_main^0,c
   267   0022B4  0EAE               	movlw	174
   268   0022B6                     u397:
   269   0022B6  2EE8               	decfsz	wreg,f,c
   270   0022B8  D7FE               	bra	u397
   271   0022BA  2E12               	decfsz	??_main^0,f,c
   272   0022BC  D7FC               	bra	u397
   273   0022BE  2E13               	decfsz	(??_main+1)^0,f,c
   274   0022C0  D7FA               	bra	u397
   275   0022C2                     
   276                           ;newmain.c: 254:         getInputOperation();
   277   0022C2  ECE6  F012         	call	_getInputOperation	;wreg free
   278   0022C6                     
   279                           ;newmain.c: 255:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   280   0022C6  0E06               	movlw	6
   281   0022C8  6E13               	movwf	(??_main+1)^0,c
   282   0022CA  0E13               	movlw	19
   283   0022CC  6E12               	movwf	??_main^0,c
   284   0022CE  0EAE               	movlw	174
   285   0022D0                     u407:
   286   0022D0  2EE8               	decfsz	wreg,f,c
   287   0022D2  D7FE               	bra	u407
   288   0022D4  2E12               	decfsz	??_main^0,f,c
   289   0022D6  D7FC               	bra	u407
   290   0022D8  2E13               	decfsz	(??_main+1)^0,f,c
   291   0022DA  D7FA               	bra	u407
   292   0022DC                     
   293                           ;newmain.c: 256:         getInputY();
   294   0022DC  EC60  F012         	call	_getInputY	;wreg free
   295   0022E0                     
   296                           ;newmain.c: 257:         PORTD = 0x02;
   297   0022E0  0E02               	movlw	2
   298   0022E2  6ECD               	movwf	205,c	;volatile
   299   0022E4                     
   300                           ;newmain.c: 258:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   301   0022E4  0E06               	movlw	6
   302   0022E6  6E13               	movwf	(??_main+1)^0,c
   303   0022E8  0E13               	movlw	19
   304   0022EA  6E12               	movwf	??_main^0,c
   305   0022EC  0EAE               	movlw	174
   306   0022EE                     u417:
   307   0022EE  2EE8               	decfsz	wreg,f,c
   308   0022F0  D7FE               	bra	u417
   309   0022F2  2E12               	decfsz	??_main^0,f,c
   310   0022F4  D7FC               	bra	u417
   311   0022F6  2E13               	decfsz	(??_main+1)^0,f,c
   312   0022F8  D7FA               	bra	u417
   313                           
   314                           ;newmain.c: 260:         while(getKeypress() != 0x0F)
   315   0022FA  EF86  F011         	goto	l1195
   316   0022FE                     l1193:
   317                           
   318                           ;newmain.c: 261:         {_delay((unsigned long)((100)*(4000000/4000.0)));}
   319   0022FE  0E82               	movlw	130
   320   002300  6E12               	movwf	??_main^0,c
   321   002302  0EDE               	movlw	222
   322   002304                     u427:
   323   002304  2EE8               	decfsz	wreg,f,c
   324   002306  D7FE               	bra	u427
   325   002308  2E12               	decfsz	??_main^0,f,c
   326   00230A  D7FC               	bra	u427
   327   00230C                     l1195:
   328                           
   329                           ;newmain.c: 260:         while(getKeypress() != 0x0F)
   330   00230C  EC01  F010         	call	_getKeypress	;wreg free
   331   002310  0A0F               	xorlw	15
   332   002312  A4D8               	btfss	status,2,c
   333   002314  EF8E  F011         	goto	u371
   334   002318  EF90  F011         	goto	u370
   335   00231C                     u371:
   336   00231C  EF7F  F011         	goto	l1193
   337   002320                     u370:
   338   002320                     
   339                           ;newmain.c: 263:         Result = evaluate(input_X,input_Y,Operation);
   340   002320  5017               	movf	_input_X^0,w,c
   341   002322  6E09               	movwf	evaluate@input_X^0,c
   342   002324  6A0A               	clrf	(evaluate@input_X+1)^0,c
   343   002326  BE09               	btfsc	evaluate@input_X^0,7,c
   344   002328  060A               	decf	(evaluate@input_X+1)^0,f,c
   345   00232A  5016               	movf	_input_Y^0,w,c
   346   00232C  6E0B               	movwf	evaluate@input_Y^0,c
   347   00232E  6A0C               	clrf	(evaluate@input_Y+1)^0,c
   348   002330  BE0B               	btfsc	evaluate@input_Y^0,7,c
   349   002332  060C               	decf	(evaluate@input_Y+1)^0,f,c
   350   002334  5015               	movf	_Operation^0,w,c
   351   002336  6E0D               	movwf	evaluate@Operation^0,c
   352   002338  6A0E               	clrf	(evaluate@Operation+1)^0,c
   353   00233A  BE0D               	btfsc	evaluate@Operation^0,7,c
   354   00233C  060E               	decf	(evaluate@Operation+1)^0,f,c
   355   00233E  EC1C  F012         	call	_evaluate	;wreg free
   356   002342  6E14               	movwf	_Result^0,c
   357   002344                     
   358                           ;newmain.c: 264:         display(Result);
   359   002344  5014               	movf	_Result^0,w,c
   360   002346  EC2B  F013         	call	_display
   361   00234A                     l1201:
   362                           
   363                           ;newmain.c: 265:         _delay((unsigned long)((100)*(4000000/4000.0)));
   364   00234A  0E82               	movlw	130
   365   00234C  6E12               	movwf	??_main^0,c
   366   00234E  0EDE               	movlw	222
   367   002350                     u437:
   368   002350  2EE8               	decfsz	wreg,f,c
   369   002352  D7FE               	bra	u437
   370   002354  2E12               	decfsz	??_main^0,f,c
   371   002356  D7FC               	bra	u437
   372   002358                     
   373                           ;newmain.c: 266:         while(getKeypress() != 0x0E)
   374   002358  EC01  F010         	call	_getKeypress	;wreg free
   375   00235C  0A0E               	xorlw	14
   376   00235E  A4D8               	btfss	status,2,c
   377   002360  EFB4  F011         	goto	u381
   378   002364  EFB6  F011         	goto	u380
   379   002368                     u381:
   380   002368  EFA5  F011         	goto	l1201
   381   00236C                     u380:
   382   00236C  EF52  F011         	goto	l1177
   383   002370  EFFE  F0FF         	goto	start
   384   002374                     __end_of_main:
   385                           	callstack 0
   386                           
   387 ;; *************** function _getInputY *****************
   388 ;; Defined at:
   389 ;;		line 166 in file "newmain.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   407 ;;Total ram usage:        2 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 1
   410 ;; This function calls:
   411 ;;		_getKeypress
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text1
   418   0024C0                     __ptext1:
   419                           	callstack 0
   420   0024C0                     _getInputY:
   421                           	callstack 29
   422   0024C0                     
   423                           ;newmain.c: 168:     input_Y = 0;
   424   0024C0  0E00               	movlw	0
   425   0024C2  6E16               	movwf	_input_Y^0,c
   426   0024C4                     
   427                           ;newmain.c: 169:     key = 0xFF;
   428   0024C4  6818               	setf	_key^0,c
   429                           
   430                           ;newmain.c: 170:     while (key >= 0x0A)
   431   0024C6  EF6F  F012         	goto	l965
   432   0024CA                     l961:
   433                           
   434                           ;newmain.c: 171:     {;newmain.c: 172:         key = getKeypress();
   435   0024CA  EC01  F010         	call	_getKeypress	;wreg free
   436   0024CE  6E18               	movwf	_key^0,c
   437   0024D0                     
   438                           ;newmain.c: 173:         _delay((unsigned long)((10)*(4000000/4000.0)));
   439   0024D0  0E0D               	movlw	13
   440   0024D2  6E02               	movwf	??_getInputY^0,c
   441   0024D4  0EFC               	movlw	252
   442   0024D6                     u447:
   443   0024D6  2EE8               	decfsz	wreg,f,c
   444   0024D8  D7FE               	bra	u447
   445   0024DA  2E02               	decfsz	??_getInputY^0,f,c
   446   0024DC  D7FC               	bra	u447
   447   0024DE                     l965:
   448                           
   449                           ;newmain.c: 170:     while (key >= 0x0A)
   450   0024DE  5018               	movf	_key^0,w,c
   451   0024E0  0A80               	xorlw	128
   452   0024E2  0F76               	addlw	-138
   453   0024E4  B0D8               	btfsc	status,0,c
   454   0024E6  EF77  F012         	goto	u251
   455   0024EA  EF79  F012         	goto	u250
   456   0024EE                     u251:
   457   0024EE  EF65  F012         	goto	l961
   458   0024F2                     u250:
   459   0024F2                     
   460                           ;newmain.c: 175:     _delay((unsigned long)((300)*(4000000/4000.0)));
   461   0024F2  0E02               	movlw	2
   462   0024F4  6E03               	movwf	(??_getInputY+1)^0,c
   463   0024F6  0E86               	movlw	134
   464   0024F8  6E02               	movwf	??_getInputY^0,c
   465   0024FA  0E99               	movlw	153
   466   0024FC                     u457:
   467   0024FC  2EE8               	decfsz	wreg,f,c
   468   0024FE  D7FE               	bra	u457
   469   002500  2E02               	decfsz	??_getInputY^0,f,c
   470   002502  D7FC               	bra	u457
   471   002504  2E03               	decfsz	(??_getInputY+1)^0,f,c
   472   002506  D7FA               	bra	u457
   473   002508  0000               	nop	
   474   00250A                     
   475                           ;newmain.c: 176:     input_Y += 10*key;
   476   00250A  5018               	movf	_key^0,w,c
   477   00250C  0D0A               	mullw	10
   478   00250E  50F3               	movf	243,w,c
   479   002510  2616               	addwf	_input_Y^0,f,c
   480   002512                     
   481                           ;newmain.c: 177:     key = 0xFF;
   482   002512  6818               	setf	_key^0,c
   483                           
   484                           ;newmain.c: 178:     while (key >= 0x0A)
   485   002514  EF96  F012         	goto	l977
   486   002518                     l973:
   487                           
   488                           ;newmain.c: 179:     {;newmain.c: 180:         key = getKeypress();
   489   002518  EC01  F010         	call	_getKeypress	;wreg free
   490   00251C  6E18               	movwf	_key^0,c
   491   00251E                     
   492                           ;newmain.c: 181:         _delay((unsigned long)((10)*(4000000/4000.0)));
   493   00251E  0E0D               	movlw	13
   494   002520  6E02               	movwf	??_getInputY^0,c
   495   002522  0EFC               	movlw	252
   496   002524                     u467:
   497   002524  2EE8               	decfsz	wreg,f,c
   498   002526  D7FE               	bra	u467
   499   002528  2E02               	decfsz	??_getInputY^0,f,c
   500   00252A  D7FC               	bra	u467
   501   00252C                     l977:
   502                           
   503                           ;newmain.c: 178:     while (key >= 0x0A)
   504   00252C  5018               	movf	_key^0,w,c
   505   00252E  0A80               	xorlw	128
   506   002530  0F76               	addlw	-138
   507   002532  B0D8               	btfsc	status,0,c
   508   002534  EF9E  F012         	goto	u261
   509   002538  EFA0  F012         	goto	u260
   510   00253C                     u261:
   511   00253C  EF8C  F012         	goto	l973
   512   002540                     u260:
   513   002540                     
   514                           ;newmain.c: 183:     input_Y += key;
   515   002540  5018               	movf	_key^0,w,c
   516   002542  2616               	addwf	_input_Y^0,f,c
   517   002544  0012               	return		;funcret
   518   002546                     __end_of_getInputY:
   519                           	callstack 0
   520                           
   521 ;; *************** function _getInputX *****************
   522 ;; Defined at:
   523 ;;		line 145 in file "newmain.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   541 ;;Total ram usage:        2 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 1
   544 ;; This function calls:
   545 ;;		_getKeypress
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text2
   552   002546                     __ptext2:
   553                           	callstack 0
   554   002546                     _getInputX:
   555                           	callstack 29
   556   002546                     
   557                           ;newmain.c: 147:     input_X = 0;
   558   002546  0E00               	movlw	0
   559   002548  6E17               	movwf	_input_X^0,c
   560   00254A                     
   561                           ;newmain.c: 148:     key = 0xFF;
   562   00254A  6818               	setf	_key^0,c
   563                           
   564                           ;newmain.c: 149:     while (key >= 0x0A)
   565   00254C  EFB2  F012         	goto	l941
   566   002550                     l937:
   567                           
   568                           ;newmain.c: 150:     {;newmain.c: 151:         key = getKeypress();
   569   002550  EC01  F010         	call	_getKeypress	;wreg free
   570   002554  6E18               	movwf	_key^0,c
   571   002556                     
   572                           ;newmain.c: 152:         _delay((unsigned long)((10)*(4000000/4000.0)));
   573   002556  0E0D               	movlw	13
   574   002558  6E02               	movwf	??_getInputX^0,c
   575   00255A  0EFC               	movlw	252
   576   00255C                     u477:
   577   00255C  2EE8               	decfsz	wreg,f,c
   578   00255E  D7FE               	bra	u477
   579   002560  2E02               	decfsz	??_getInputX^0,f,c
   580   002562  D7FC               	bra	u477
   581   002564                     l941:
   582                           
   583                           ;newmain.c: 149:     while (key >= 0x0A)
   584   002564  5018               	movf	_key^0,w,c
   585   002566  0A80               	xorlw	128
   586   002568  0F76               	addlw	-138
   587   00256A  B0D8               	btfsc	status,0,c
   588   00256C  EFBA  F012         	goto	u231
   589   002570  EFBC  F012         	goto	u230
   590   002574                     u231:
   591   002574  EFA8  F012         	goto	l937
   592   002578                     u230:
   593   002578                     
   594                           ;newmain.c: 154:     _delay((unsigned long)((300)*(4000000/4000.0)));
   595   002578  0E02               	movlw	2
   596   00257A  6E03               	movwf	(??_getInputX+1)^0,c
   597   00257C  0E86               	movlw	134
   598   00257E  6E02               	movwf	??_getInputX^0,c
   599   002580  0E99               	movlw	153
   600   002582                     u487:
   601   002582  2EE8               	decfsz	wreg,f,c
   602   002584  D7FE               	bra	u487
   603   002586  2E02               	decfsz	??_getInputX^0,f,c
   604   002588  D7FC               	bra	u487
   605   00258A  2E03               	decfsz	(??_getInputX+1)^0,f,c
   606   00258C  D7FA               	bra	u487
   607   00258E  0000               	nop	
   608   002590                     
   609                           ;newmain.c: 155:     input_X += 10*key;
   610   002590  5018               	movf	_key^0,w,c
   611   002592  0D0A               	mullw	10
   612   002594  50F3               	movf	243,w,c
   613   002596  2617               	addwf	_input_X^0,f,c
   614   002598                     
   615                           ;newmain.c: 156:     key = 0xFF;
   616   002598  6818               	setf	_key^0,c
   617                           
   618                           ;newmain.c: 157:     while (key >= 0x0A)
   619   00259A  EFD9  F012         	goto	l953
   620   00259E                     l949:
   621                           
   622                           ;newmain.c: 158:     {;newmain.c: 159:         key = getKeypress();
   623   00259E  EC01  F010         	call	_getKeypress	;wreg free
   624   0025A2  6E18               	movwf	_key^0,c
   625   0025A4                     
   626                           ;newmain.c: 160:         _delay((unsigned long)((10)*(4000000/4000.0)));
   627   0025A4  0E0D               	movlw	13
   628   0025A6  6E02               	movwf	??_getInputX^0,c
   629   0025A8  0EFC               	movlw	252
   630   0025AA                     u497:
   631   0025AA  2EE8               	decfsz	wreg,f,c
   632   0025AC  D7FE               	bra	u497
   633   0025AE  2E02               	decfsz	??_getInputX^0,f,c
   634   0025B0  D7FC               	bra	u497
   635   0025B2                     l953:
   636                           
   637                           ;newmain.c: 157:     while (key >= 0x0A)
   638   0025B2  5018               	movf	_key^0,w,c
   639   0025B4  0A80               	xorlw	128
   640   0025B6  0F76               	addlw	-138
   641   0025B8  B0D8               	btfsc	status,0,c
   642   0025BA  EFE1  F012         	goto	u241
   643   0025BE  EFE3  F012         	goto	u240
   644   0025C2                     u241:
   645   0025C2  EFCF  F012         	goto	l949
   646   0025C6                     u240:
   647   0025C6                     
   648                           ;newmain.c: 162:     input_X += key;
   649   0025C6  5018               	movf	_key^0,w,c
   650   0025C8  2617               	addwf	_input_X^0,f,c
   651   0025CA  0012               	return		;funcret
   652   0025CC                     __end_of_getInputX:
   653                           	callstack 0
   654                           
   655 ;; *************** function _getInputOperation *****************
   656 ;; Defined at:
   657 ;;		line 186 in file "newmain.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   675 ;;Total ram usage:        2 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; Hardware stack levels required when called: 1
   678 ;; This function calls:
   679 ;;		_getKeypress
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text3
   686   0025CC                     __ptext3:
   687                           	callstack 0
   688   0025CC                     _getInputOperation:
   689                           	callstack 29
   690   0025CC                     
   691                           ;newmain.c: 188:     Operation = 0;
   692   0025CC  0E00               	movlw	0
   693   0025CE  6E15               	movwf	_Operation^0,c
   694   0025D0                     
   695                           ;newmain.c: 189:     key = 0xFF;
   696   0025D0  6818               	setf	_key^0,c
   697                           
   698                           ;newmain.c: 190:     while (key >= 0x0A)
   699   0025D2  EFF5  F012         	goto	l989
   700   0025D6                     l985:
   701                           
   702                           ;newmain.c: 191:     {;newmain.c: 192:         key = getKeypress();
   703   0025D6  EC01  F010         	call	_getKeypress	;wreg free
   704   0025DA  6E18               	movwf	_key^0,c
   705   0025DC                     
   706                           ;newmain.c: 193:         _delay((unsigned long)((10)*(4000000/4000.0)));
   707   0025DC  0E0D               	movlw	13
   708   0025DE  6E02               	movwf	??_getInputOperation^0,c
   709   0025E0  0EFC               	movlw	252
   710   0025E2                     u507:
   711   0025E2  2EE8               	decfsz	wreg,f,c
   712   0025E4  D7FE               	bra	u507
   713   0025E6  2E02               	decfsz	??_getInputOperation^0,f,c
   714   0025E8  D7FC               	bra	u507
   715   0025EA                     l989:
   716                           
   717                           ;newmain.c: 190:     while (key >= 0x0A)
   718   0025EA  5018               	movf	_key^0,w,c
   719   0025EC  0A80               	xorlw	128
   720   0025EE  0F76               	addlw	-138
   721   0025F0  B0D8               	btfsc	status,0,c
   722   0025F2  EFFD  F012         	goto	u271
   723   0025F6  EFFF  F012         	goto	u270
   724   0025FA                     u271:
   725   0025FA  EFEB  F012         	goto	l985
   726   0025FE                     u270:
   727   0025FE                     
   728                           ;newmain.c: 195:     _delay((unsigned long)((500)*(4000000/4000.0)));
   729   0025FE  0E03               	movlw	3
   730   002600  6E03               	movwf	(??_getInputOperation+1)^0,c
   731   002602  0E8A               	movlw	138
   732   002604  6E02               	movwf	??_getInputOperation^0,c
   733   002606  0E56               	movlw	86
   734   002608                     u517:
   735   002608  2EE8               	decfsz	wreg,f,c
   736   00260A  D7FE               	bra	u517
   737   00260C  2E02               	decfsz	??_getInputOperation^0,f,c
   738   00260E  D7FC               	bra	u517
   739   002610  2E03               	decfsz	(??_getInputOperation+1)^0,f,c
   740   002612  D7FA               	bra	u517
   741   002614                     
   742                           ;newmain.c: 196:     key = 0xFF;
   743   002614  6818               	setf	_key^0,c
   744                           
   745                           ;newmain.c: 197:     while (key >= 0x0A)
   746   002616  EF17  F013         	goto	l999
   747   00261A                     l995:
   748                           
   749                           ;newmain.c: 198:     {;newmain.c: 199:         key = getKeypress();
   750   00261A  EC01  F010         	call	_getKeypress	;wreg free
   751   00261E  6E18               	movwf	_key^0,c
   752   002620                     
   753                           ;newmain.c: 200:         _delay((unsigned long)((10)*(4000000/4000.0)));
   754   002620  0E0D               	movlw	13
   755   002622  6E02               	movwf	??_getInputOperation^0,c
   756   002624  0EFC               	movlw	252
   757   002626                     u527:
   758   002626  2EE8               	decfsz	wreg,f,c
   759   002628  D7FE               	bra	u527
   760   00262A  2E02               	decfsz	??_getInputOperation^0,f,c
   761   00262C  D7FC               	bra	u527
   762   00262E                     l999:
   763                           
   764                           ;newmain.c: 197:     while (key >= 0x0A)
   765   00262E  5018               	movf	_key^0,w,c
   766   002630  0A80               	xorlw	128
   767   002632  0F76               	addlw	-138
   768   002634  B0D8               	btfsc	status,0,c
   769   002636  EF1F  F013         	goto	u281
   770   00263A  EF21  F013         	goto	u280
   771   00263E                     u281:
   772   00263E  EF0D  F013         	goto	l995
   773   002642                     u280:
   774   002642                     
   775                           ;newmain.c: 202:         Operation = key;
   776   002642  C018  F015         	movff	_key,_Operation
   777   002646  0012               	return		;funcret
   778   002648                     __end_of_getInputOperation:
   779                           	callstack 0
   780                           
   781 ;; *************** function _getKeypress *****************
   782 ;; Defined at:
   783 ;;		line 34 in file "newmain.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      char 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   801 ;;Total ram usage:        1 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_getInputX
   807 ;;		_getInputY
   808 ;;		_getInputOperation
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text4
   814   002002                     __ptext4:
   815                           	callstack 0
   816   002002                     _getKeypress:
   817                           	callstack 30
   818   002002                     
   819                           ;newmain.c: 38:     key = 0xFF;
   820   002002  6818               	setf	_key^0,c
   821   002004                     
   822                           ;newmain.c: 39:     PORTB = 0x01;
   823   002004  0E01               	movlw	1
   824   002006  6ECB               	movwf	203,c	;volatile
   825   002008                     
   826                           ;newmain.c: 43:             if (PORTB == 0x11)
   827   002008  0E11               	movlw	17
   828   00200A  18CB               	xorwf	203,w,c	;volatile
   829   00200C  A4D8               	btfss	status,2,c
   830   00200E  EF0B  F010         	goto	u11
   831   002012  EF0D  F010         	goto	u10
   832   002016                     u11:
   833   002016  EF16  F010         	goto	l787
   834   00201A                     u10:
   835   00201A                     
   836                           ;newmain.c: 44:             {;newmain.c: 45:                 key = 0x0D;
   837   00201A  0E0D               	movlw	13
   838   00201C  6E18               	movwf	_key^0,c
   839   00201E                     
   840                           ;newmain.c: 46:                 _delay((unsigned long)((10)*(4000000/4000.0)));
   841   00201E  0E0D               	movlw	13
   842   002020  6E01               	movwf	??_getKeypress^0,c
   843   002022  0EFC               	movlw	252
   844   002024                     u537:
   845   002024  2EE8               	decfsz	wreg,f,c
   846   002026  D7FE               	bra	u537
   847   002028  2E01               	decfsz	??_getKeypress^0,f,c
   848   00202A  D7FC               	bra	u537
   849   00202C                     l787:
   850                           
   851                           ;newmain.c: 49:             if (PORTB == 0x21){
   852   00202C  0E21               	movlw	33
   853   00202E  18CB               	xorwf	203,w,c	;volatile
   854   002030  A4D8               	btfss	status,2,c
   855   002032  EF1D  F010         	goto	u21
   856   002036  EF1F  F010         	goto	u20
   857   00203A                     u21:
   858   00203A  EF28  F010         	goto	l793
   859   00203E                     u20:
   860   00203E                     
   861                           ;newmain.c: 50:                 key = 0x0C;
   862   00203E  0E0C               	movlw	12
   863   002040  6E18               	movwf	_key^0,c
   864   002042                     
   865                           ;newmain.c: 51:                 _delay((unsigned long)((10)*(4000000/4000.0)));
   866   002042  0E0D               	movlw	13
   867   002044  6E01               	movwf	??_getKeypress^0,c
   868   002046  0EFC               	movlw	252
   869   002048                     u547:
   870   002048  2EE8               	decfsz	wreg,f,c
   871   00204A  D7FE               	bra	u547
   872   00204C  2E01               	decfsz	??_getKeypress^0,f,c
   873   00204E  D7FC               	bra	u547
   874   002050                     l793:
   875                           
   876                           ;newmain.c: 54:             if (PORTB == 0x41){
   877   002050  0E41               	movlw	65
   878   002052  18CB               	xorwf	203,w,c	;volatile
   879   002054  A4D8               	btfss	status,2,c
   880   002056  EF2F  F010         	goto	u31
   881   00205A  EF31  F010         	goto	u30
   882   00205E                     u31:
   883   00205E  EF3A  F010         	goto	l799
   884   002062                     u30:
   885   002062                     
   886                           ;newmain.c: 55:                 key = 0x0B;
   887   002062  0E0B               	movlw	11
   888   002064  6E18               	movwf	_key^0,c
   889   002066                     
   890                           ;newmain.c: 56:                 _delay((unsigned long)((10)*(4000000/4000.0)));
   891   002066  0E0D               	movlw	13
   892   002068  6E01               	movwf	??_getKeypress^0,c
   893   00206A  0EFC               	movlw	252
   894   00206C                     u557:
   895   00206C  2EE8               	decfsz	wreg,f,c
   896   00206E  D7FE               	bra	u557
   897   002070  2E01               	decfsz	??_getKeypress^0,f,c
   898   002072  D7FC               	bra	u557
   899   002074                     l799:
   900                           
   901                           ;newmain.c: 59:             if (PORTB == 0x81){
   902   002074  0E81               	movlw	129
   903   002076  18CB               	xorwf	203,w,c	;volatile
   904   002078  A4D8               	btfss	status,2,c
   905   00207A  EF41  F010         	goto	u41
   906   00207E  EF43  F010         	goto	u40
   907   002082                     u41:
   908   002082  EF4C  F010         	goto	l805
   909   002086                     u40:
   910   002086                     
   911                           ;newmain.c: 60:                 key = 0x0A;
   912   002086  0E0A               	movlw	10
   913   002088  6E18               	movwf	_key^0,c
   914   00208A                     
   915                           ;newmain.c: 61:                 _delay((unsigned long)((10)*(4000000/4000.0)));
   916   00208A  0E0D               	movlw	13
   917   00208C  6E01               	movwf	??_getKeypress^0,c
   918   00208E  0EFC               	movlw	252
   919   002090                     u567:
   920   002090  2EE8               	decfsz	wreg,f,c
   921   002092  D7FE               	bra	u567
   922   002094  2E01               	decfsz	??_getKeypress^0,f,c
   923   002096  D7FC               	bra	u567
   924   002098                     l805:
   925                           
   926                           ;newmain.c: 66:     PORTB = 0x02;
   927   002098  0E02               	movlw	2
   928   00209A  6ECB               	movwf	203,c	;volatile
   929                           
   930                           ;newmain.c: 67:     _delay((unsigned long)((10)*(4000000/4000.0)));
   931   00209C  0E0D               	movlw	13
   932   00209E  6E01               	movwf	??_getKeypress^0,c
   933   0020A0  0EFC               	movlw	252
   934   0020A2                     u577:
   935   0020A2  2EE8               	decfsz	wreg,f,c
   936   0020A4  D7FE               	bra	u577
   937   0020A6  2E01               	decfsz	??_getKeypress^0,f,c
   938   0020A8  D7FC               	bra	u577
   939   0020AA                     
   940                           ;newmain.c: 70:             if (PORTB == 0x12){
   941   0020AA  0E12               	movlw	18
   942   0020AC  18CB               	xorwf	203,w,c	;volatile
   943   0020AE  A4D8               	btfss	status,2,c
   944   0020B0  EF5C  F010         	goto	u51
   945   0020B4  EF5E  F010         	goto	u50
   946   0020B8                     u51:
   947   0020B8  EF67  F010         	goto	l813
   948   0020BC                     u50:
   949   0020BC                     
   950                           ;newmain.c: 71:                 key = 0x0F;
   951   0020BC  0E0F               	movlw	15
   952   0020BE  6E18               	movwf	_key^0,c
   953   0020C0                     
   954                           ;newmain.c: 72:                 _delay((unsigned long)((10)*(4000000/4000.0)));
   955   0020C0  0E0D               	movlw	13
   956   0020C2  6E01               	movwf	??_getKeypress^0,c
   957   0020C4  0EFC               	movlw	252
   958   0020C6                     u587:
   959   0020C6  2EE8               	decfsz	wreg,f,c
   960   0020C8  D7FE               	bra	u587
   961   0020CA  2E01               	decfsz	??_getKeypress^0,f,c
   962   0020CC  D7FC               	bra	u587
   963   0020CE                     l813:
   964                           
   965                           ;newmain.c: 75:             if (PORTB == 0x22){
   966   0020CE  0E22               	movlw	34
   967   0020D0  18CB               	xorwf	203,w,c	;volatile
   968   0020D2  A4D8               	btfss	status,2,c
   969   0020D4  EF6E  F010         	goto	u61
   970   0020D8  EF70  F010         	goto	u60
   971   0020DC                     u61:
   972   0020DC  EF79  F010         	goto	l819
   973   0020E0                     u60:
   974   0020E0                     
   975                           ;newmain.c: 76:                 key = 9;
   976   0020E0  0E09               	movlw	9
   977   0020E2  6E18               	movwf	_key^0,c
   978   0020E4                     
   979                           ;newmain.c: 77:                 _delay((unsigned long)((10)*(4000000/4000.0)));
   980   0020E4  0E0D               	movlw	13
   981   0020E6  6E01               	movwf	??_getKeypress^0,c
   982   0020E8  0EFC               	movlw	252
   983   0020EA                     u597:
   984   0020EA  2EE8               	decfsz	wreg,f,c
   985   0020EC  D7FE               	bra	u597
   986   0020EE  2E01               	decfsz	??_getKeypress^0,f,c
   987   0020F0  D7FC               	bra	u597
   988   0020F2                     l819:
   989                           
   990                           ;newmain.c: 80:             if (PORTB == 0x42){
   991   0020F2  0E42               	movlw	66
   992   0020F4  18CB               	xorwf	203,w,c	;volatile
   993   0020F6  A4D8               	btfss	status,2,c
   994   0020F8  EF80  F010         	goto	u71
   995   0020FC  EF82  F010         	goto	u70
   996   002100                     u71:
   997   002100  EF8B  F010         	goto	l825
   998   002104                     u70:
   999   002104                     
  1000                           ;newmain.c: 81:                 key = 6;
  1001   002104  0E06               	movlw	6
  1002   002106  6E18               	movwf	_key^0,c
  1003   002108                     
  1004                           ;newmain.c: 82:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1005   002108  0E0D               	movlw	13
  1006   00210A  6E01               	movwf	??_getKeypress^0,c
  1007   00210C  0EFC               	movlw	252
  1008   00210E                     u607:
  1009   00210E  2EE8               	decfsz	wreg,f,c
  1010   002110  D7FE               	bra	u607
  1011   002112  2E01               	decfsz	??_getKeypress^0,f,c
  1012   002114  D7FC               	bra	u607
  1013   002116                     l825:
  1014                           
  1015                           ;newmain.c: 85:             if (PORTB == 0x82){
  1016   002116  0E82               	movlw	130
  1017   002118  18CB               	xorwf	203,w,c	;volatile
  1018   00211A  A4D8               	btfss	status,2,c
  1019   00211C  EF92  F010         	goto	u81
  1020   002120  EF94  F010         	goto	u80
  1021   002124                     u81:
  1022   002124  EF9D  F010         	goto	l831
  1023   002128                     u80:
  1024   002128                     
  1025                           ;newmain.c: 86:                 key = 3;
  1026   002128  0E03               	movlw	3
  1027   00212A  6E18               	movwf	_key^0,c
  1028   00212C                     
  1029                           ;newmain.c: 87:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1030   00212C  0E0D               	movlw	13
  1031   00212E  6E01               	movwf	??_getKeypress^0,c
  1032   002130  0EFC               	movlw	252
  1033   002132                     u617:
  1034   002132  2EE8               	decfsz	wreg,f,c
  1035   002134  D7FE               	bra	u617
  1036   002136  2E01               	decfsz	??_getKeypress^0,f,c
  1037   002138  D7FC               	bra	u617
  1038   00213A                     l831:
  1039                           
  1040                           ;newmain.c: 91:     PORTB = 0x04;
  1041   00213A  0E04               	movlw	4
  1042   00213C  6ECB               	movwf	203,c	;volatile
  1043                           
  1044                           ;newmain.c: 92:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1045   00213E  0E0D               	movlw	13
  1046   002140  6E01               	movwf	??_getKeypress^0,c
  1047   002142  0EFC               	movlw	252
  1048   002144                     u627:
  1049   002144  2EE8               	decfsz	wreg,f,c
  1050   002146  D7FE               	bra	u627
  1051   002148  2E01               	decfsz	??_getKeypress^0,f,c
  1052   00214A  D7FC               	bra	u627
  1053   00214C                     
  1054                           ;newmain.c: 95:             if (PORTB == 0x14){
  1055   00214C  0E14               	movlw	20
  1056   00214E  18CB               	xorwf	203,w,c	;volatile
  1057   002150  A4D8               	btfss	status,2,c
  1058   002152  EFAD  F010         	goto	u91
  1059   002156  EFAF  F010         	goto	u90
  1060   00215A                     u91:
  1061   00215A  EFB8  F010         	goto	l839
  1062   00215E                     u90:
  1063   00215E                     
  1064                           ;newmain.c: 96:                 key = 0;
  1065   00215E  0E00               	movlw	0
  1066   002160  6E18               	movwf	_key^0,c
  1067   002162                     
  1068                           ;newmain.c: 97:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1069   002162  0E0D               	movlw	13
  1070   002164  6E01               	movwf	??_getKeypress^0,c
  1071   002166  0EFC               	movlw	252
  1072   002168                     u637:
  1073   002168  2EE8               	decfsz	wreg,f,c
  1074   00216A  D7FE               	bra	u637
  1075   00216C  2E01               	decfsz	??_getKeypress^0,f,c
  1076   00216E  D7FC               	bra	u637
  1077   002170                     l839:
  1078                           
  1079                           ;newmain.c: 100:             if (PORTB == 0x24){
  1080   002170  0E24               	movlw	36
  1081   002172  18CB               	xorwf	203,w,c	;volatile
  1082   002174  A4D8               	btfss	status,2,c
  1083   002176  EFBF  F010         	goto	u101
  1084   00217A  EFC1  F010         	goto	u100
  1085   00217E                     u101:
  1086   00217E  EFCA  F010         	goto	l845
  1087   002182                     u100:
  1088   002182                     
  1089                           ;newmain.c: 101:                 key = 8;
  1090   002182  0E08               	movlw	8
  1091   002184  6E18               	movwf	_key^0,c
  1092   002186                     
  1093                           ;newmain.c: 102:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1094   002186  0E0D               	movlw	13
  1095   002188  6E01               	movwf	??_getKeypress^0,c
  1096   00218A  0EFC               	movlw	252
  1097   00218C                     u647:
  1098   00218C  2EE8               	decfsz	wreg,f,c
  1099   00218E  D7FE               	bra	u647
  1100   002190  2E01               	decfsz	??_getKeypress^0,f,c
  1101   002192  D7FC               	bra	u647
  1102   002194                     l845:
  1103                           
  1104                           ;newmain.c: 105:             if (PORTB == 0x44){
  1105   002194  0E44               	movlw	68
  1106   002196  18CB               	xorwf	203,w,c	;volatile
  1107   002198  A4D8               	btfss	status,2,c
  1108   00219A  EFD1  F010         	goto	u111
  1109   00219E  EFD3  F010         	goto	u110
  1110   0021A2                     u111:
  1111   0021A2  EFDC  F010         	goto	l851
  1112   0021A6                     u110:
  1113   0021A6                     
  1114                           ;newmain.c: 106:                 key = 5;
  1115   0021A6  0E05               	movlw	5
  1116   0021A8  6E18               	movwf	_key^0,c
  1117   0021AA                     
  1118                           ;newmain.c: 107:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1119   0021AA  0E0D               	movlw	13
  1120   0021AC  6E01               	movwf	??_getKeypress^0,c
  1121   0021AE  0EFC               	movlw	252
  1122   0021B0                     u657:
  1123   0021B0  2EE8               	decfsz	wreg,f,c
  1124   0021B2  D7FE               	bra	u657
  1125   0021B4  2E01               	decfsz	??_getKeypress^0,f,c
  1126   0021B6  D7FC               	bra	u657
  1127   0021B8                     l851:
  1128                           
  1129                           ;newmain.c: 110:             if (PORTB == 0x84){
  1130   0021B8  0E84               	movlw	132
  1131   0021BA  18CB               	xorwf	203,w,c	;volatile
  1132   0021BC  A4D8               	btfss	status,2,c
  1133   0021BE  EFE3  F010         	goto	u121
  1134   0021C2  EFE5  F010         	goto	u120
  1135   0021C6                     u121:
  1136   0021C6  EFEE  F010         	goto	l857
  1137   0021CA                     u120:
  1138   0021CA                     
  1139                           ;newmain.c: 111:                 key = 2;
  1140   0021CA  0E02               	movlw	2
  1141   0021CC  6E18               	movwf	_key^0,c
  1142   0021CE                     
  1143                           ;newmain.c: 112:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1144   0021CE  0E0D               	movlw	13
  1145   0021D0  6E01               	movwf	??_getKeypress^0,c
  1146   0021D2  0EFC               	movlw	252
  1147   0021D4                     u667:
  1148   0021D4  2EE8               	decfsz	wreg,f,c
  1149   0021D6  D7FE               	bra	u667
  1150   0021D8  2E01               	decfsz	??_getKeypress^0,f,c
  1151   0021DA  D7FC               	bra	u667
  1152   0021DC                     l857:
  1153                           
  1154                           ;newmain.c: 116:     PORTB = 0x08;
  1155   0021DC  0E08               	movlw	8
  1156   0021DE  6ECB               	movwf	203,c	;volatile
  1157                           
  1158                           ;newmain.c: 117:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1159   0021E0  0E0D               	movlw	13
  1160   0021E2  6E01               	movwf	??_getKeypress^0,c
  1161   0021E4  0EFC               	movlw	252
  1162   0021E6                     u677:
  1163   0021E6  2EE8               	decfsz	wreg,f,c
  1164   0021E8  D7FE               	bra	u677
  1165   0021EA  2E01               	decfsz	??_getKeypress^0,f,c
  1166   0021EC  D7FC               	bra	u677
  1167   0021EE                     
  1168                           ;newmain.c: 120:             if (PORTB == 0x18){
  1169   0021EE  0E18               	movlw	24
  1170   0021F0  18CB               	xorwf	203,w,c	;volatile
  1171   0021F2  A4D8               	btfss	status,2,c
  1172   0021F4  EFFE  F010         	goto	u131
  1173   0021F8  EF00  F011         	goto	u130
  1174   0021FC                     u131:
  1175   0021FC  EF09  F011         	goto	l865
  1176   002200                     u130:
  1177   002200                     
  1178                           ;newmain.c: 121:                 key = 0x0E;
  1179   002200  0E0E               	movlw	14
  1180   002202  6E18               	movwf	_key^0,c
  1181   002204                     
  1182                           ;newmain.c: 122:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1183   002204  0E0D               	movlw	13
  1184   002206  6E01               	movwf	??_getKeypress^0,c
  1185   002208  0EFC               	movlw	252
  1186   00220A                     u687:
  1187   00220A  2EE8               	decfsz	wreg,f,c
  1188   00220C  D7FE               	bra	u687
  1189   00220E  2E01               	decfsz	??_getKeypress^0,f,c
  1190   002210  D7FC               	bra	u687
  1191   002212                     l865:
  1192                           
  1193                           ;newmain.c: 125:             if (PORTB == 0x28){
  1194   002212  0E28               	movlw	40
  1195   002214  18CB               	xorwf	203,w,c	;volatile
  1196   002216  A4D8               	btfss	status,2,c
  1197   002218  EF10  F011         	goto	u141
  1198   00221C  EF12  F011         	goto	u140
  1199   002220                     u141:
  1200   002220  EF1B  F011         	goto	l871
  1201   002224                     u140:
  1202   002224                     
  1203                           ;newmain.c: 126:                 key = 7;
  1204   002224  0E07               	movlw	7
  1205   002226  6E18               	movwf	_key^0,c
  1206   002228                     
  1207                           ;newmain.c: 127:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1208   002228  0E0D               	movlw	13
  1209   00222A  6E01               	movwf	??_getKeypress^0,c
  1210   00222C  0EFC               	movlw	252
  1211   00222E                     u697:
  1212   00222E  2EE8               	decfsz	wreg,f,c
  1213   002230  D7FE               	bra	u697
  1214   002232  2E01               	decfsz	??_getKeypress^0,f,c
  1215   002234  D7FC               	bra	u697
  1216   002236                     l871:
  1217                           
  1218                           ;newmain.c: 130:             if (PORTB == 0x48){
  1219   002236  0E48               	movlw	72
  1220   002238  18CB               	xorwf	203,w,c	;volatile
  1221   00223A  A4D8               	btfss	status,2,c
  1222   00223C  EF22  F011         	goto	u151
  1223   002240  EF24  F011         	goto	u150
  1224   002244                     u151:
  1225   002244  EF2D  F011         	goto	l877
  1226   002248                     u150:
  1227   002248                     
  1228                           ;newmain.c: 131:                 key = 4;
  1229   002248  0E04               	movlw	4
  1230   00224A  6E18               	movwf	_key^0,c
  1231   00224C                     
  1232                           ;newmain.c: 132:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1233   00224C  0E0D               	movlw	13
  1234   00224E  6E01               	movwf	??_getKeypress^0,c
  1235   002250  0EFC               	movlw	252
  1236   002252                     u707:
  1237   002252  2EE8               	decfsz	wreg,f,c
  1238   002254  D7FE               	bra	u707
  1239   002256  2E01               	decfsz	??_getKeypress^0,f,c
  1240   002258  D7FC               	bra	u707
  1241   00225A                     l877:
  1242                           
  1243                           ;newmain.c: 135:             if (PORTB == 0x88){
  1244   00225A  0E88               	movlw	136
  1245   00225C  18CB               	xorwf	203,w,c	;volatile
  1246   00225E  A4D8               	btfss	status,2,c
  1247   002260  EF34  F011         	goto	u161
  1248   002264  EF36  F011         	goto	u160
  1249   002268                     u161:
  1250   002268  EF3F  F011         	goto	l883
  1251   00226C                     u160:
  1252   00226C                     
  1253                           ;newmain.c: 136:                 key = 1;
  1254   00226C  0E01               	movlw	1
  1255   00226E  6E18               	movwf	_key^0,c
  1256   002270                     
  1257                           ;newmain.c: 137:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1258   002270  0E0D               	movlw	13
  1259   002272  6E01               	movwf	??_getKeypress^0,c
  1260   002274  0EFC               	movlw	252
  1261   002276                     u717:
  1262   002276  2EE8               	decfsz	wreg,f,c
  1263   002278  D7FE               	bra	u717
  1264   00227A  2E01               	decfsz	??_getKeypress^0,f,c
  1265   00227C  D7FC               	bra	u717
  1266   00227E                     l883:
  1267                           
  1268                           ;newmain.c: 141:     return key;
  1269   00227E  5018               	movf	_key^0,w,c
  1270   002280  0012               	return		;funcret
  1271   002282                     __end_of_getKeypress:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _evaluate *****************
  1275 ;; Defined at:
  1276 ;;		line 207 in file "newmain.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  input_X         2    8[COMRAM] int 
  1279 ;;  input_Y         2   10[COMRAM] int 
  1280 ;;  Operation       2   12[COMRAM] int 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  result          1   16[COMRAM] char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      char 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1292 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1295 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1296 ;;Total ram usage:        9 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 1
  1299 ;; This function calls:
  1300 ;;		___awdiv
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text5
  1307   002438                     __ptext5:
  1308                           	callstack 0
  1309   002438                     _evaluate:
  1310                           	callstack 29
  1311   002438                     
  1312                           ;newmain.c: 210:     switch (Operation)
  1313   002438  EF40  F012         	goto	l1165
  1314   00243C                     l1139:
  1315                           
  1316                           ;newmain.c: 213:                 result = input_X + input_Y;
  1317   00243C  5009               	movf	evaluate@input_X^0,w,c
  1318   00243E  240B               	addwf	evaluate@input_Y^0,w,c
  1319   002440  6E11               	movwf	evaluate@result^0,c
  1320   002442                     l1141:
  1321                           
  1322                           ;newmain.c: 214:                 return result;
  1323   002442  5011               	movf	evaluate@result^0,w,c
  1324   002444  EF5F  F012         	goto	l79
  1325   002448                     l1145:
  1326                           
  1327                           ;newmain.c: 216:                 result = input_X - input_Y;
  1328   002448  500B               	movf	evaluate@input_Y^0,w,c
  1329   00244A  5C09               	subwf	evaluate@input_X^0,w,c
  1330   00244C  6E11               	movwf	evaluate@result^0,c
  1331   00244E  EF21  F012         	goto	l1141
  1332   002452                     l1151:
  1333                           
  1334                           ;newmain.c: 219:                 result = input_X * input_Y;
  1335   002452  5009               	movf	evaluate@input_X^0,w,c
  1336   002454  020B               	mulwf	evaluate@input_Y^0,c
  1337   002456  006F FFCC  F011    	movff	prodl,evaluate@result
  1338   00245C  EF21  F012         	goto	l1141
  1339   002460                     l1157:
  1340                           
  1341                           ;newmain.c: 222:                 result = input_X / input_Y;
  1342   002460  C009  F001         	movff	evaluate@input_X,___awdiv@dividend
  1343   002464  C00A  F002         	movff	evaluate@input_X+1,___awdiv@dividend+1
  1344   002468  C00B  F003         	movff	evaluate@input_Y,___awdiv@divisor
  1345   00246C  C00C  F004         	movff	evaluate@input_Y+1,___awdiv@divisor+1
  1346   002470  ECBA  F011         	call	___awdiv	;wreg free
  1347   002474  5001               	movf	?___awdiv^0,w,c
  1348   002476  6E11               	movwf	evaluate@result^0,c
  1349   002478  EF21  F012         	goto	l1141
  1350   00247C                     l1163:
  1351                           
  1352                           ;newmain.c: 226:     }
  1353   00247C  EF5E  F012         	goto	l1167
  1354   002480                     l1165:
  1355   002480  C00D  F00F         	movff	evaluate@Operation,??_evaluate
  1356   002484  C00E  F010         	movff	evaluate@Operation+1,??_evaluate+1
  1357                           
  1358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1359                           ; Switch size 1, requested type "simple"
  1360                           ; Number of cases is 1, Range of values is 0 to 0
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte            4     3 (average)
  1364                           ;	Chosen strategy is simple_byte
  1365   002488  5010               	movf	(??_evaluate+1)^0,w,c
  1366   00248A  0A00               	xorlw	0	; case 0
  1367   00248C  B4D8               	btfsc	status,2,c
  1368   00248E  EF4B  F012         	goto	l1227
  1369   002492  EF3E  F012         	goto	l1163
  1370   002496                     l1227:
  1371                           
  1372                           ; Switch size 1, requested type "simple"
  1373                           ; Number of cases is 4, Range of values is 10 to 13
  1374                           ; switch strategies available:
  1375                           ; Name         Instructions Cycles
  1376                           ; simple_byte           13     7 (average)
  1377                           ;	Chosen strategy is simple_byte
  1378   002496  500F               	movf	??_evaluate^0,w,c
  1379   002498  0A0A               	xorlw	10	; case 10
  1380   00249A  B4D8               	btfsc	status,2,c
  1381   00249C  EF1E  F012         	goto	l1139
  1382   0024A0  0A01               	xorlw	1	; case 11
  1383   0024A2  B4D8               	btfsc	status,2,c
  1384   0024A4  EF24  F012         	goto	l1145
  1385   0024A8  0A07               	xorlw	7	; case 12
  1386   0024AA  B4D8               	btfsc	status,2,c
  1387   0024AC  EF29  F012         	goto	l1151
  1388   0024B0  0A01               	xorlw	1	; case 13
  1389   0024B2  B4D8               	btfsc	status,2,c
  1390   0024B4  EF30  F012         	goto	l1157
  1391   0024B8  EF3E  F012         	goto	l1163
  1392   0024BC                     l1167:
  1393                           
  1394                           ;newmain.c: 227:     return result;
  1395   0024BC  0E00               	movlw	0
  1396   0024BE                     l79:
  1397   0024BE  0012               	return		;funcret
  1398   0024C0                     __end_of_evaluate:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function ___awdiv *****************
  1402 ;; Defined at:
  1403 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  dividend        2    0[COMRAM] int 
  1406 ;;  divisor         2    2[COMRAM] int 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  quotient        2    6[COMRAM] int 
  1409 ;;  sign            1    5[COMRAM] unsigned char 
  1410 ;;  counter         1    4[COMRAM] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  2    0[COMRAM] int 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1421 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1423 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1424 ;;Total ram usage:        8 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_evaluate
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text6
  1434   002374                     __ptext6:
  1435                           	callstack 0
  1436   002374                     ___awdiv:
  1437                           	callstack 29
  1438   002374  0E00               	movlw	0
  1439   002376  6E06               	movwf	___awdiv@sign^0,c
  1440   002378  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1441   00237A  EFC3  F011         	goto	u310
  1442   00237E  EFC1  F011         	goto	u311
  1443   002382                     u311:
  1444   002382  EFC9  F011         	goto	l1101
  1445   002386                     u310:
  1446   002386  6C03               	negf	___awdiv@divisor^0,c
  1447   002388  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1448   00238A  B0D8               	btfsc	status,0,c
  1449   00238C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1450   00238E  0E01               	movlw	1
  1451   002390  6E06               	movwf	___awdiv@sign^0,c
  1452   002392                     l1101:
  1453   002392  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1454   002394  EFD0  F011         	goto	u320
  1455   002398  EFCE  F011         	goto	u321
  1456   00239C                     u321:
  1457   00239C  EFD6  F011         	goto	l1107
  1458   0023A0                     u320:
  1459   0023A0  6C01               	negf	___awdiv@dividend^0,c
  1460   0023A2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1461   0023A4  B0D8               	btfsc	status,0,c
  1462   0023A6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1463   0023A8  0E01               	movlw	1
  1464   0023AA  1A06               	xorwf	___awdiv@sign^0,f,c
  1465   0023AC                     l1107:
  1466   0023AC  0E00               	movlw	0
  1467   0023AE  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1468   0023B0  0E00               	movlw	0
  1469   0023B2  6E07               	movwf	___awdiv@quotient^0,c
  1470   0023B4  5003               	movf	___awdiv@divisor^0,w,c
  1471   0023B6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1472   0023B8  B4D8               	btfsc	status,2,c
  1473   0023BA  EFE1  F011         	goto	u331
  1474   0023BE  EFE3  F011         	goto	u330
  1475   0023C2                     u331:
  1476   0023C2  EF0B  F012         	goto	l1129
  1477   0023C6                     u330:
  1478   0023C6  0E01               	movlw	1
  1479   0023C8  6E05               	movwf	___awdiv@counter^0,c
  1480   0023CA  EFEB  F011         	goto	l1115
  1481   0023CE                     l1113:
  1482   0023CE  90D8               	bcf	status,0,c
  1483   0023D0  3603               	rlcf	___awdiv@divisor^0,f,c
  1484   0023D2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1485   0023D4  2A05               	incf	___awdiv@counter^0,f,c
  1486   0023D6                     l1115:
  1487   0023D6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1488   0023D8  EFF0  F011         	goto	u341
  1489   0023DC  EFF2  F011         	goto	u340
  1490   0023E0                     u341:
  1491   0023E0  EFE7  F011         	goto	l1113
  1492   0023E4                     u340:
  1493   0023E4                     l1117:
  1494   0023E4  90D8               	bcf	status,0,c
  1495   0023E6  3607               	rlcf	___awdiv@quotient^0,f,c
  1496   0023E8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1497   0023EA  5003               	movf	___awdiv@divisor^0,w,c
  1498   0023EC  5C01               	subwf	___awdiv@dividend^0,w,c
  1499   0023EE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1500   0023F0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1501   0023F2  A0D8               	btfss	status,0,c
  1502   0023F4  EFFE  F011         	goto	u351
  1503   0023F8  EF00  F012         	goto	u350
  1504   0023FC                     u351:
  1505   0023FC  EF05  F012         	goto	l1125
  1506   002400                     u350:
  1507   002400  5003               	movf	___awdiv@divisor^0,w,c
  1508   002402  5E01               	subwf	___awdiv@dividend^0,f,c
  1509   002404  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1510   002406  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1511   002408  8007               	bsf	___awdiv@quotient^0,0,c
  1512   00240A                     l1125:
  1513   00240A  90D8               	bcf	status,0,c
  1514   00240C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1515   00240E  3203               	rrcf	___awdiv@divisor^0,f,c
  1516   002410  2E05               	decfsz	___awdiv@counter^0,f,c
  1517   002412  EFF2  F011         	goto	l1117
  1518   002416                     l1129:
  1519   002416  5006               	movf	___awdiv@sign^0,w,c
  1520   002418  B4D8               	btfsc	status,2,c
  1521   00241A  EF11  F012         	goto	u361
  1522   00241E  EF13  F012         	goto	u360
  1523   002422                     u361:
  1524   002422  EF17  F012         	goto	l1133
  1525   002426                     u360:
  1526   002426  6C07               	negf	___awdiv@quotient^0,c
  1527   002428  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1528   00242A  B0D8               	btfsc	status,0,c
  1529   00242C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1530   00242E                     l1133:
  1531   00242E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1532   002432  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1533   002436  0012               	return		;funcret
  1534   002438                     __end_of___awdiv:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function _display *****************
  1538 ;; Defined at:
  1539 ;;		line 230 in file "newmain.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  Result          1    wreg     char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  Result          1    0[COMRAM] char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1557 ;;Total ram usage:        1 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text7
  1567   002656                     __ptext7:
  1568                           	callstack 0
  1569   002656                     _display:
  1570                           	callstack 30
  1571                           
  1572                           ;incstack = 0
  1573                           ;display@Result stored from wreg
  1574   002656  6E01               	movwf	display@Result^0,c
  1575   002658                     
  1576                           ;newmain.c: 230: void display(signed char Result);newmain.c: 231: {;newmain.c: 232:     
      +                          PORTD = Result;
  1577   002658  0060  F007  FFCD   	movff	display@Result,16333	;volatile
  1578   00265E  0012               	return		;funcret
  1579   002660                     __end_of_display:
  1580                           	callstack 0
  1581                           
  1582                           	psect	smallconst
  1583   002000                     __psmallconst:
  1584                           	callstack 0
  1585   002000  00                 	db	0
  1586   002001  00                 	db	0	; dummy byte at the end
  1587   000000                     
  1588                           	psect	rparam
  1589   000000                     
  1590                           	psect	config
  1591                           
  1592                           ;Config register CONFIG1L @ 0x300000
  1593                           ;	External Oscillator Selection
  1594                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1595                           ;	Reset Oscillator Selection
  1596                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1597   300000                     	org	3145728
  1598   300000  F8                 	db	248
  1599                           
  1600                           ;Config register CONFIG1H @ 0x300001
  1601                           ;	Clock out Enable bit
  1602                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1603                           ;	PRLOCKED One-Way Set Enable bit
  1604                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1605                           ;	Clock Switch Enable bit
  1606                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1607                           ;	Fail-Safe Clock Monitor Enable bit
  1608                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1609   300001                     	org	3145729
  1610   300001  FF                 	db	255
  1611                           
  1612                           ;Config register CONFIG2L @ 0x300002
  1613                           ;	MCLR Enable bit
  1614                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1615                           ;	Power-up timer selection bits
  1616                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1617                           ;	Multi-vector enable bit
  1618                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1619                           ;	IVTLOCK bit One-way set enable bit
  1620                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1621                           ;	Low Power BOR Enable bit
  1622                           ;	LPBOREN = OFF, ULPBOR disabled
  1623                           ;	Brown-out Reset Enable bits
  1624                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1625   300002                     	org	3145730
  1626   300002  FF                 	db	255
  1627                           
  1628                           ;Config register CONFIG2H @ 0x300003
  1629                           ;	Brown-out Reset Voltage Selection bits
  1630                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1631                           ;	ZCD Disable bit
  1632                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1633                           ;	PPSLOCK bit One-Way Set Enable bit
  1634                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1635                           ;	Stack Full/Underflow Reset Enable bit
  1636                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1637                           ;	Debugger Enable bit
  1638                           ;	DEBUG = OFF, Background debugger disabled
  1639                           ;	Extended Instruction Set Enable bit
  1640                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1641   300003                     	org	3145731
  1642   300003  FF                 	db	255
  1643                           
  1644                           ;Config register CONFIG3L @ 0x300004
  1645                           ;	WDT Period selection bits
  1646                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1647                           ;	WDT operating mode
  1648                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1649   300004                     	org	3145732
  1650   300004  9F                 	db	159
  1651                           
  1652                           ;Config register CONFIG3H @ 0x300005
  1653                           ;	WDT Window Select bits
  1654                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1655                           ;	WDT input clock selector
  1656                           ;	WDTCCS = SC, Software Control
  1657   300005                     	org	3145733
  1658   300005  FF                 	db	255
  1659                           
  1660                           ;Config register CONFIG4L @ 0x300006
  1661                           ;	Boot Block Size selection bits
  1662                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1663                           ;	Boot Block enable bit
  1664                           ;	BBEN = OFF, Boot block disabled
  1665                           ;	Storage Area Flash enable bit
  1666                           ;	SAFEN = OFF, SAF disabled
  1667                           ;	Application Block write protection bit
  1668                           ;	WRTAPP = OFF, Application Block not write protected
  1669   300006                     	org	3145734
  1670   300006  FF                 	db	255
  1671                           
  1672                           ;Config register CONFIG4H @ 0x300007
  1673                           ;	Boot Block Write Protection bit
  1674                           ;	WRTB = OFF, Boot Block not write-protected
  1675                           ;	Configuration Register Write Protection bit
  1676                           ;	WRTC = OFF, Configuration registers not write-protected
  1677                           ;	Data EEPROM Write Protection bit
  1678                           ;	WRTD = OFF, Data EEPROM not write-protected
  1679                           ;	SAF Write protection bit
  1680                           ;	WRTSAF = OFF, SAF not Write Protected
  1681                           ;	Low Voltage Programming Enable bit
  1682                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1683   300007                     	org	3145735
  1684   300007  FF                 	db	255
  1685                           
  1686                           ;Config register CONFIG5L @ 0x300008
  1687                           ;	PFM and Data EEPROM Code Protection bit
  1688                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1689   300008                     	org	3145736
  1690   300008  FF                 	db	255
  1691                           
  1692                           ;Config register CONFIG5H @ 0x300009
  1693                           ;	unspecified, using default values
  1694   300009                     	org	3145737
  1695   300009  FF                 	db	255
  1696                           tosu	equ	0x3FFF
  1697                           tosh	equ	0x3FFE
  1698                           tosl	equ	0x3FFD
  1699                           stkptr	equ	0x3FFC
  1700                           pclatu	equ	0x3FFB
  1701                           pclath	equ	0x3FFA
  1702                           pcl	equ	0x3FF9
  1703                           tblptru	equ	0x3FF8
  1704                           tblptrh	equ	0x3FF7
  1705                           tblptrl	equ	0x3FF6
  1706                           tablat	equ	0x3FF5
  1707                           prodh	equ	0x3FF4
  1708                           prodl	equ	0x3FF3
  1709                           indf0	equ	0x3FEF
  1710                           postinc0	equ	0x3FEE
  1711                           postdec0	equ	0x3FED
  1712                           preinc0	equ	0x3FEC
  1713                           plusw0	equ	0x3FEB
  1714                           fsr0h	equ	0x3FEA
  1715                           fsr0l	equ	0x3FE9
  1716                           wreg	equ	0x3FE8
  1717                           indf1	equ	0x3FE7
  1718                           postinc1	equ	0x3FE6
  1719                           postdec1	equ	0x3FE5
  1720                           preinc1	equ	0x3FE4
  1721                           plusw1	equ	0x3FE3
  1722                           fsr1h	equ	0x3FE2
  1723                           fsr1l	equ	0x3FE1
  1724                           bsr	equ	0x3FE0
  1725                           indf2	equ	0x3FDF
  1726                           postinc2	equ	0x3FDE
  1727                           postdec2	equ	0x3FDD
  1728                           preinc2	equ	0x3FDC
  1729                           plusw2	equ	0x3FDB
  1730                           fsr2h	equ	0x3FDA
  1731                           fsr2l	equ	0x3FD9
  1732                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_evaluate
    _getInputY->_getKeypress
    _getInputX->_getKeypress
    _getInputOperation->_getKeypress
    _evaluate->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1009
                                             17 COMRAM     2     2      0
                            _display
                           _evaluate
                  _getInputOperation
                          _getInputX
                          _getInputY
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getInputY                                            2     2      0       0
                                              1 COMRAM     2     2      0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getInputX                                            2     2      0       0
                                              1 COMRAM     2     2      0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getInputOperation                                    2     2      0       0
                                              1 COMRAM     2     2      0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getKeypress                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _evaluate                                             9     3      6     994
                                              8 COMRAM     9     3      6
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _display                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _evaluate
     ___awdiv
   _getInputOperation
     _getKeypress
   _getInputX
     _getKeypress
   _getInputY
     _getKeypress
   _getKeypress

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      78        0.0%
BITBIGSFRlllhh     54A      0       0      75        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      250      0       0      77        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      18       1       25.3%
BITBIGSFRhh         32      0       0      69        0.0%
BITBIGSFRlllhl      1F      0       0      76        0.0%
BITBIGSFRllhh        5      0       0      73        0.0%
BITBIGSFRlhh         5      0       0      71        0.0%
BITBIGSFRllhl        1      0       0      74        0.0%
BITBIGSFRlhl         1      0       0      72        0.0%
BITBIGSFRhl          1      0       0      70        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      16        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Apr 09 17:41:28 2024

                       l47 2280                         l56 25CA                         l73 2642  
                       l65 2544                         l74 2646                         l87 265E  
                       l79 24BE                         u10 201A                         u11 2016  
                       u20 203E                         u21 203A                         u30 2062  
                       u31 205E                         u40 2086                         u41 2082  
                       u50 20BC                         u51 20B8                         u60 20E0  
                       u61 20DC                         u70 2104                         u71 2100  
                       u80 2128                         u81 2124                         u90 215E  
                       u91 215A               ___awdiv@sign 0006                        l335 2436  
                      l801 2086                        l811 20C0                        l803 208A  
                      l821 2104                        l813 20CE                        l805 2098  
                      l831 213A                        l823 2108                        l815 20E0  
                      l807 20AA                        l841 2182                        l833 214C  
                      l825 2116                        l817 20E4                        l809 20BC  
                      l851 21B8                        l843 2186                        l835 215E  
                      l827 2128                        l819 20F2                        l861 2200  
                      l853 21CA                        l845 2194                        l837 2162  
                      l829 212C                        l781 2008                        l941 2564  
                      l933 2546                        l871 2236                        l863 2204  
                      l855 21CE                        l847 21A6                        l839 2170  
                      l791 2042                        l783 201A                        l951 25A4  
                      l943 2578                        l935 254A                        l881 2270  
                      l873 2248                        l865 2212                        l857 21DC  
                      l849 21AA                        l793 2050                        l785 201E  
                      l777 2002                        l953 25B2                        l945 2590  
                      l937 2550                        l961 24CA                        l883 227E  
                      l875 224C                        l867 2224                        l859 21EE  
                      l795 2062                        l787 202C                        l779 2004  
                      l955 25C6                        l947 2598                        l939 2556  
                      l971 2512                        l963 24D0                        l877 225A  
                      l869 2228                        l797 2066                        l789 203E  
                      l981 25CC                        l949 259E                        l973 2518  
                      l965 24DE                        l957 24C0                        l879 226C  
                      l799 2074                        l991 25FE                        l983 25D0  
                      l975 251E                        l967 24F2                        l959 24C4  
                      l993 2614                        l985 25D6                        l977 252C  
                      l969 250A                        l995 261A                        l987 25DC  
                      l979 2540                        l997 2620                        l989 25EA  
                      l999 262E                        u100 2182                        u101 217E  
                      u110 21A6                        u111 21A2                        u120 21CA  
                      u121 21C6                        u130 2200                        u131 21FC  
                      u140 2224                        u141 2220                        u310 2386  
                      u150 2248                        u230 2578                        u311 2382  
                      u151 2244                        u231 2574                        u320 23A0  
                      u160 226C                        u240 25C6                        u321 239C  
                      u161 2268                        u241 25C2                        u330 23C6  
                      u250 24F2                        u331 23C2                        u251 24EE  
                      u340 23E4                        u260 2540                        u341 23E0  
                      u261 253C                        u350 2400                        u270 25FE  
                      u351 23FC                        u271 25FA                        u407 22D0  
                      u360 2426                        u280 2642                        u361 2422  
                      u281 263E                        u417 22EE                        u370 2320  
                      u507 25E2                        u371 231C                        u427 2304  
                      u380 236C                        u517 2608                        u381 2368  
                      u437 2350                        u607 210E                        u527 2626  
                      u447 24D6                        u617 2132                        u537 2024  
                      u457 24FC                        u707 2252                        u627 2144  
                      u547 2048                        u467 2524                        u717 2276  
                      u637 2168                        u557 206C                        u477 255C  
                      u397 22B6                        u647 218C                        u567 2090  
                      u487 2582                        u657 21B0                        u577 20A2  
                      u497 25AA                        u667 21D4                        u587 20C6  
                      u677 21E6                        u597 20EA                        u687 220A  
                      u697 222E                        _key 0018                        wreg 3FE8  
                     l1101 2392                       l1111 23C6                       l1103 23A0  
                     l1121 2400                       l1113 23CE                       l1105 23A8  
                     l1201 234A                       l1131 2426                       l1123 2408  
                     l1115 23D6                       l1107 23AC                       l1133 242E  
                     l1125 240A                       l1117 23E4                       l1109 23B4  
                     l1141 2442                       l1205 2358                       l1039 2658  
                     l1127 2410                       l1119 23EA                       l1151 2452  
                     l1129 2416                       l1145 2448                       l1137 2438  
                     l1227 2496                       l1163 247C                       l1139 243C  
                     l1093 2374                       l1157 2460                       l1165 2480  
                     l1181 22AC                       l1095 2378                       l1167 24BC  
                     l1191 22E4                       l1183 22C2                       l1175 2282  
                     l1097 2386                       l1193 22FE                       l1185 22C6  
                     l1177 22A4                       l1099 238E                       l1195 230C  
                     l1187 22DC                       l1179 22A8                       l1197 2320  
                     l1189 22E0                       l1199 2344                       _LATB 3FBB  
                     _LATD 3FBD                       _main 2282                       prodl 3FF3  
                     start FFFC               ___param_bank 0000                      ?_main 0001  
          __end_of___awdiv 2438            ___awdiv@divisor 0003            ___awdiv@counter 0005  
                    _PORTB 3FCB                      _PORTD 3FCD                      _TRISB 3FC3  
                    _TRISD 3FC5            __end_of_display 2660                      status 3FD8  
          __initialization 2648               __end_of_main 2374                     ??_main 0012  
            __activetblptr 0003           ___awdiv@dividend 0001                     _ANSELB 3A50  
                   _ANSELD 3A70              display@Result 0001                     _Result 0014  
                ??___awdiv 0005           __end_of_evaluate 24C0           ___awdiv@quotient 0007  
                   isa$std 0001                  ??_display 0001               __mediumconst 0000  
           evaluate@result 0011                 __accesstop 0060    __end_of__initialization 2650  
            ___rparam_used 0001             __pcstackCOMRAM 0001                 __pnvCOMRAM 0018  
                ?_evaluate 0009          __end_of_getInputX 25CC          __end_of_getInputY 2546  
                  __Hparam 0000                    __Lparam 0000                    ___awdiv 2374  
             __psmallconst 2000                    __pcinit 2648                    __ramtop 2000  
                  __ptext0 2282                    __ptext1 24C0                    __ptext2 2546  
                  __ptext3 25CC                    __ptext4 2002                    __ptext5 2438  
                  __ptext6 2374                    __ptext7 2656                    _display 2656  
                  _input_X 0017                    _input_Y 0016          _getInputOperation 25CC  
       ?_getInputOperation 0001       end_of_initialization 2650                 ??_evaluate 000F  
      ??_getInputOperation 0002              ??_getKeypress 0001  __end_of_getInputOperation 2648  
          evaluate@input_X 0009            evaluate@input_Y 000B        start_initialization 2648  
      __end_of_getKeypress 2282                  _Operation 0015                __pbssCOMRAM 0014  
                 ?___awdiv 0001                  _getInputX 2546                  _getInputY 24C0  
                 ?_display 0001                __smallconst 2000                _getKeypress 2002  
               ?_getInputX 0001                 ?_getInputY 0001                   __Hrparam 0000  
                 __Lrparam 0000                   _evaluate 2438          evaluate@Operation 000D  
                 isa$xinst 0000                ??_getInputX 0002                ??_getInputY 0002  
             ?_getKeypress 0001  
