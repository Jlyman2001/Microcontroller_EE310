

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 08 17:37:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	nvCOMRAM
    57   000019                     __pnvCOMRAM:
    58                           	callstack 0
    59   000019                     _key:
    60                           	callstack 0
    61   000019                     	ds	1
    62   000000                     _ANSELB	set	14928
    63   000000                     _LATB	set	16315
    64   000000                     _TRISB	set	16323
    65   000000                     _PORTB	set	16331
    66   000000                     _PORTD	set	16333
    67   000000                     _TRISD	set	16325
    68   000000                     _LATD	set	16317
    69   000000                     _ANSELD	set	14960
    70                           
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74   0024EA                     __pcinit:
    75                           	callstack 0
    76   0024EA                     start_initialization:
    77                           	callstack 0
    78   0024EA                     __initialization:
    79                           	callstack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (4 bytes)
    82   0024EA  6A18               	clrf	(__pbssCOMRAM+3)& (0+255),c
    83   0024EC  6A17               	clrf	(__pbssCOMRAM+2)& (0+255),c
    84   0024EE  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
    85   0024F0  6A15               	clrf	__pbssCOMRAM& (0+255),c
    86   0024F2                     end_of_initialization:
    87                           	callstack 0
    88   0024F2                     __end_of__initialization:
    89                           	callstack 0
    90   0024F2  0100               	movlb	0
    91   0024F4  EFDC  F010         	goto	_main	;jump to C main() function
    92                           
    93                           	psect	bssCOMRAM
    94   000015                     __pbssCOMRAM:
    95                           	callstack 0
    96   000015                     _Result:
    97                           	callstack 0
    98   000015                     	ds	1
    99   000016                     _Operation:
   100                           	callstack 0
   101   000016                     	ds	1
   102   000017                     _input_Y:
   103                           	callstack 0
   104   000017                     	ds	1
   105   000018                     _input_X:
   106                           	callstack 0
   107   000018                     	ds	1
   108                           
   109                           	psect	cstackCOMRAM
   110   000001                     __pcstackCOMRAM:
   111                           	callstack 0
   112   000001                     ??_getKeypress:
   113   000001                     ?___awdiv:
   114                           	callstack 0
   115   000001                     display@Result:
   116                           	callstack 0
   117   000001                     ___awdiv@dividend:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x0
   121   000001                     	ds	1
   122   000002                     getKeypress@secondRead:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0x1
   126   000002                     	ds	1
   127   000003                     ??_getInputX:
   128   000003                     ??_getInputY:
   129   000003                     ??_getInputOperation:
   130   000003                     ___awdiv@divisor:
   131                           	callstack 0
   132                           
   133                           ; 2 bytes @ 0x2
   134   000003                     	ds	2
   135   000005                     ___awdiv@counter:
   136                           	callstack 0
   137                           
   138                           ; 1 bytes @ 0x4
   139   000005                     	ds	1
   140   000006                     ___awdiv@sign:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x5
   144   000006                     	ds	1
   145   000007                     ___awdiv@quotient:
   146                           	callstack 0
   147                           
   148                           ; 2 bytes @ 0x6
   149   000007                     	ds	2
   150   000009                     evaluate@input_X:
   151                           	callstack 0
   152                           
   153                           ; 2 bytes @ 0x8
   154   000009                     	ds	2
   155   00000B                     evaluate@input_Y:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0xA
   159   00000B                     	ds	2
   160   00000D                     evaluate@Operation:
   161                           	callstack 0
   162                           
   163                           ; 2 bytes @ 0xC
   164   00000D                     	ds	2
   165   00000F                     ??_evaluate:
   166                           
   167                           ; 1 bytes @ 0xE
   168   00000F                     	ds	2
   169   000011                     evaluate@result:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x10
   173   000011                     	ds	1
   174   000012                     ??_main:
   175                           
   176                           ; 1 bytes @ 0x11
   177   000012                     	ds	3
   178                           
   179 ;;
   180 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   181 ;;
   182 ;; *************** function _main *****************
   183 ;; Defined at:
   184 ;;		line 195 in file "newmain.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   200 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   201 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   202 ;;Total ram usage:        3 bytes
   203 ;; Hardware stack levels required when called: 2
   204 ;; This function calls:
   205 ;;		_display
   206 ;;		_evaluate
   207 ;;		_getInputOperation
   208 ;;		_getInputX
   209 ;;		_getInputY
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text0
   216   0021B8                     __ptext0:
   217                           	callstack 0
   218   0021B8                     _main:
   219                           	callstack 29
   220   0021B8                     
   221                           ;newmain.c: 198:     TRISB = 0xF0;
   222   0021B8  0EF0               	movlw	240
   223   0021BA  6EC3               	movwf	195,c	;volatile
   224                           
   225                           ;newmain.c: 199:     LATB = 0;
   226   0021BC  0E00               	movlw	0
   227   0021BE  6EBB               	movwf	187,c	;volatile
   228                           
   229                           ;newmain.c: 200:     PORTB = 0;
   230   0021C0  0E00               	movlw	0
   231   0021C2  6ECB               	movwf	203,c	;volatile
   232                           
   233                           ;newmain.c: 201:     ANSELB = 0;
   234   0021C4  0E00               	movlw	0
   235   0021C6  013A               	movlb	58	; () banked
   236   0021C8  6F50               	movwf	80,b	;volatile
   237                           
   238                           ;newmain.c: 204:     TRISD = 0;
   239   0021CA  0E00               	movlw	0
   240   0021CC  6EC5               	movwf	197,c	;volatile
   241                           
   242                           ;newmain.c: 205:     LATD = 0;
   243   0021CE  0E00               	movlw	0
   244   0021D0  6EBD               	movwf	189,c	;volatile
   245                           
   246                           ;newmain.c: 206:     PORTD = 0;
   247   0021D2  0E00               	movlw	0
   248   0021D4  6ECD               	movwf	205,c	;volatile
   249                           
   250                           ;newmain.c: 207:     ANSELD = 0;
   251   0021D6  0E00               	movlw	0
   252   0021D8  6F70               	movwf	112,b	;volatile
   253   0021DA                     l1105:
   254                           
   255                           ;newmain.c: 211:     {;newmain.c: 214:         getInputX();
   256   0021DA  EC1C  F012         	call	_getInputX	;wreg free
   257   0021DE                     
   258                           ;newmain.c: 215:         PORTD = 0x01;
   259   0021DE  0E01               	movlw	1
   260   0021E0  6ECD               	movwf	205,c	;volatile
   261   0021E2                     
   262                           ;newmain.c: 217:         getInputOperation();
   263   0021E2  EC53  F012         	call	_getInputOperation	;wreg free
   264   0021E6                     
   265                           ;newmain.c: 219:         getInputY();
   266   0021E6  ECE5  F011         	call	_getInputY	;wreg free
   267   0021EA                     
   268                           ;newmain.c: 220:         PORTD = 0x02;
   269   0021EA  0E02               	movlw	2
   270   0021EC  6ECD               	movwf	205,c	;volatile
   271                           
   272                           ;newmain.c: 222:         while(getKeypress != 0x0F)
   273   0021EE  EF00  F011         	goto	l1117
   274   0021F2                     l1115:
   275                           
   276                           ;newmain.c: 223:         {_delay((unsigned long)((100)*(4000000/4000.0)));}
   277   0021F2  0E82               	movlw	130
   278   0021F4  6E12               	movwf	??_main^0,c
   279   0021F6  0EDE               	movlw	222
   280   0021F8                     u257:
   281   0021F8  2EE8               	decfsz	wreg,f,c
   282   0021FA  D7FE               	bra	u257
   283   0021FC  2E12               	decfsz	??_main^0,f,c
   284   0021FE  D7FC               	bra	u257
   285   002200                     l1117:
   286                           
   287                           ;newmain.c: 222:         while(getKeypress != 0x0F)
   288   002200  0E02               	movlw	low _getKeypress
   289   002202  6E12               	movwf	??_main^0,c
   290   002204  0E20               	movlw	high _getKeypress
   291   002206  6E13               	movwf	(??_main+1)^0,c
   292   002208  0E00               	movlw	low (_getKeypress shr (0+16))
   293   00220A  6E14               	movwf	(??_main+2)^0,c
   294   00220C  0E0F               	movlw	15
   295   00220E  1812               	xorwf	??_main^0,w,c
   296   002210  1013               	iorwf	(??_main+1)^0,w,c
   297   002212  1014               	iorwf	(??_main+2)^0,w,c
   298   002214  A4D8               	btfss	status,2,c
   299   002216  EF0F  F011         	goto	u231
   300   00221A  EF11  F011         	goto	u230
   301   00221E                     u231:
   302   00221E  EFF9  F010         	goto	l1115
   303   002222                     u230:
   304   002222                     
   305                           ;newmain.c: 225:         Result = evaluate(input_X,input_Y,Operation);
   306   002222  C018  F009         	movff	_input_X,evaluate@input_X
   307   002226  6A0A               	clrf	(evaluate@input_X+1)^0,c
   308   002228  C017  F00B         	movff	_input_Y,evaluate@input_Y
   309   00222C  6A0C               	clrf	(evaluate@input_Y+1)^0,c
   310   00222E  C016  F00D         	movff	_Operation,evaluate@Operation
   311   002232  6A0E               	clrf	(evaluate@Operation+1)^0,c
   312   002234  ECA0  F011         	call	_evaluate	;wreg free
   313   002238  6E15               	movwf	_Result^0,c
   314   00223A                     
   315                           ;newmain.c: 226:         display(Result);
   316   00223A  5015               	movf	_Result^0,w,c
   317   00223C  EC7C  F012         	call	_display
   318                           
   319                           ;newmain.c: 227:         while(getKeypress != 0x0F)
   320   002240  EF29  F011         	goto	l1125
   321   002244                     l1123:
   322                           
   323                           ;newmain.c: 228:         {_delay((unsigned long)((100)*(4000000/4000.0)));}
   324   002244  0E82               	movlw	130
   325   002246  6E12               	movwf	??_main^0,c
   326   002248  0EDE               	movlw	222
   327   00224A                     u267:
   328   00224A  2EE8               	decfsz	wreg,f,c
   329   00224C  D7FE               	bra	u267
   330   00224E  2E12               	decfsz	??_main^0,f,c
   331   002250  D7FC               	bra	u267
   332   002252                     l1125:
   333                           
   334                           ;newmain.c: 227:         while(getKeypress != 0x0F)
   335   002252  0E02               	movlw	low _getKeypress
   336   002254  6E12               	movwf	??_main^0,c
   337   002256  0E20               	movlw	high _getKeypress
   338   002258  6E13               	movwf	(??_main+1)^0,c
   339   00225A  0E00               	movlw	low (_getKeypress shr (0+16))
   340   00225C  6E14               	movwf	(??_main+2)^0,c
   341   00225E  0E0F               	movlw	15
   342   002260  1812               	xorwf	??_main^0,w,c
   343   002262  1013               	iorwf	(??_main+1)^0,w,c
   344   002264  1014               	iorwf	(??_main+2)^0,w,c
   345   002266  A4D8               	btfss	status,2,c
   346   002268  EF38  F011         	goto	u241
   347   00226C  EF3A  F011         	goto	u240
   348   002270                     u241:
   349   002270  EF22  F011         	goto	l1123
   350   002274                     u240:
   351   002274  EFED  F010         	goto	l1105
   352   002278  EFFE  F0FF         	goto	start
   353   00227C                     __end_of_main:
   354                           	callstack 0
   355                           
   356 ;; *************** function _getInputY *****************
   357 ;; Defined at:
   358 ;;		line 135 in file "newmain.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   376 ;;Total ram usage:        1 bytes
   377 ;; Hardware stack levels used: 1
   378 ;; Hardware stack levels required when called: 1
   379 ;; This function calls:
   380 ;;		_getKeypress
   381 ;; This function is called by:
   382 ;;		_main
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text1
   387   0023CA                     __ptext1:
   388                           	callstack 0
   389   0023CA                     _getInputY:
   390                           	callstack 29
   391   0023CA                     
   392                           ;newmain.c: 137:     input_Y = 0;
   393   0023CA  0E00               	movlw	0
   394   0023CC  6E17               	movwf	_input_Y^0,c
   395   0023CE                     
   396                           ;newmain.c: 138:     key = 0xFF;
   397   0023CE  6819               	setf	_key^0,c
   398                           
   399                           ;newmain.c: 139:     while (key >= 0x0A)
   400   0023D0  EFED  F011         	goto	l939
   401   0023D4                     l937:
   402                           
   403                           ;newmain.c: 140:         key = getKeypress();
   404   0023D4  EC01  F010         	call	_getKeypress	;wreg free
   405   0023D8  6E19               	movwf	_key^0,c
   406   0023DA                     l939:
   407                           
   408                           ;newmain.c: 139:     while (key >= 0x0A)
   409   0023DA  0E0A               	movlw	10
   410   0023DC  6019               	cpfslt	_key^0,c
   411   0023DE  EFF3  F011         	goto	u111
   412   0023E2  EFF5  F011         	goto	u110
   413   0023E6                     u111:
   414   0023E6  EFEA  F011         	goto	l937
   415   0023EA                     u110:
   416   0023EA                     
   417                           ;newmain.c: 141:         _delay((unsigned long)((10)*(4000000/4000.0)));
   418   0023EA  0E0D               	movlw	13
   419   0023EC  6E03               	movwf	??_getInputY^0,c
   420   0023EE  0EFC               	movlw	252
   421   0023F0                     u277:
   422   0023F0  2EE8               	decfsz	wreg,f,c
   423   0023F2  D7FE               	bra	u277
   424   0023F4  2E03               	decfsz	??_getInputY^0,f,c
   425   0023F6  D7FC               	bra	u277
   426   0023F8                     
   427                           ;newmain.c: 142:     input_Y = (input_Y << 4) + key;
   428   0023F8  5017               	movf	_input_Y^0,w,c
   429   0023FA  0D10               	mullw	16
   430   0023FC  50F3               	movf	243,w,c
   431   0023FE  2419               	addwf	_key^0,w,c
   432   002400  6E17               	movwf	_input_Y^0,c
   433   002402                     
   434                           ;newmain.c: 145:     key = 0xFF;
   435   002402  6819               	setf	_key^0,c
   436                           
   437                           ;newmain.c: 146:     while (key >= 0x0A)
   438   002404  EF07  F012         	goto	l949
   439   002408                     l947:
   440                           
   441                           ;newmain.c: 147:         key = getKeypress();
   442   002408  EC01  F010         	call	_getKeypress	;wreg free
   443   00240C  6E19               	movwf	_key^0,c
   444   00240E                     l949:
   445                           
   446                           ;newmain.c: 146:     while (key >= 0x0A)
   447   00240E  0E0A               	movlw	10
   448   002410  6019               	cpfslt	_key^0,c
   449   002412  EF0D  F012         	goto	u121
   450   002416  EF0F  F012         	goto	u120
   451   00241A                     u121:
   452   00241A  EF04  F012         	goto	l947
   453   00241E                     u120:
   454   00241E                     
   455                           ;newmain.c: 148:         _delay((unsigned long)((10)*(4000000/4000.0)));
   456   00241E  0E0D               	movlw	13
   457   002420  6E03               	movwf	??_getInputY^0,c
   458   002422  0EFC               	movlw	252
   459   002424                     u287:
   460   002424  2EE8               	decfsz	wreg,f,c
   461   002426  D7FE               	bra	u287
   462   002428  2E03               	decfsz	??_getInputY^0,f,c
   463   00242A  D7FC               	bra	u287
   464   00242C                     
   465                           ;newmain.c: 149:     input_Y = (input_Y << 4) + key;
   466   00242C  5017               	movf	_input_Y^0,w,c
   467   00242E  0D10               	mullw	16
   468   002430  50F3               	movf	243,w,c
   469   002432  2419               	addwf	_key^0,w,c
   470   002434  6E17               	movwf	_input_Y^0,c
   471   002436  0012               	return		;funcret
   472   002438                     __end_of_getInputY:
   473                           	callstack 0
   474                           
   475 ;; *************** function _getInputX *****************
   476 ;; Defined at:
   477 ;;		line 115 in file "newmain.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   495 ;;Total ram usage:        1 bytes
   496 ;; Hardware stack levels used: 1
   497 ;; Hardware stack levels required when called: 1
   498 ;; This function calls:
   499 ;;		_getKeypress
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text2
   506   002438                     __ptext2:
   507                           	callstack 0
   508   002438                     _getInputX:
   509                           	callstack 29
   510   002438                     
   511                           ;newmain.c: 117:     input_X = 0;
   512   002438  0E00               	movlw	0
   513   00243A  6E18               	movwf	_input_X^0,c
   514   00243C                     
   515                           ;newmain.c: 118:     key = 0xFF;
   516   00243C  6819               	setf	_key^0,c
   517                           
   518                           ;newmain.c: 119:     while (key >= 0x0A)
   519   00243E  EF24  F012         	goto	l917
   520   002442                     l915:
   521                           
   522                           ;newmain.c: 120:         key = getKeypress();
   523   002442  EC01  F010         	call	_getKeypress	;wreg free
   524   002446  6E19               	movwf	_key^0,c
   525   002448                     l917:
   526                           
   527                           ;newmain.c: 119:     while (key >= 0x0A)
   528   002448  0E0A               	movlw	10
   529   00244A  6019               	cpfslt	_key^0,c
   530   00244C  EF2A  F012         	goto	u91
   531   002450  EF2C  F012         	goto	u90
   532   002454                     u91:
   533   002454  EF21  F012         	goto	l915
   534   002458                     u90:
   535   002458                     
   536                           ;newmain.c: 121:         _delay((unsigned long)((10)*(4000000/4000.0)));
   537   002458  0E0D               	movlw	13
   538   00245A  6E03               	movwf	??_getInputX^0,c
   539   00245C  0EFC               	movlw	252
   540   00245E                     u297:
   541   00245E  2EE8               	decfsz	wreg,f,c
   542   002460  D7FE               	bra	u297
   543   002462  2E03               	decfsz	??_getInputX^0,f,c
   544   002464  D7FC               	bra	u297
   545   002466                     
   546                           ;newmain.c: 122:     input_X = (input_X << 4) + key;
   547   002466  5018               	movf	_input_X^0,w,c
   548   002468  0D10               	mullw	16
   549   00246A  50F3               	movf	243,w,c
   550   00246C  2419               	addwf	_key^0,w,c
   551   00246E  6E18               	movwf	_input_X^0,c
   552   002470                     
   553                           ;newmain.c: 125:     key = 0xFF;
   554   002470  6819               	setf	_key^0,c
   555                           
   556                           ;newmain.c: 126:     while (key >= 0x0A)
   557   002472  EF3E  F012         	goto	l927
   558   002476                     l925:
   559                           
   560                           ;newmain.c: 127:         key = getKeypress();
   561   002476  EC01  F010         	call	_getKeypress	;wreg free
   562   00247A  6E19               	movwf	_key^0,c
   563   00247C                     l927:
   564                           
   565                           ;newmain.c: 126:     while (key >= 0x0A)
   566   00247C  0E0A               	movlw	10
   567   00247E  6019               	cpfslt	_key^0,c
   568   002480  EF44  F012         	goto	u101
   569   002484  EF46  F012         	goto	u100
   570   002488                     u101:
   571   002488  EF3B  F012         	goto	l925
   572   00248C                     u100:
   573   00248C                     
   574                           ;newmain.c: 128:         _delay((unsigned long)((10)*(4000000/4000.0)));
   575   00248C  0E0D               	movlw	13
   576   00248E  6E03               	movwf	??_getInputX^0,c
   577   002490  0EFC               	movlw	252
   578   002492                     u307:
   579   002492  2EE8               	decfsz	wreg,f,c
   580   002494  D7FE               	bra	u307
   581   002496  2E03               	decfsz	??_getInputX^0,f,c
   582   002498  D7FC               	bra	u307
   583   00249A                     
   584                           ;newmain.c: 129:     input_X = (input_X << 4) + key;
   585   00249A  5018               	movf	_input_X^0,w,c
   586   00249C  0D10               	mullw	16
   587   00249E  50F3               	movf	243,w,c
   588   0024A0  2419               	addwf	_key^0,w,c
   589   0024A2  6E18               	movwf	_input_X^0,c
   590   0024A4  0012               	return		;funcret
   591   0024A6                     __end_of_getInputX:
   592                           	callstack 0
   593                           
   594 ;; *************** function _getInputOperation *****************
   595 ;; Defined at:
   596 ;;		line 154 in file "newmain.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   614 ;;Total ram usage:        1 bytes
   615 ;; Hardware stack levels used: 1
   616 ;; Hardware stack levels required when called: 1
   617 ;; This function calls:
   618 ;;		_getKeypress
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text3
   625   0024A6                     __ptext3:
   626                           	callstack 0
   627   0024A6                     _getInputOperation:
   628                           	callstack 29
   629   0024A6                     
   630                           ;newmain.c: 156:     Operation = 0;
   631   0024A6  0E00               	movlw	0
   632   0024A8  6E16               	movwf	_Operation^0,c
   633   0024AA                     
   634                           ;newmain.c: 157:     key = 0xFF;
   635   0024AA  6819               	setf	_key^0,c
   636                           
   637                           ;newmain.c: 158:     while ((key > 0x0D) || (key < 0x0A))
   638   0024AC  EF5B  F012         	goto	l961
   639   0024B0                     l959:
   640                           
   641                           ;newmain.c: 160:         key = getKeypress();
   642   0024B0  EC01  F010         	call	_getKeypress	;wreg free
   643   0024B4  6E19               	movwf	_key^0,c
   644   0024B6                     l961:
   645                           
   646                           ;newmain.c: 158:     while ((key > 0x0D) || (key < 0x0A))
   647   0024B6  0E0E               	movlw	14
   648   0024B8  6019               	cpfslt	_key^0,c
   649   0024BA  EF61  F012         	goto	u131
   650   0024BE  EF63  F012         	goto	u130
   651   0024C2                     u131:
   652   0024C2  EF58  F012         	goto	l959
   653   0024C6                     u130:
   654   0024C6  0E09               	movlw	9
   655   0024C8  6419               	cpfsgt	_key^0,c
   656   0024CA  EF69  F012         	goto	u141
   657   0024CE  EF6B  F012         	goto	u140
   658   0024D2                     u141:
   659   0024D2  EF58  F012         	goto	l959
   660   0024D6                     u140:
   661   0024D6                     
   662                           ;newmain.c: 161:         _delay((unsigned long)((10)*(4000000/4000.0)));
   663   0024D6  0E0D               	movlw	13
   664   0024D8  6E03               	movwf	??_getInputOperation^0,c
   665   0024DA  0EFC               	movlw	252
   666   0024DC                     u317:
   667   0024DC  2EE8               	decfsz	wreg,f,c
   668   0024DE  D7FE               	bra	u317
   669   0024E0  2E03               	decfsz	??_getInputOperation^0,f,c
   670   0024E2  D7FC               	bra	u317
   671   0024E4                     
   672                           ;newmain.c: 162:     Operation = key;
   673   0024E4  C019  F016         	movff	_key,_Operation
   674   0024E8  0012               	return		;funcret
   675   0024EA                     __end_of_getInputOperation:
   676                           	callstack 0
   677                           
   678 ;; *************** function _getKeypress *****************
   679 ;; Defined at:
   680 ;;		line 33 in file "newmain.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  secondRead      1    1[COMRAM] unsigned char 
   685 ;;  firstRead       1    0        unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      unsigned char 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   699 ;;Total ram usage:        2 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_getInputX
   705 ;;		_getInputY
   706 ;;		_getInputOperation
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text4
   712   002002                     __ptext4:
   713                           	callstack 0
   714   002002                     _getKeypress:
   715                           	callstack 29
   716   002002                     
   717                           ;newmain.c: 37:     key = 0xFF;
   718   002002  6819               	setf	_key^0,c
   719   002004                     
   720                           ;newmain.c: 38:     PORTB = 0x01;
   721   002004  0E01               	movlw	1
   722   002006  6ECB               	movwf	203,c	;volatile
   723   002008                     
   724                           ;newmain.c: 39:     _delay((unsigned long)((10)*(4000000/4000.0)));
   725   002008  0E0D               	movlw	13
   726   00200A  6E01               	movwf	??_getKeypress^0,c
   727   00200C  0EFC               	movlw	252
   728   00200E                     u327:
   729   00200E  2EE8               	decfsz	wreg,f,c
   730   002010  D7FE               	bra	u327
   731   002012  2E01               	decfsz	??_getKeypress^0,f,c
   732   002014  D7FC               	bra	u327
   733   002016  50CB               	movf	203,w,c	;volatile
   734                           
   735                           ;newmain.c: 41:     switch (PORTB)
   736   002018  EF1E  F010         	goto	l801
   737   00201C                     l791:
   738                           
   739                           ;newmain.c: 44:                 key = 0x0D;
   740   00201C  0E0D               	movlw	13
   741   00201E  6E19               	movwf	_key^0,c
   742                           
   743                           ;newmain.c: 45:                 break;
   744   002020  EF31  F010         	goto	l803
   745   002024                     l793:
   746                           
   747                           ;newmain.c: 47:                 key = 0x0C;
   748   002024  0E0C               	movlw	12
   749   002026  6E19               	movwf	_key^0,c
   750                           
   751                           ;newmain.c: 48:                 break;
   752   002028  EF31  F010         	goto	l803
   753   00202C                     l795:
   754                           
   755                           ;newmain.c: 50:                 key = 0x0B;
   756   00202C  0E0B               	movlw	11
   757   00202E  6E19               	movwf	_key^0,c
   758                           
   759                           ;newmain.c: 51:                 break;
   760   002030  EF31  F010         	goto	l803
   761   002034                     l797:
   762                           
   763                           ;newmain.c: 53:                 key = 0x0A;
   764   002034  0E0A               	movlw	10
   765   002036  6E19               	movwf	_key^0,c
   766                           
   767                           ;newmain.c: 54:                 break;
   768   002038  EF31  F010         	goto	l803
   769   00203C                     l801:
   770   00203C  50CB               	movf	203,w,c	;volatile
   771                           
   772                           ; Switch size 1, requested type "simple"
   773                           ; Number of cases is 4, Range of values is 17 to 129
   774                           ; switch strategies available:
   775                           ; Name         Instructions Cycles
   776                           ; simple_byte           13     7 (average)
   777                           ;	Chosen strategy is simple_byte
   778   00203E  0A11               	xorlw	17	; case 17
   779   002040  B4D8               	btfsc	status,2,c
   780   002042  EF0E  F010         	goto	l791
   781   002046  0A30               	xorlw	48	; case 33
   782   002048  B4D8               	btfsc	status,2,c
   783   00204A  EF12  F010         	goto	l793
   784   00204E  0A60               	xorlw	96	; case 65
   785   002050  B4D8               	btfsc	status,2,c
   786   002052  EF16  F010         	goto	l795
   787   002056  0AC0               	xorlw	192	; case 129
   788   002058  B4D8               	btfsc	status,2,c
   789   00205A  EF1A  F010         	goto	l797
   790   00205E  EF31  F010         	goto	l803
   791   002062                     l803:
   792                           
   793                           ;newmain.c: 57:     PORTB = 0x02;
   794   002062  0E02               	movlw	2
   795   002064  6ECB               	movwf	203,c	;volatile
   796   002066                     
   797                           ;newmain.c: 58:     _delay((unsigned long)((10)*(4000000/4000.0)));
   798   002066  0E0D               	movlw	13
   799   002068  6E01               	movwf	??_getKeypress^0,c
   800   00206A  0EFC               	movlw	252
   801   00206C                     u337:
   802   00206C  2EE8               	decfsz	wreg,f,c
   803   00206E  D7FE               	bra	u337
   804   002070  2E01               	decfsz	??_getKeypress^0,f,c
   805   002072  D7FC               	bra	u337
   806                           
   807                           ;newmain.c: 59:     switch (PORTB)
   808   002074  EF4C  F010         	goto	l817
   809   002078                     l807:
   810                           
   811                           ;newmain.c: 62:                 key = 0x0F;
   812   002078  0E0F               	movlw	15
   813   00207A  6E19               	movwf	_key^0,c
   814                           
   815                           ;newmain.c: 63:                 break;
   816   00207C  EF5F  F010         	goto	l819
   817   002080                     l809:
   818                           
   819                           ;newmain.c: 65:                 key = 9;
   820   002080  0E09               	movlw	9
   821   002082  6E19               	movwf	_key^0,c
   822                           
   823                           ;newmain.c: 66:                 break;
   824   002084  EF5F  F010         	goto	l819
   825   002088                     l811:
   826                           
   827                           ;newmain.c: 68:                 key = 6;
   828   002088  0E06               	movlw	6
   829   00208A  6E19               	movwf	_key^0,c
   830                           
   831                           ;newmain.c: 69:                 break;
   832   00208C  EF5F  F010         	goto	l819
   833   002090                     l813:
   834                           
   835                           ;newmain.c: 71:                 key = 3;
   836   002090  0E03               	movlw	3
   837   002092  6E19               	movwf	_key^0,c
   838                           
   839                           ;newmain.c: 72:                 break;
   840   002094  EF5F  F010         	goto	l819
   841   002098                     l817:
   842   002098  50CB               	movf	203,w,c	;volatile
   843                           
   844                           ; Switch size 1, requested type "simple"
   845                           ; Number of cases is 4, Range of values is 18 to 130
   846                           ; switch strategies available:
   847                           ; Name         Instructions Cycles
   848                           ; simple_byte           13     7 (average)
   849                           ;	Chosen strategy is simple_byte
   850   00209A  0A12               	xorlw	18	; case 18
   851   00209C  B4D8               	btfsc	status,2,c
   852   00209E  EF3C  F010         	goto	l807
   853   0020A2  0A30               	xorlw	48	; case 34
   854   0020A4  B4D8               	btfsc	status,2,c
   855   0020A6  EF40  F010         	goto	l809
   856   0020AA  0A60               	xorlw	96	; case 66
   857   0020AC  B4D8               	btfsc	status,2,c
   858   0020AE  EF44  F010         	goto	l811
   859   0020B2  0AC0               	xorlw	192	; case 130
   860   0020B4  B4D8               	btfsc	status,2,c
   861   0020B6  EF48  F010         	goto	l813
   862   0020BA  EF5F  F010         	goto	l819
   863   0020BE                     l819:
   864                           
   865                           ;newmain.c: 74:     PORTB = 0x04;
   866   0020BE  0E04               	movlw	4
   867   0020C0  6ECB               	movwf	203,c	;volatile
   868   0020C2                     
   869                           ;newmain.c: 75:     _delay((unsigned long)((10)*(4000000/4000.0)));
   870   0020C2  0E0D               	movlw	13
   871   0020C4  6E01               	movwf	??_getKeypress^0,c
   872   0020C6  0EFC               	movlw	252
   873   0020C8                     u347:
   874   0020C8  2EE8               	decfsz	wreg,f,c
   875   0020CA  D7FE               	bra	u347
   876   0020CC  2E01               	decfsz	??_getKeypress^0,f,c
   877   0020CE  D7FC               	bra	u347
   878                           
   879                           ;newmain.c: 76:     switch (PORTB)
   880   0020D0  EF7A  F010         	goto	l833
   881   0020D4                     l823:
   882                           
   883                           ;newmain.c: 79:                 key = 0;
   884   0020D4  0E00               	movlw	0
   885   0020D6  6E19               	movwf	_key^0,c
   886                           
   887                           ;newmain.c: 80:                 break;
   888   0020D8  EF8D  F010         	goto	l835
   889   0020DC                     l825:
   890                           
   891                           ;newmain.c: 82:                 key = 8;
   892   0020DC  0E08               	movlw	8
   893   0020DE  6E19               	movwf	_key^0,c
   894                           
   895                           ;newmain.c: 83:                 break;
   896   0020E0  EF8D  F010         	goto	l835
   897   0020E4                     l827:
   898                           
   899                           ;newmain.c: 85:                 key = 5;
   900   0020E4  0E05               	movlw	5
   901   0020E6  6E19               	movwf	_key^0,c
   902                           
   903                           ;newmain.c: 86:                 break;
   904   0020E8  EF8D  F010         	goto	l835
   905   0020EC                     l829:
   906                           
   907                           ;newmain.c: 88:                 key = 2;
   908   0020EC  0E02               	movlw	2
   909   0020EE  6E19               	movwf	_key^0,c
   910                           
   911                           ;newmain.c: 89:                 break;
   912   0020F0  EF8D  F010         	goto	l835
   913   0020F4                     l833:
   914   0020F4  50CB               	movf	203,w,c	;volatile
   915                           
   916                           ; Switch size 1, requested type "simple"
   917                           ; Number of cases is 4, Range of values is 20 to 132
   918                           ; switch strategies available:
   919                           ; Name         Instructions Cycles
   920                           ; simple_byte           13     7 (average)
   921                           ;	Chosen strategy is simple_byte
   922   0020F6  0A14               	xorlw	20	; case 20
   923   0020F8  B4D8               	btfsc	status,2,c
   924   0020FA  EF6A  F010         	goto	l823
   925   0020FE  0A30               	xorlw	48	; case 36
   926   002100  B4D8               	btfsc	status,2,c
   927   002102  EF6E  F010         	goto	l825
   928   002106  0A60               	xorlw	96	; case 68
   929   002108  B4D8               	btfsc	status,2,c
   930   00210A  EF72  F010         	goto	l827
   931   00210E  0AC0               	xorlw	192	; case 132
   932   002110  B4D8               	btfsc	status,2,c
   933   002112  EF76  F010         	goto	l829
   934   002116  EF8D  F010         	goto	l835
   935   00211A                     l835:
   936                           
   937                           ;newmain.c: 91:     PORTB = 0x08;
   938   00211A  0E08               	movlw	8
   939   00211C  6ECB               	movwf	203,c	;volatile
   940   00211E                     
   941                           ;newmain.c: 92:     _delay((unsigned long)((10)*(4000000/4000.0)));
   942   00211E  0E0D               	movlw	13
   943   002120  6E01               	movwf	??_getKeypress^0,c
   944   002122  0EFC               	movlw	252
   945   002124                     u357:
   946   002124  2EE8               	decfsz	wreg,f,c
   947   002126  D7FE               	bra	u357
   948   002128  2E01               	decfsz	??_getKeypress^0,f,c
   949   00212A  D7FC               	bra	u357
   950                           
   951                           ;newmain.c: 93:     switch (PORTB)
   952   00212C  EFA8  F010         	goto	l849
   953   002130                     l839:
   954                           
   955                           ;newmain.c: 96:                 key = 0x0E;
   956   002130  0E0E               	movlw	14
   957   002132  6E19               	movwf	_key^0,c
   958                           
   959                           ;newmain.c: 97:                 break;
   960   002134  EFBB  F010         	goto	l851
   961   002138                     l841:
   962                           
   963                           ;newmain.c: 99:                 key = 7;
   964   002138  0E07               	movlw	7
   965   00213A  6E19               	movwf	_key^0,c
   966                           
   967                           ;newmain.c: 100:                 break;
   968   00213C  EFBB  F010         	goto	l851
   969   002140                     l843:
   970                           
   971                           ;newmain.c: 102:                 key = 4;
   972   002140  0E04               	movlw	4
   973   002142  6E19               	movwf	_key^0,c
   974                           
   975                           ;newmain.c: 103:                 break;
   976   002144  EFBB  F010         	goto	l851
   977   002148                     l845:
   978                           
   979                           ;newmain.c: 105:                 key = 1;
   980   002148  0E01               	movlw	1
   981   00214A  6E19               	movwf	_key^0,c
   982                           
   983                           ;newmain.c: 106:                 break;
   984   00214C  EFBB  F010         	goto	l851
   985   002150                     l849:
   986   002150  50CB               	movf	203,w,c	;volatile
   987                           
   988                           ; Switch size 1, requested type "simple"
   989                           ; Number of cases is 4, Range of values is 24 to 136
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte           13     7 (average)
   993                           ;	Chosen strategy is simple_byte
   994   002152  0A18               	xorlw	24	; case 24
   995   002154  B4D8               	btfsc	status,2,c
   996   002156  EF98  F010         	goto	l839
   997   00215A  0A30               	xorlw	48	; case 40
   998   00215C  B4D8               	btfsc	status,2,c
   999   00215E  EF9C  F010         	goto	l841
  1000   002162  0A60               	xorlw	96	; case 72
  1001   002164  B4D8               	btfsc	status,2,c
  1002   002166  EFA0  F010         	goto	l843
  1003   00216A  0AC0               	xorlw	192	; case 136
  1004   00216C  B4D8               	btfsc	status,2,c
  1005   00216E  EFA4  F010         	goto	l845
  1006   002172  EFBB  F010         	goto	l851
  1007   002176                     l851:
  1008                           
  1009                           ;newmain.c: 108:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1010   002176  0E41               	movlw	65
  1011   002178  6E01               	movwf	??_getKeypress^0,c
  1012   00217A  0EEE               	movlw	238
  1013   00217C                     u367:
  1014   00217C  2EE8               	decfsz	wreg,f,c
  1015   00217E  D7FE               	bra	u367
  1016   002180  2E01               	decfsz	??_getKeypress^0,f,c
  1017   002182  D7FC               	bra	u367
  1018   002184  D000               	nop2	
  1019   002186                     
  1020                           ;newmain.c: 109:     unsigned char secondRead = PORTB;
  1021   002186  006F FF2C  F002    	movff	16331,getKeypress@secondRead	;volatile
  1022   00218C                     
  1023                           ;newmain.c: 110:     if (secondRead != 0xFF && secondRead == PORTB)
  1024   00218C  2802               	incf	getKeypress@secondRead^0,w,c
  1025   00218E  B4D8               	btfsc	status,2,c
  1026   002190  EFCC  F010         	goto	u11
  1027   002194  EFCE  F010         	goto	u10
  1028   002198                     u11:
  1029   002198  EFDA  F010         	goto	l863
  1030   00219C                     u10:
  1031   00219C  50CB               	movf	203,w,c	;volatile
  1032   00219E  1802               	xorwf	getKeypress@secondRead^0,w,c
  1033   0021A0  A4D8               	btfss	status,2,c
  1034   0021A2  EFD5  F010         	goto	u21
  1035   0021A6  EFD7  F010         	goto	u20
  1036   0021AA                     u21:
  1037   0021AA  EFDA  F010         	goto	l863
  1038   0021AE                     u20:
  1039   0021AE                     
  1040                           ;newmain.c: 111:         return key;
  1041   0021AE  5019               	movf	_key^0,w,c
  1042   0021B0  EFDB  F010         	goto	l56
  1043   0021B4                     l863:
  1044                           
  1045                           ;newmain.c: 112:     return 0xFF;
  1046   0021B4  0EFF               	movlw	255
  1047   0021B6                     l56:
  1048   0021B6  0012               	return		;funcret
  1049   0021B8                     __end_of_getKeypress:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _evaluate *****************
  1053 ;; Defined at:
  1054 ;;		line 167 in file "newmain.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  input_X         2    8[COMRAM] int 
  1057 ;;  input_Y         2   10[COMRAM] int 
  1058 ;;  Operation       2   12[COMRAM] int 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  result          1   16[COMRAM] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      unsigned char 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1070 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1073 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1074 ;;Total ram usage:        9 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 1
  1077 ;; This function calls:
  1078 ;;		___awdiv
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text5
  1085   002340                     __ptext5:
  1086                           	callstack 0
  1087   002340                     _evaluate:
  1088                           	callstack 29
  1089   002340                     
  1090                           ;newmain.c: 170:     switch (Operation)
  1091   002340  EFC5  F011         	goto	l1093
  1092   002344                     l1083:
  1093                           
  1094                           ;newmain.c: 173:                 result = input_X + input_Y;
  1095   002344  5009               	movf	evaluate@input_X^0,w,c
  1096   002346  240B               	addwf	evaluate@input_Y^0,w,c
  1097   002348  6E11               	movwf	evaluate@result^0,c
  1098                           
  1099                           ;newmain.c: 174:                 break;
  1100   00234A  EFE3  F011         	goto	l1095
  1101   00234E                     l1085:
  1102                           
  1103                           ;newmain.c: 176:                 result = input_X - input_Y;
  1104   00234E  500B               	movf	evaluate@input_Y^0,w,c
  1105   002350  5C09               	subwf	evaluate@input_X^0,w,c
  1106   002352  6E11               	movwf	evaluate@result^0,c
  1107                           
  1108                           ;newmain.c: 177:                 break;
  1109   002354  EFE3  F011         	goto	l1095
  1110   002358                     l1087:
  1111                           
  1112                           ;newmain.c: 179:                 result = input_X * input_Y;
  1113   002358  5009               	movf	evaluate@input_X^0,w,c
  1114   00235A  020B               	mulwf	evaluate@input_Y^0,c
  1115   00235C  006F FFCC  F011    	movff	prodl,evaluate@result
  1116                           
  1117                           ;newmain.c: 180:                 break;
  1118   002362  EFE3  F011         	goto	l1095
  1119   002366                     l1089:
  1120                           
  1121                           ;newmain.c: 182:                 result = input_X / input_Y;
  1122   002366  C009  F001         	movff	evaluate@input_X,___awdiv@dividend
  1123   00236A  C00A  F002         	movff	evaluate@input_X+1,___awdiv@dividend+1
  1124   00236E  C00B  F003         	movff	evaluate@input_Y,___awdiv@divisor
  1125   002372  C00C  F004         	movff	evaluate@input_Y+1,___awdiv@divisor+1
  1126   002376  EC3E  F011         	call	___awdiv	;wreg free
  1127   00237A  5001               	movf	?___awdiv^0,w,c
  1128   00237C  6E11               	movwf	evaluate@result^0,c
  1129                           
  1130                           ;newmain.c: 183:                 break;
  1131   00237E  EFE3  F011         	goto	l1095
  1132   002382                     l1091:
  1133                           
  1134                           ;newmain.c: 185:                 result = 0;
  1135   002382  0E00               	movlw	0
  1136   002384  6E11               	movwf	evaluate@result^0,c
  1137                           
  1138                           ;newmain.c: 186:     }
  1139   002386  EFE3  F011         	goto	l1095
  1140   00238A                     l1093:
  1141   00238A  C00D  F00F         	movff	evaluate@Operation,??_evaluate
  1142   00238E  C00E  F010         	movff	evaluate@Operation+1,??_evaluate+1
  1143                           
  1144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1145                           ; Switch size 1, requested type "simple"
  1146                           ; Number of cases is 1, Range of values is 0 to 0
  1147                           ; switch strategies available:
  1148                           ; Name         Instructions Cycles
  1149                           ; simple_byte            4     3 (average)
  1150                           ;	Chosen strategy is simple_byte
  1151   002392  5010               	movf	(??_evaluate+1)^0,w,c
  1152   002394  0A00               	xorlw	0	; case 0
  1153   002396  B4D8               	btfsc	status,2,c
  1154   002398  EFD0  F011         	goto	l1147
  1155   00239C  EFC1  F011         	goto	l1091
  1156   0023A0                     l1147:
  1157                           
  1158                           ; Switch size 1, requested type "simple"
  1159                           ; Number of cases is 4, Range of values is 10 to 13
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte           13     7 (average)
  1163                           ;	Chosen strategy is simple_byte
  1164   0023A0  500F               	movf	??_evaluate^0,w,c
  1165   0023A2  0A0A               	xorlw	10	; case 10
  1166   0023A4  B4D8               	btfsc	status,2,c
  1167   0023A6  EFA2  F011         	goto	l1083
  1168   0023AA  0A01               	xorlw	1	; case 11
  1169   0023AC  B4D8               	btfsc	status,2,c
  1170   0023AE  EFA7  F011         	goto	l1085
  1171   0023B2  0A07               	xorlw	7	; case 12
  1172   0023B4  B4D8               	btfsc	status,2,c
  1173   0023B6  EFAC  F011         	goto	l1087
  1174   0023BA  0A01               	xorlw	1	; case 13
  1175   0023BC  B4D8               	btfsc	status,2,c
  1176   0023BE  EFB3  F011         	goto	l1089
  1177   0023C2  EFC1  F011         	goto	l1091
  1178   0023C6                     l1095:
  1179                           
  1180                           ;newmain.c: 187:     return result;
  1181   0023C6  5011               	movf	evaluate@result^0,w,c
  1182   0023C8  0012               	return		;funcret
  1183   0023CA                     __end_of_evaluate:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function ___awdiv *****************
  1187 ;; Defined at:
  1188 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  dividend        2    0[COMRAM] int 
  1191 ;;  divisor         2    2[COMRAM] int 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  quotient        2    6[COMRAM] int 
  1194 ;;  sign            1    5[COMRAM] unsigned char 
  1195 ;;  counter         1    4[COMRAM] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  2    0[COMRAM] int 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1206 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1208 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1209 ;;Total ram usage:        8 bytes
  1210 ;; Hardware stack levels used: 1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_evaluate
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text6
  1219   00227C                     __ptext6:
  1220                           	callstack 0
  1221   00227C                     ___awdiv:
  1222                           	callstack 29
  1223   00227C  0E00               	movlw	0
  1224   00227E  6E06               	movwf	___awdiv@sign^0,c
  1225   002280  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1226   002282  EF47  F011         	goto	u170
  1227   002286  EF45  F011         	goto	u171
  1228   00228A                     u171:
  1229   00228A  EF4D  F011         	goto	l1045
  1230   00228E                     u170:
  1231   00228E  6C03               	negf	___awdiv@divisor^0,c
  1232   002290  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1233   002292  B0D8               	btfsc	status,0,c
  1234   002294  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1235   002296  0E01               	movlw	1
  1236   002298  6E06               	movwf	___awdiv@sign^0,c
  1237   00229A                     l1045:
  1238   00229A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1239   00229C  EF54  F011         	goto	u180
  1240   0022A0  EF52  F011         	goto	u181
  1241   0022A4                     u181:
  1242   0022A4  EF5A  F011         	goto	l1051
  1243   0022A8                     u180:
  1244   0022A8  6C01               	negf	___awdiv@dividend^0,c
  1245   0022AA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1246   0022AC  B0D8               	btfsc	status,0,c
  1247   0022AE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1248   0022B0  0E01               	movlw	1
  1249   0022B2  1A06               	xorwf	___awdiv@sign^0,f,c
  1250   0022B4                     l1051:
  1251   0022B4  0E00               	movlw	0
  1252   0022B6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1253   0022B8  0E00               	movlw	0
  1254   0022BA  6E07               	movwf	___awdiv@quotient^0,c
  1255   0022BC  5003               	movf	___awdiv@divisor^0,w,c
  1256   0022BE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1257   0022C0  B4D8               	btfsc	status,2,c
  1258   0022C2  EF65  F011         	goto	u191
  1259   0022C6  EF67  F011         	goto	u190
  1260   0022CA                     u191:
  1261   0022CA  EF8F  F011         	goto	l1073
  1262   0022CE                     u190:
  1263   0022CE  0E01               	movlw	1
  1264   0022D0  6E05               	movwf	___awdiv@counter^0,c
  1265   0022D2  EF6F  F011         	goto	l1059
  1266   0022D6                     l1057:
  1267   0022D6  90D8               	bcf	status,0,c
  1268   0022D8  3603               	rlcf	___awdiv@divisor^0,f,c
  1269   0022DA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1270   0022DC  2A05               	incf	___awdiv@counter^0,f,c
  1271   0022DE                     l1059:
  1272   0022DE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1273   0022E0  EF74  F011         	goto	u201
  1274   0022E4  EF76  F011         	goto	u200
  1275   0022E8                     u201:
  1276   0022E8  EF6B  F011         	goto	l1057
  1277   0022EC                     u200:
  1278   0022EC                     l1061:
  1279   0022EC  90D8               	bcf	status,0,c
  1280   0022EE  3607               	rlcf	___awdiv@quotient^0,f,c
  1281   0022F0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1282   0022F2  5003               	movf	___awdiv@divisor^0,w,c
  1283   0022F4  5C01               	subwf	___awdiv@dividend^0,w,c
  1284   0022F6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1285   0022F8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1286   0022FA  A0D8               	btfss	status,0,c
  1287   0022FC  EF82  F011         	goto	u211
  1288   002300  EF84  F011         	goto	u210
  1289   002304                     u211:
  1290   002304  EF89  F011         	goto	l1069
  1291   002308                     u210:
  1292   002308  5003               	movf	___awdiv@divisor^0,w,c
  1293   00230A  5E01               	subwf	___awdiv@dividend^0,f,c
  1294   00230C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1295   00230E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1296   002310  8007               	bsf	___awdiv@quotient^0,0,c
  1297   002312                     l1069:
  1298   002312  90D8               	bcf	status,0,c
  1299   002314  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1300   002316  3203               	rrcf	___awdiv@divisor^0,f,c
  1301   002318  2E05               	decfsz	___awdiv@counter^0,f,c
  1302   00231A  EF76  F011         	goto	l1061
  1303   00231E                     l1073:
  1304   00231E  5006               	movf	___awdiv@sign^0,w,c
  1305   002320  B4D8               	btfsc	status,2,c
  1306   002322  EF95  F011         	goto	u221
  1307   002326  EF97  F011         	goto	u220
  1308   00232A                     u221:
  1309   00232A  EF9B  F011         	goto	l1077
  1310   00232E                     u220:
  1311   00232E  6C07               	negf	___awdiv@quotient^0,c
  1312   002330  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1313   002332  B0D8               	btfsc	status,0,c
  1314   002334  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1315   002336                     l1077:
  1316   002336  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1317   00233A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1318   00233E  0012               	return		;funcret
  1319   002340                     __end_of___awdiv:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _display *****************
  1323 ;; Defined at:
  1324 ;;		line 190 in file "newmain.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  Result          1    wreg     unsigned char 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  Result          1    0[COMRAM] unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1342 ;;Total ram usage:        1 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text7
  1352   0024F8                     __ptext7:
  1353                           	callstack 0
  1354   0024F8                     _display:
  1355                           	callstack 30
  1356                           
  1357                           ;incstack = 0
  1358                           ;display@Result stored from wreg
  1359   0024F8  6E01               	movwf	display@Result^0,c
  1360   0024FA                     
  1361                           ;newmain.c: 190: void display(unsigned char Result);newmain.c: 191: {;newmain.c: 192:   
      +                            PORTD = Result;
  1362   0024FA  0060  F007  FFCD   	movff	display@Result,16333	;volatile
  1363   002500  0012               	return		;funcret
  1364   002502                     __end_of_display:
  1365                           	callstack 0
  1366   000000                     ___AbsoluteFunctionAt0xF	set	15
  1367                           
  1368                           	psect	smallconst
  1369   002000                     __psmallconst:
  1370                           	callstack 0
  1371   002000  00                 	db	0
  1372   002001  00                 	db	0	; dummy byte at the end
  1373   000000                     
  1374                           	psect	rparam
  1375   000000                     tosu	equ	0x3FFF
  1376                           tosh	equ	0x3FFE
  1377                           tosl	equ	0x3FFD
  1378                           stkptr	equ	0x3FFC
  1379                           pclatu	equ	0x3FFB
  1380                           pclath	equ	0x3FFA
  1381                           pcl	equ	0x3FF9
  1382                           tblptru	equ	0x3FF8
  1383                           tblptrh	equ	0x3FF7
  1384                           tblptrl	equ	0x3FF6
  1385                           tablat	equ	0x3FF5
  1386                           prodh	equ	0x3FF4
  1387                           prodl	equ	0x3FF3
  1388                           indf0	equ	0x3FEF
  1389                           postinc0	equ	0x3FEE
  1390                           postdec0	equ	0x3FED
  1391                           preinc0	equ	0x3FEC
  1392                           plusw0	equ	0x3FEB
  1393                           fsr0h	equ	0x3FEA
  1394                           fsr0l	equ	0x3FE9
  1395                           wreg	equ	0x3FE8
  1396                           indf1	equ	0x3FE7
  1397                           postinc1	equ	0x3FE6
  1398                           postdec1	equ	0x3FE5
  1399                           preinc1	equ	0x3FE4
  1400                           plusw1	equ	0x3FE3
  1401                           fsr1h	equ	0x3FE2
  1402                           fsr1l	equ	0x3FE1
  1403                           bsr	equ	0x3FE0
  1404                           indf2	equ	0x3FDF
  1405                           postinc2	equ	0x3FDE
  1406                           postdec2	equ	0x3FDD
  1407                           preinc2	equ	0x3FDC
  1408                           plusw2	equ	0x3FDB
  1409                           fsr2h	equ	0x3FDA
  1410                           fsr2l	equ	0x3FD9
  1411                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_evaluate
    _getInputY->_getKeypress
    _getInputX->_getKeypress
    _getInputOperation->_getKeypress
    _evaluate->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1011
                                             17 COMRAM     3     3      0
                            _display
                           _evaluate
                  _getInputOperation
                          _getInputX
                          _getInputY
 ---------------------------------------------------------------------------------
 (1) _getInputY                                            1     1      0      30
                                              2 COMRAM     1     1      0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getInputX                                            1     1      0      30
                                              2 COMRAM     1     1      0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (1) _getInputOperation                                    1     1      0      30
                                              2 COMRAM     1     1      0
                        _getKeypress
 ---------------------------------------------------------------------------------
 (2) _getKeypress                                          3     3      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _evaluate                                             9     3      6     906
                                              8 COMRAM     9     3      6
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _display                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _evaluate
     ___awdiv
   _getInputOperation
     _getKeypress
   _getInputX
     _getKeypress
   _getInputY
     _getKeypress

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      78        0.0%
BITBIGSFRlllhh     54A      0       0      75        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      250      0       0      77        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      19       1       26.3%
BITBIGSFRhh         32      0       0      69        0.0%
BITBIGSFRlllhl      1F      0       0      76        0.0%
BITBIGSFRllhh        5      0       0      73        0.0%
BITBIGSFRlhh         5      0       0      71        0.0%
BITBIGSFRllhl        1      0       0      74        0.0%
BITBIGSFRlhl         1      0       0      72        0.0%
BITBIGSFRhl          1      0       0      70        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      16        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 08 17:37:24 2024

                       l56 21B6                         l80 24E8                         l65 24A4  
                       l90 23C8                         l74 2436                         l93 2500  
                       u10 219C                         u11 2198                         u20 21AE  
                       u21 21AA                         u90 2458                         u91 2454  
             ___awdiv@sign 0006                        l341 233E                        l801 203C  
                      l811 2088                        l803 2062                        l821 20C2  
                      l813 2090                        l805 2066                        l823 20D4  
                      l807 2078                        l911 2438                        l841 2138  
                      l825 20DC                        l833 20F4                        l809 2080  
                      l817 2098                        l921 2466                        l913 243C  
                      l843 2140                        l851 2176                        l827 20E4  
                      l835 211A                        l819 20BE                        l931 249A  
                      l923 2470                        l915 2442                        l853 2186  
                      l845 2148                        l837 211E                        l829 20EC  
                      l925 2476                        l917 2448                        l941 23EA  
                      l933 23CA                        l863 21B4                        l855 218C  
                      l839 2130                        l791 201C                        l783 2002  
                      l927 247C                        l919 2458                        l951 241E  
                      l943 23F8                        l935 23CE                        l857 219C  
                      l849 2150                        l793 2024                        l785 2004  
                      l961 24B6                        l929 248C                        l953 242C  
                      l945 2402                        l937 23D4                        l859 21AE  
                      l795 202C                        l787 2008                        l963 24C6  
                      l955 24A6                        l947 2408                        l939 23DA  
                      l797 2034                        l789 2016                        l965 24D6  
                      l957 24AA                        l949 240E                        l991 24FA  
                      l967 24E4                        l959 24B0                        u100 248C  
                      u101 2488                        u110 23EA                        u111 23E6  
                      u200 22EC                        u120 241E                        u201 22E8  
                      u121 241A                        u210 2308                        u130 24C6  
                      u211 2304                        u131 24C2                        u220 232E  
                      u140 24D6                        u221 232A                        u141 24D2  
                      u230 2222                        u231 221E                        u240 2274  
                      u241 2270                        u170 228E                        u171 228A  
                      u307 2492                        u180 22A8                        u181 22A4  
                      u317 24DC                        u190 22CE                        u191 22CA  
                      u327 200E                        u337 206C                        u257 21F8  
                      u347 20C8                        u267 224A                        u357 2124  
                      u277 23F0                        u367 217C                        u287 2424  
                      u297 245E                        _key 0019                        wreg 3FE8  
                     l1111 21E6                       l1103 21B8                       l1041 228E  
                     l1121 223A                       l1113 21EA                       l1105 21DA  
                     l1051 22B4                       l1043 2296                       l1123 2244  
                     l1115 21F2                       l1107 21DE                       l1061 22EC  
                     l1053 22BC                       l1045 229A                       l1037 227C  
                     l1125 2252                       l1117 2200                       l1109 21E2  
                     l1071 2318                       l1063 22F2                       l1055 22CE  
                     l1047 22A8                       l1039 2280                       l1119 2222  
                     l1065 2308                       l1057 22D6                       l1073 231E  
                     l1049 22B0                       l1081 2340                       l1075 232E  
                     l1067 2310                       l1059 22DE                       l1147 23A0  
                     l1091 2382                       l1083 2344                       l1077 2336  
                     l1069 2312                       l1085 234E                       l1093 238A  
                     l1087 2358                       l1095 23C6                       l1089 2366  
                     _LATB 3FBB                       _LATD 3FBD                       _main 21B8  
                     prodl 3FF3                       start FFFC               ___param_bank 0000  
                    ?_main 0001            __end_of___awdiv 2340            ___awdiv@divisor 0003  
          ___awdiv@counter 0005                      _PORTB 3FCB                      _PORTD 3FCD  
                    _TRISB 3FC3                      _TRISD 3FC5            __end_of_display 2502  
                    status 3FD8            __initialization 24EA               __end_of_main 227C  
                   ??_main 0012              __activetblptr 0003           ___awdiv@dividend 0001  
                   _ANSELB 3A50                     _ANSELD 3A70              display@Result 0001  
                   _Result 0015                  ??___awdiv 0005           __end_of_evaluate 23CA  
         ___awdiv@quotient 0007                     isa$std 0001                  ??_display 0001  
             __mediumconst 0000             evaluate@result 0011                 __accesstop 0060  
  __end_of__initialization 24F2              ___rparam_used 0001             __pcstackCOMRAM 0001  
               __pnvCOMRAM 0019                  ?_evaluate 0009          __end_of_getInputX 24A6  
        __end_of_getInputY 2438                    __Hparam 0000                    __Lparam 0000  
                  ___awdiv 227C               __psmallconst 2000                    __pcinit 24EA  
                  __ramtop 2000                    __ptext0 21B8                    __ptext1 23CA  
                  __ptext2 2438                    __ptext3 24A6                    __ptext4 2002  
                  __ptext5 2340                    __ptext6 227C                    __ptext7 24F8  
                  _display 24F8                    _input_X 0018                    _input_Y 0017  
        _getInputOperation 24A6         ?_getInputOperation 0001       end_of_initialization 24F2  
               ??_evaluate 000F        ??_getInputOperation 0003              ??_getKeypress 0001  
__end_of_getInputOperation 24EA            evaluate@input_X 0009            evaluate@input_Y 000B  
      start_initialization 24EA        __end_of_getKeypress 21B8                  _Operation 0016  
    getKeypress@secondRead 0002                __pbssCOMRAM 0015                   ?___awdiv 0001  
                _getInputX 2438                  _getInputY 23CA                   ?_display 0001  
              __smallconst 2000                _getKeypress 2002    ___AbsoluteFunctionAt0xF 000F  
               ?_getInputX 0001                 ?_getInputY 0001                   __Hrparam 0000  
                 __Lrparam 0000                   _evaluate 2340          evaluate@Operation 000D  
                 isa$xinst 0000                ??_getInputX 0003                ??_getInputY 0003  
             ?_getKeypress 0001  
