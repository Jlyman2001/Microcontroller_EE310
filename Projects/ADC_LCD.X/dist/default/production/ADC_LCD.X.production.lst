

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 29 11:42:21 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F47K42 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _TRISB	set	16323
    53   000000                     _TRISD	set	16325
    54   000000                     _PORTB	set	16331
    55   000000                     _PORTDbits	set	16333
    56                           
    57                           ; #config settings
    58                           
    59                           	psect	cinit
    60   002124                     __pcinit:
    61                           	callstack 0
    62   002124                     start_initialization:
    63                           	callstack 0
    64   002124                     __initialization:
    65                           	callstack 0
    66   002124                     end_of_initialization:
    67                           	callstack 0
    68   002124                     __end_of__initialization:
    69                           	callstack 0
    70   002124  0E00               	movlw	low (__Lmediumconst shr (0+16))
    71   002126  6EF8               	movwf	tblptru,c
    72   002128  0100               	movlb	0
    73   00212A  EF84  F010         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	cstackCOMRAM
    76   000001                     __pcstackCOMRAM:
    77                           	callstack 0
    78   000001                     MSdelay@val:
    79                           	callstack 0
    80                           
    81                           ; 2 bytes @ 0x0
    82   000001                     	ds	2
    83   000003                     MSdelay@i:
    84                           	callstack 0
    85                           
    86                           ; 2 bytes @ 0x2
    87   000003                     	ds	2
    88   000005                     MSdelay@j:
    89                           	callstack 0
    90                           
    91                           ; 2 bytes @ 0x4
    92   000005                     	ds	2
    93   000007                     LCD_Command@cmd:
    94                           	callstack 0
    95   000007                     LCD_Char@dat:
    96                           	callstack 0
    97                           
    98                           ; 1 bytes @ 0x6
    99   000007                     	ds	1
   100   000008                     LCD_String@msg:
   101                           	callstack 0
   102                           
   103                           ; 3 bytes @ 0x7
   104   000008                     	ds	3
   105   00000B                     
   106                           ; 1 bytes @ 0xA
   107 ;;
   108 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   109 ;;
   110 ;; *************** function _main *****************
   111 ;; Defined at:
   112 ;;		line 87 in file "main.c"
   113 ;; Parameters:    Size  Location     Type
   114 ;;		None
   115 ;; Auto vars:     Size  Location     Type
   116 ;;		None
   117 ;; Return value:  Size  Location     Type
   118 ;;                  1    wreg      void 
   119 ;; Registers used:
   120 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   121 ;; Tracked objects:
   122 ;;		On entry : 0/0
   123 ;;		On exit  : 0/0
   124 ;;		Unchanged: 0/0
   125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   130 ;;Total ram usage:        0 bytes
   131 ;; Hardware stack levels required when called: 3
   132 ;; This function calls:
   133 ;;		_LCD_Init
   134 ;;		_LCD_String
   135 ;; This function is called by:
   136 ;;		Startup code after reset
   137 ;; This function uses a non-reentrant model
   138 ;;
   139                           
   140                           	psect	text0
   141   002108                     __ptext0:
   142                           	callstack 0
   143   002108                     _main:
   144                           	callstack 28
   145   002108                     
   146                           ;main.c: 90:     LCD_Init();
   147   002108  EC4F  F010         	call	_LCD_Init	;wreg free
   148   00210C                     
   149                           ;main.c: 91:     LCD_String('abc');
   150   00210C  0E63               	movlw	99
   151   00210E  6E08               	movwf	LCD_String@msg^0,c
   152   002110  0E62               	movlw	98
   153   002112  6E09               	movwf	(LCD_String@msg+1)^0,c
   154   002114  0E00               	movlw	0
   155   002116  6E0A               	movwf	(LCD_String@msg+2)^0,c
   156   002118  EC01  F010         	call	_LCD_String	;wreg free
   157   00211C                     l23:
   158   00211C  EF8E  F010         	goto	l23
   159   002120  EFFE  F0FF         	goto	start
   160   002124                     __end_of_main:
   161                           	callstack 0
   162                           
   163 ;; *************** function _LCD_String *****************
   164 ;; Defined at:
   165 ;;		line 138 in file "main.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;  msg             3    7[COMRAM] PTR const unsigned char 
   168 ;;		 -> ROM(131071), 
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   183 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   184 ;;Total ram usage:        3 bytes
   185 ;; Hardware stack levels used: 1
   186 ;; Hardware stack levels required when called: 2
   187 ;; This function calls:
   188 ;;		_LCD_Char
   189 ;; This function is called by:
   190 ;;		_main
   191 ;;		_LCD_String_xy
   192 ;; This function uses a non-reentrant model
   193 ;;
   194                           
   195                           	psect	text1
   196   002002                     __ptext1:
   197                           	callstack 0
   198   002002                     _LCD_String:
   199                           	callstack 28
   200   002002                     
   201                           ;main.c: 138: void LCD_String(const char *msg);main.c: 139: {;main.c: 140:     while((*m
      +                          sg)!=0)
   202   002002  EF16  F010         	goto	l859
   203   002006                     l855:
   204                           
   205                           ;main.c: 141:     {;main.c: 142:       LCD_Char(*msg);
   206   002006  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
   207   00200C  0060  F027  FFF7   	movff	LCD_String@msg+1,tblptrh
   208   002012  0060  F02B  FFF8   	movff	LCD_String@msg+2,tblptru
   209   002018  0008               	tblrd		*
   210   00201A  50F5               	movf	tablat,w,c
   211   00201C  EC66  F010         	call	_LCD_Char
   212   002020                     
   213                           ;main.c: 143:       msg++;
   214   002020  0E01               	movlw	1
   215   002022  2608               	addwf	LCD_String@msg^0,f,c
   216   002024  0E00               	movlw	0
   217   002026  2209               	addwfc	(LCD_String@msg+1)^0,f,c
   218   002028  0E00               	movlw	0
   219   00202A  220A               	addwfc	(LCD_String@msg+2)^0,f,c
   220   00202C                     l859:
   221                           
   222                           ;main.c: 140:     while((*msg)!=0)
   223   00202C  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
   224   002032  0060  F027  FFF7   	movff	LCD_String@msg+1,tblptrh
   225   002038  0060  F02B  FFF8   	movff	LCD_String@msg+2,tblptru
   226   00203E  0008               	tblrd		*
   227   002040  50F5               	movf	tablat,w,c
   228   002042  0900               	iorlw	0
   229   002044  A4D8               	btfss	status,2,c
   230   002046  EF27  F010         	goto	u71
   231   00204A  EF29  F010         	goto	u70
   232   00204E                     u71:
   233   00204E  EF03  F010         	goto	l855
   234   002052                     u70:
   235   002052  0012               	return		;funcret
   236   002054                     __end_of_LCD_String:
   237                           	callstack 0
   238                           
   239 ;; *************** function _LCD_Char *****************
   240 ;; Defined at:
   241 ;;		line 127 in file "main.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;  dat             1    wreg     unsigned char 
   244 ;; Auto vars:     Size  Location     Type
   245 ;;  dat             1    6[COMRAM] unsigned char 
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   258 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   259 ;;Total ram usage:        1 bytes
   260 ;; Hardware stack levels used: 1
   261 ;; Hardware stack levels required when called: 1
   262 ;; This function calls:
   263 ;;		_MSdelay
   264 ;; This function is called by:
   265 ;;		_LCD_String
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text2
   270   0020CC                     __ptext2:
   271                           	callstack 0
   272   0020CC                     _LCD_Char:
   273                           	callstack 28
   274                           
   275                           ;incstack = 0
   276                           ;LCD_Char@dat stored from wreg
   277   0020CC  6E07               	movwf	LCD_Char@dat^0,c
   278   0020CE                     
   279                           ;main.c: 127: void LCD_Char(char dat);main.c: 128: {;main.c: 129:     PORTB= dat;
   280   0020CE  0060  F01F  FFCB   	movff	LCD_Char@dat,16331	;volatile
   281   0020D4                     
   282                           ;main.c: 130:     PORTDbits.RD0 = 1;
   283   0020D4  80CD               	bsf	205,0,c	;volatile
   284   0020D6                     
   285                           ;main.c: 131:     PORTDbits.RD1=1;
   286   0020D6  82CD               	bsf	205,1,c	;volatile
   287   0020D8                     
   288                           ;main.c: 132:     __nop();
   289   0020D8  0000               	nop	
   290   0020DA                     
   291                           ;main.c: 133:     PORTDbits.RD1=0;
   292   0020DA  92CD               	bcf	205,1,c	;volatile
   293   0020DC                     
   294                           ;main.c: 134:     MSdelay(1);
   295   0020DC  0E00               	movlw	0
   296   0020DE  6E02               	movwf	(MSdelay@val+1)^0,c
   297   0020E0  0E01               	movlw	1
   298   0020E2  6E01               	movwf	MSdelay@val^0,c
   299   0020E4  EC2A  F010         	call	_MSdelay	;wreg free
   300   0020E8  0012               	return		;funcret
   301   0020EA                     __end_of_LCD_Char:
   302                           	callstack 0
   303                           
   304 ;; *************** function _LCD_Init *****************
   305 ;; Defined at:
   306 ;;		line 101 in file "main.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   324 ;;Total ram usage:        0 bytes
   325 ;; Hardware stack levels used: 1
   326 ;; Hardware stack levels required when called: 2
   327 ;; This function calls:
   328 ;;		_LCD_Command
   329 ;;		_MSdelay
   330 ;; This function is called by:
   331 ;;		_main
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text3
   336   00209E                     __ptext3:
   337                           	callstack 0
   338   00209E                     _LCD_Init:
   339                           	callstack 28
   340   00209E                     
   341                           ;main.c: 103:     MSdelay(15);
   342   00209E  0E00               	movlw	0
   343   0020A0  6E02               	movwf	(MSdelay@val+1)^0,c
   344   0020A2  0E0F               	movlw	15
   345   0020A4  6E01               	movwf	MSdelay@val^0,c
   346   0020A6  EC2A  F010         	call	_MSdelay	;wreg free
   347   0020AA                     
   348                           ;main.c: 104:     TRISB = 0x00;
   349   0020AA  0E00               	movlw	0
   350   0020AC  6EC3               	movwf	195,c	;volatile
   351   0020AE                     
   352                           ;main.c: 105:     TRISD = 0x00;
   353   0020AE  0E00               	movlw	0
   354   0020B0  6EC5               	movwf	197,c	;volatile
   355                           
   356                           ;main.c: 106:     LCD_Command(0x01);
   357   0020B2  0E01               	movlw	1
   358   0020B4  EC75  F010         	call	_LCD_Command
   359                           
   360                           ;main.c: 107:     LCD_Command(0b00111000);
   361   0020B8  0E38               	movlw	56
   362   0020BA  EC75  F010         	call	_LCD_Command
   363                           
   364                           ;main.c: 108:     LCD_Command(0b00001100);
   365   0020BE  0E0C               	movlw	12
   366   0020C0  EC75  F010         	call	_LCD_Command
   367                           
   368                           ;main.c: 109:     LCD_Command(0b00000111);
   369   0020C4  0E07               	movlw	7
   370   0020C6  EC75  F010         	call	_LCD_Command
   371   0020CA  0012               	return		;funcret
   372   0020CC                     __end_of_LCD_Init:
   373                           	callstack 0
   374                           
   375 ;; *************** function _LCD_Command *****************
   376 ;; Defined at:
   377 ;;		line 117 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;  cmd             1    wreg     unsigned char 
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  cmd             1    6[COMRAM] unsigned char 
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   394 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   395 ;;Total ram usage:        1 bytes
   396 ;; Hardware stack levels used: 1
   397 ;; Hardware stack levels required when called: 1
   398 ;; This function calls:
   399 ;;		_MSdelay
   400 ;; This function is called by:
   401 ;;		_LCD_Init
   402 ;;		_LCD_Clear
   403 ;;		_LCD_String_xy
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           	psect	text4
   408   0020EA                     __ptext4:
   409                           	callstack 0
   410   0020EA                     _LCD_Command:
   411                           	callstack 28
   412                           
   413                           ;incstack = 0
   414                           ;LCD_Command@cmd stored from wreg
   415   0020EA  6E07               	movwf	LCD_Command@cmd^0,c
   416   0020EC                     
   417                           ;main.c: 117: void LCD_Command(char cmd );main.c: 118: {;main.c: 119:     PORTB= cmd;
   418   0020EC  0060  F01F  FFCB   	movff	LCD_Command@cmd,16331	;volatile
   419   0020F2                     
   420                           ;main.c: 120:     PORTDbits.RD0 = 0;
   421   0020F2  90CD               	bcf	205,0,c	;volatile
   422   0020F4                     
   423                           ;main.c: 121:     PORTDbits.RD1 = 1;
   424   0020F4  82CD               	bsf	205,1,c	;volatile
   425   0020F6                     
   426                           ;main.c: 122:     __nop();
   427   0020F6  0000               	nop	
   428   0020F8                     
   429                           ;main.c: 123:     PORTDbits.RD1 = 0;
   430   0020F8  92CD               	bcf	205,1,c	;volatile
   431   0020FA                     
   432                           ;main.c: 124:     MSdelay(3);
   433   0020FA  0E00               	movlw	0
   434   0020FC  6E02               	movwf	(MSdelay@val+1)^0,c
   435   0020FE  0E03               	movlw	3
   436   002100  6E01               	movwf	MSdelay@val^0,c
   437   002102  EC2A  F010         	call	_MSdelay	;wreg free
   438   002106  0012               	return		;funcret
   439   002108                     __end_of_LCD_Command:
   440                           	callstack 0
   441                           
   442 ;; *************** function _MSdelay *****************
   443 ;; Defined at:
   444 ;;		line 164 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;  val             2    0[COMRAM] unsigned int 
   447 ;; Auto vars:     Size  Location     Type
   448 ;;  j               2    4[COMRAM] unsigned int 
   449 ;;  i               2    2[COMRAM] unsigned int 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   460 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   462 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   463 ;;Total ram usage:        6 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_LCD_Init
   469 ;;		_LCD_Command
   470 ;;		_LCD_Char
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text5
   475   002054                     __ptext5:
   476                           	callstack 0
   477   002054                     _MSdelay:
   478                           	callstack 28
   479   002054                     
   480                           ;main.c: 164: void MSdelay(unsigned int val);main.c: 165: {;main.c: 166:      unsigned i
      +                          nt i,j;;main.c: 167:         for(i=0;i<val;i++)
   481   002054  0E00               	movlw	0
   482   002056  6E04               	movwf	(MSdelay@i+1)^0,c
   483   002058  0E00               	movlw	0
   484   00205A  6E03               	movwf	MSdelay@i^0,c
   485   00205C  EF43  F010         	goto	l821
   486   002060                     l809:
   487                           
   488                           ;main.c: 168:             for(j=0;j<165;j++);
   489   002060  0E00               	movlw	0
   490   002062  6E06               	movwf	(MSdelay@j+1)^0,c
   491   002064  0E00               	movlw	0
   492   002066  6E05               	movwf	MSdelay@j^0,c
   493   002068                     l815:
   494   002068  4A05               	infsnz	MSdelay@j^0,f,c
   495   00206A  2A06               	incf	(MSdelay@j+1)^0,f,c
   496   00206C  5006               	movf	(MSdelay@j+1)^0,w,c
   497   00206E  E109               	bnz	u50
   498   002070  0EA5               	movlw	165
   499   002072  5C05               	subwf	MSdelay@j^0,w,c
   500   002074  A0D8               	btfss	status,0,c
   501   002076  EF3F  F010         	goto	u51
   502   00207A  EF41  F010         	goto	u50
   503   00207E                     u51:
   504   00207E  EF34  F010         	goto	l815
   505   002082                     u50:
   506   002082  4A03               	infsnz	MSdelay@i^0,f,c
   507   002084  2A04               	incf	(MSdelay@i+1)^0,f,c
   508   002086                     l821:
   509   002086  5001               	movf	MSdelay@val^0,w,c
   510   002088  5C03               	subwf	MSdelay@i^0,w,c
   511   00208A  5002               	movf	(MSdelay@val+1)^0,w,c
   512   00208C  5804               	subwfb	(MSdelay@i+1)^0,w,c
   513   00208E  A0D8               	btfss	status,0,c
   514   002090  EF4C  F010         	goto	u61
   515   002094  EF4E  F010         	goto	u60
   516   002098                     u61:
   517   002098  EF30  F010         	goto	l809
   518   00209C                     u60:
   519   00209C  0012               	return		;funcret
   520   00209E                     __end_of_MSdelay:
   521                           	callstack 0
   522                           
   523                           	psect	smallconst
   524   002000                     __psmallconst:
   525                           	callstack 0
   526   002000  00                 	db	0
   527   002001  00                 	db	0	; dummy byte at the end
   528   000000                     
   529                           	psect	rparam
   530   000000                     
   531                           	psect	config
   532                           
   533                           ;Config register CONFIG1L @ 0x300000
   534                           ;	External Oscillator Selection
   535                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
   536                           ;	Reset Oscillator Selection
   537                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
   538   300000                     	org	3145728
   539   300000  F8                 	db	248
   540                           
   541                           ;Config register CONFIG1H @ 0x300001
   542                           ;	Clock out Enable bit
   543                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   544                           ;	PRLOCKED One-Way Set Enable bit
   545                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
   546                           ;	Clock Switch Enable bit
   547                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   548                           ;	Fail-Safe Clock Monitor Enable bit
   549                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   550   300001                     	org	3145729
   551   300001  FF                 	db	255
   552                           
   553                           ;Config register CONFIG2L @ 0x300002
   554                           ;	MCLR Enable bit
   555                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   556                           ;	Power-up timer selection bits
   557                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   558                           ;	Multi-vector enable bit
   559                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   560                           ;	IVTLOCK bit One-way set enable bit
   561                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
   562                           ;	Low Power BOR Enable bit
   563                           ;	LPBOREN = OFF, ULPBOR disabled
   564                           ;	Brown-out Reset Enable bits
   565                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   566   300002                     	org	3145730
   567   300002  FF                 	db	255
   568                           
   569                           ;Config register CONFIG2H @ 0x300003
   570                           ;	Brown-out Reset Voltage Selection bits
   571                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
   572                           ;	ZCD Disable bit
   573                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   574                           ;	PPSLOCK bit One-Way Set Enable bit
   575                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   576                           ;	Stack Full/Underflow Reset Enable bit
   577                           ;	STVREN = ON, Stack full/underflow will cause Reset
   578                           ;	Debugger Enable bit
   579                           ;	DEBUG = OFF, Background debugger disabled
   580                           ;	Extended Instruction Set Enable bit
   581                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   582   300003                     	org	3145731
   583   300003  FF                 	db	255
   584                           
   585                           ;Config register CONFIG3L @ 0x300004
   586                           ;	WDT Period selection bits
   587                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   588                           ;	WDT operating mode
   589                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   590   300004                     	org	3145732
   591   300004  9F                 	db	159
   592                           
   593                           ;Config register CONFIG3H @ 0x300005
   594                           ;	WDT Window Select bits
   595                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   596                           ;	WDT input clock selector
   597                           ;	WDTCCS = SC, Software Control
   598   300005                     	org	3145733
   599   300005  FF                 	db	255
   600                           
   601                           ;Config register CONFIG4L @ 0x300006
   602                           ;	Boot Block Size selection bits
   603                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   604                           ;	Boot Block enable bit
   605                           ;	BBEN = OFF, Boot block disabled
   606                           ;	Storage Area Flash enable bit
   607                           ;	SAFEN = OFF, SAF disabled
   608                           ;	Application Block write protection bit
   609                           ;	WRTAPP = OFF, Application Block not write protected
   610   300006                     	org	3145734
   611   300006  FF                 	db	255
   612                           
   613                           ;Config register CONFIG4H @ 0x300007
   614                           ;	Boot Block Write Protection bit
   615                           ;	WRTB = OFF, Boot Block not write-protected
   616                           ;	Configuration Register Write Protection bit
   617                           ;	WRTC = OFF, Configuration registers not write-protected
   618                           ;	Data EEPROM Write Protection bit
   619                           ;	WRTD = OFF, Data EEPROM not write-protected
   620                           ;	SAF Write protection bit
   621                           ;	WRTSAF = OFF, SAF not Write Protected
   622                           ;	Low Voltage Programming Enable bit
   623                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   624   300007                     	org	3145735
   625   300007  FF                 	db	255
   626                           
   627                           ;Config register CONFIG5L @ 0x300008
   628                           ;	PFM and Data EEPROM Code Protection bit
   629                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   630   300008                     	org	3145736
   631   300008  FF                 	db	255
   632                           
   633                           ;Config register CONFIG5H @ 0x300009
   634                           ;	unspecified, using default values
   635   300009                     	org	3145737
   636   300009  FF                 	db	255
   637                           tosu	equ	0x3FFF
   638                           tosh	equ	0x3FFE
   639                           tosl	equ	0x3FFD
   640                           stkptr	equ	0x3FFC
   641                           pclatu	equ	0x3FFB
   642                           pclath	equ	0x3FFA
   643                           pcl	equ	0x3FF9
   644                           tblptru	equ	0x3FF8
   645                           tblptrh	equ	0x3FF7
   646                           tblptrl	equ	0x3FF6
   647                           tablat	equ	0x3FF5
   648                           prodh	equ	0x3FF4
   649                           prodl	equ	0x3FF3
   650                           indf0	equ	0x3FEF
   651                           postinc0	equ	0x3FEE
   652                           postdec0	equ	0x3FED
   653                           preinc0	equ	0x3FEC
   654                           plusw0	equ	0x3FEB
   655                           fsr0h	equ	0x3FEA
   656                           fsr0l	equ	0x3FE9
   657                           wreg	equ	0x3FE8
   658                           indf1	equ	0x3FE7
   659                           postinc1	equ	0x3FE6
   660                           postdec1	equ	0x3FE5
   661                           preinc1	equ	0x3FE4
   662                           plusw1	equ	0x3FE3
   663                           fsr1h	equ	0x3FE2
   664                           fsr1l	equ	0x3FE1
   665                           bsr	equ	0x3FE0
   666                           indf2	equ	0x3FDF
   667                           postinc2	equ	0x3FDE
   668                           postdec2	equ	0x3FDD
   669                           preinc2	equ	0x3FDC
   670                           plusw2	equ	0x3FDB
   671                           fsr2h	equ	0x3FDA
   672                           fsr2l	equ	0x3FD9
   673                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(3) Largest target is 131071
		 -> ROM(CODE[131071]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1201
                           _LCD_Init
                         _LCD_String
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           3     0      3     539
                                              7 COMRAM     3     0      3
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             1     1      0     342
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     662
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     342
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _MSdelay                                              6     4      2     320
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      A       A       1       10.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBIGSFRhhhh       32      0       0      68        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRhhl         5      0       0      70        0.0%
BITBIGSFRhl          1      0       0      71        0.0%
BITBIGSFRl         7C3      0       0      72        0.0%
ABS                  0      0       0      73        0.0%
BIGRAM            1FFF      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 29 11:42:21 2024

           ?_LCD_Command 0001                       l23 211C                       l24 211C  
                     l35 2106                       l44 2052                       l29 20CA  
                     l38 20E8                       l57 209C                       u50 2082  
                     u51 207E                       u60 209C                       u61 2098  
                     u70 2052                       u71 204E              ?_LCD_String 0008  
                    l821 2086                      l815 2068                      l807 2054  
                    l831 20F8                      l823 20EC                      l817 206C  
                    l809 2060                      l833 20FA                      l825 20F2  
                    l841 20D8                      l819 2082                      l827 20F4  
                    l851 20AE                      l843 20DA                      l835 20CE  
                    l829 20F6                      l845 20DC                      l837 20D4  
                    l853 2002                      l861 2108                      l847 209E  
                    l839 20D6                      l855 2006                      l863 210C  
                    l849 20AA                      l857 2020                      l859 202C  
            LCD_Char@dat 0007                     _main 2108                     start FFFC  
        __end_of_MSdelay 209E             ___param_bank 0000         __end_of_LCD_Char 20EA  
       __end_of_LCD_Init 20CC                    ?_main 0001                    _PORTB 3FCB  
                  _TRISB 3FC3                    _TRISD 3FC5                    tablat 3FF5  
                  status 3FD8          __initialization 2124             __end_of_main 2124  
                 ??_main 000B            __activetblptr 0002                ??_MSdelay 0003  
                 isa$std 0001             __mediumconst 0000                   tblptrh 3FF7  
                 tblptrl 3FF6                   tblptru 3FF8                ?_LCD_Char 0001  
             __accesstop 0060  __end_of__initialization 2124                ?_LCD_Init 0001  
          ___rparam_used 0001           __pcstackCOMRAM 0001             ??_LCD_String 000B  
             ??_LCD_Char 0007               ??_LCD_Init 0008       __end_of_LCD_String 2054  
                _MSdelay 2054            LCD_String@msg 0008                  __Hparam 0000  
                __Lparam 0000             __psmallconst 2000                  __pcinit 2124  
                __ramtop 2000                  __ptext0 2108                  __ptext1 2002  
                __ptext2 20CC                  __ptext3 209E                  __ptext4 20EA  
                __ptext5 2054     end_of_initialization 2124           LCD_Command@cmd 0007  
          __Lmediumconst 0000                _PORTDbits 3FCD            ??_LCD_Command 0007  
    start_initialization 2124      __end_of_LCD_Command 2108                 ?_MSdelay 0001  
            __smallconst 2000                 MSdelay@i 0003                 MSdelay@j 0005  
               _LCD_Char 20CC                 _LCD_Init 209E              _LCD_Command 20EA  
               __Hrparam 0000                 __Lrparam 0000               MSdelay@val 0001  
               isa$xinst 0000               _LCD_String 2002  
