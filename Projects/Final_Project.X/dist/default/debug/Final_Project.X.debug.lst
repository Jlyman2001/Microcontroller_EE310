

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 29 09:37:25 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=4,class=CODE,delta=1
    17                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F47K42 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     _ADPREH	set	16119
    58   000000                     _ADRESH	set	16112
    59   000000                     _ANSELAbits	set	14912
    60   000000                     _IOCBFbits	set	14935
    61   000000                     _PORTDbits	set	16333
    62   000000                     _TRISAbits	set	16322
    63   000000                     _PIE0bits	set	14736
    64   000000                     _PIR0bits	set	14752
    65   000000                     _ANSELA	set	14912
    66   000000                     _IOCAF	set	14919
    67   000000                     _ANSELB	set	14928
    68   000000                     _IOCBF	set	14935
    69   000000                     _IOCCF	set	14951
    70   000000                     _ANSELD	set	14960
    71   000000                     _IOCEF	set	14983
    72   000000                     _ADRESL	set	16111
    73   000000                     _ADPCH	set	16113
    74   000000                     _ADCON0bits	set	16120
    75   000000                     _LATA	set	16314
    76   000000                     _LATB	set	16315
    77   000000                     _TRISB	set	16323
    78   000000                     _TRISD	set	16325
    79   000000                     _PORTA	set	16330
    80   000000                     _LATD	set	16317
    81   000000                     _TRISA	set	16322
    82   000000                     _PORTBbits	set	16331
    83   000000                     _PORTD	set	16333
    84   000000                     _INTCON0bits	set	16338
    85   000000                     _ADCLK	set	16127
    86   000000                     _ADACQL	set	16115
    87   000000                     _ADPREL	set	16118
    88   000000                     _ADACQH	set	16116
    89   000000                     _IVTBASEL	set	16341
    90   000000                     _IVTBASEH	set	16342
    91   000000                     _IVTBASEU	set	16343
    92                           
    93                           ; #config settings
    94                           
    95                           	psect	cinit
    96   0042D0                     __pcinit:
    97                           	callstack 0
    98   0042D0                     start_initialization:
    99                           	callstack 0
   100   0042D0                     __initialization:
   101                           	callstack 0
   102                           
   103                           ; Clear objects allocated to COMRAM (7 bytes)
   104   0042D0  EE00  F001         	lfsr	0,__pbssCOMRAM
   105   0042D4  0E07               	movlw	7
   106   0042D6                     clear_0:
   107   0042D6  6AEE               	clrf	postinc0,c
   108   0042D8  06E8               	decf	wreg,f,c
   109   0042DA  E1FD               	bnz	clear_0
   110                           
   111                           ;
   112                           ; Setup IVTBASE
   113                           ;
   114   0042DC  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   115   0042DE  6ED5               	movwf	213,c
   116   0042E0  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   117   0042E2  6ED6               	movwf	214,c
   118   0042E4  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   119   0042E6  6ED7               	movwf	215,c
   120   0042E8                     end_of_initialization:
   121                           	callstack 0
   122   0042E8                     __end_of__initialization:
   123                           	callstack 0
   124   0042E8  0100               	movlb	0
   125   0042EA  EF59  F020         	goto	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMRAM
   128   000001                     __pbssCOMRAM:
   129                           	callstack 0
   130   000001                     _Sequence:
   131                           	callstack 0
   132   000001                     	ds	4
   133   000005                     _index:
   134                           	callstack 0
   135   000005                     	ds	1
   136   000006                     _keyPressed:
   137                           	callstack 0
   138   000006                     	ds	1
   139   000007                     _highestValue:
   140                           	callstack 0
   141   000007                     	ds	1
   142                           
   143                           	psect	cstackCOMRAM
   144   000008                     __pcstackCOMRAM:
   145                           	callstack 0
   146   000008                     playTone@duration:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x0
   150   000008                     	ds	1
   151   000009                     displayValue@value:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x1
   155   000009                     	ds	1
   156   00000A                     ??_main:
   157                           
   158                           ; 1 bytes @ 0x2
   159   00000A                     	ds	2
   160   00000C                     main@index:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x4
   164   00000C                     	ds	1
   165   00000D                     main@index_419:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x5
   169   00000D                     	ds	1
   170                           
   171 ;;
   172 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   173 ;;
   174 ;; *************** function _main *****************
   175 ;; Defined at:
   176 ;;		line 18 in file "main.c"
   177 ;; Parameters:    Size  Location     Type
   178 ;;		None
   179 ;; Auto vars:     Size  Location     Type
   180 ;;  index           1    5[COMRAM] unsigned char 
   181 ;;  index           1    4[COMRAM] unsigned char 
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   195 ;;Total ram usage:        4 bytes
   196 ;; Hardware stack levels required when called: 4
   197 ;; This function calls:
   198 ;;		_ADC_Random
   199 ;;		_displayValue
   200 ;;		_gameOver
   201 ;;		_gameWin
   202 ;;		_init
   203 ;;		_wait_for_input
   204 ;; This function is called by:
   205 ;;		Startup code after reset
   206 ;; This function uses a non-reentrant model
   207 ;;
   208                           
   209                           	psect	text0
   210   0040B2                     __ptext0:
   211                           	callstack 0
   212   0040B2                     _main:
   213                           	callstack 27
   214   0040B2                     
   215                           ;main.c: 20:     init();
   216   0040B2  ECF0  F020         	call	_init	;wreg free
   217   0040B6                     
   218                           ;main.c: 38:     for (highestValue = 0; highestValue < 4; highestValue++)
   219   0040B6  0E00               	movlw	0
   220   0040B8  6E07               	movwf	_highestValue^0,c
   221   0040BA                     l1068:
   222                           
   223                           ;main.c: 39:     {;main.c: 42:         Sequence[highestValue] = ADC_Random();
   224   0040BA  5007               	movf	_highestValue^0,w,c
   225   0040BC  0F01               	addlw	low _Sequence
   226   0040BE  6ED9               	movwf	fsr2l,c
   227   0040C0  6ADA               	clrf	fsr2h,c
   228   0040C2  EC85  F021         	call	_ADC_Random	;wreg free
   229   0040C6  6EDF               	movwf	indf2,c
   230   0040C8                     
   231                           ;main.c: 46:         for (char index = 0; index <= highestValue; index++)
   232   0040C8  0E00               	movlw	0
   233   0040CA  6E0C               	movwf	main@index^0,c
   234   0040CC  EF7B  F020         	goto	l1078
   235   0040D0                     l1072:
   236                           
   237                           ;main.c: 47:         {;main.c: 49:             displayValue(Sequence[index]);
   238   0040D0  500C               	movf	main@index^0,w,c
   239   0040D2  0F01               	addlw	low _Sequence
   240   0040D4  6ED9               	movwf	fsr2l,c
   241   0040D6  6ADA               	clrf	fsr2h,c
   242   0040D8  50DF               	movf	indf2,w,c
   243   0040DA  EC2D  F021         	call	_displayValue
   244   0040DE                     
   245                           ;main.c: 51:             _delay((unsigned long)((500)*(4000000/4000.0)));
   246   0040DE  0E03               	movlw	3
   247   0040E0  6E0B               	movwf	(??_main+1)^0,c
   248   0040E2  0E8A               	movlw	138
   249   0040E4  6E0A               	movwf	??_main^0,c
   250   0040E6  0E56               	movlw	86
   251   0040E8                     u247:
   252   0040E8  2EE8               	decfsz	wreg,f,c
   253   0040EA  D7FE               	bra	u247
   254   0040EC  2E0A               	decfsz	??_main^0,f,c
   255   0040EE  D7FC               	bra	u247
   256   0040F0  2E0B               	decfsz	(??_main+1)^0,f,c
   257   0040F2  D7FA               	bra	u247
   258   0040F4                     
   259                           ;main.c: 52:         }
   260   0040F4  2A0C               	incf	main@index^0,f,c
   261   0040F6                     l1078:
   262   0040F6  500C               	movf	main@index^0,w,c
   263   0040F8  5C07               	subwf	_highestValue^0,w,c
   264   0040FA  B0D8               	btfsc	status,0,c
   265   0040FC  EF82  F020         	goto	u201
   266   004100  EF84  F020         	goto	u200
   267   004104                     u201:
   268   004104  EF68  F020         	goto	l1072
   269   004108                     u200:
   270   004108                     
   271                           ;main.c: 56:         for (char index = 0; index <= highestValue; index++)
   272   004108  0E00               	movlw	0
   273   00410A  6E0D               	movwf	main@index_419^0,c
   274   00410C  EF9A  F020         	goto	l1090
   275   004110                     l1082:
   276                           
   277                           ;main.c: 57:         {;main.c: 59:             wait_for_input();
   278   004110  EC77  F021         	call	_wait_for_input	;wreg free
   279   004114                     
   280                           ;main.c: 61:             if (keyPressed != Sequence[index])
   281   004114  500D               	movf	main@index_419^0,w,c
   282   004116  0F01               	addlw	low _Sequence
   283   004118  6ED9               	movwf	fsr2l,c
   284   00411A  6ADA               	clrf	fsr2h,c
   285   00411C  5006               	movf	_keyPressed^0,w,c
   286   00411E  18DE               	xorwf	postinc2,w,c
   287   004120  B4D8               	btfsc	status,2,c
   288   004122  EF95  F020         	goto	u211
   289   004126  EF97  F020         	goto	u210
   290   00412A                     u211:
   291   00412A  EF99  F020         	goto	l1088
   292   00412E                     u210:
   293   00412E                     
   294                           ;main.c: 62:             {;main.c: 63:                 gameOver();
   295   00412E  EC93  F021         	call	_gameOver	;wreg free
   296   004132                     l1088:
   297                           
   298                           ;main.c: 65:         }
   299   004132  2A0D               	incf	main@index_419^0,f,c
   300   004134                     l1090:
   301   004134  500D               	movf	main@index_419^0,w,c
   302   004136  5C07               	subwf	_highestValue^0,w,c
   303   004138  B0D8               	btfsc	status,0,c
   304   00413A  EFA1  F020         	goto	u221
   305   00413E  EFA3  F020         	goto	u220
   306   004142                     u221:
   307   004142  EF88  F020         	goto	l1082
   308   004146                     u220:
   309   004146                     
   310                           ;main.c: 70:     }
   311   004146  2A07               	incf	_highestValue^0,f,c
   312   004148  0E03               	movlw	3
   313   00414A  6407               	cpfsgt	_highestValue^0,c
   314   00414C  EFAA  F020         	goto	u231
   315   004150  EFAC  F020         	goto	u230
   316   004154                     u231:
   317   004154  EF5D  F020         	goto	l1068
   318   004158                     u230:
   319   004158                     
   320                           ;main.c: 71:     gameWin();
   321   004158  EC92  F021         	call	_gameWin	;wreg free
   322   00415C  EF57  F020         	goto	start
   323   004160                     __end_of_main:
   324                           	callstack 0
   325                           
   326 ;; *************** function _wait_for_input *****************
   327 ;; Defined at:
   328 ;;		line 231 in file "./Functions.h"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   346 ;;Total ram usage:        0 bytes
   347 ;; Hardware stack levels used: 1
   348 ;; Hardware stack levels required when called: 3
   349 ;; This function calls:
   350 ;;		_displayValue
   351 ;; This function is called by:
   352 ;;		_main
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text1
   357   0042EE                     __ptext1:
   358                           	callstack 0
   359   0042EE                     _wait_for_input:
   360                           	callstack 27
   361   0042EE                     
   362                           ;./Functions.h: 233:     keyPressed = 0;
   363   0042EE  0E00               	movlw	0
   364   0042F0  6E06               	movwf	_keyPressed^0,c
   365   0042F2                     l1054:
   366   0042F2  5006               	movf	_keyPressed^0,w,c
   367   0042F4  B4D8               	btfsc	status,2,c
   368   0042F6  EF7F  F021         	goto	u191
   369   0042FA  EF81  F021         	goto	u190
   370   0042FE                     u191:
   371   0042FE  EF79  F021         	goto	l1054
   372   004302                     u190:
   373   004302                     
   374                           ;./Functions.h: 236:     displayValue((unsigned char)keyPressed);
   375   004302  5006               	movf	_keyPressed^0,w,c
   376   004304  EC2D  F021         	call	_displayValue
   377   004308  0012               	return		;funcret
   378   00430A                     __end_of_wait_for_input:
   379                           	callstack 0
   380                           
   381 ;; *************** function _displayValue *****************
   382 ;; Defined at:
   383 ;;		line 198 in file "./Functions.h"
   384 ;; Parameters:    Size  Location     Type
   385 ;;  value           1    wreg     unsigned char 
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  value           1    1[COMRAM] unsigned char 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   400 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   401 ;;Total ram usage:        1 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; Hardware stack levels required when called: 2
   404 ;; This function calls:
   405 ;;		_playTone
   406 ;; This function is called by:
   407 ;;		_wait_for_input
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text2
   413   00425A                     __ptext2:
   414                           	callstack 0
   415   00425A                     _displayValue:
   416                           	callstack 27
   417                           
   418                           ;incstack = 0
   419                           ;displayValue@value stored from wreg
   420   00425A  6E09               	movwf	displayValue@value^0,c
   421   00425C                     
   422                           ;./Functions.h: 198: void displayValue(unsigned char value);./Functions.h: 199: {;./Func
      +                          tions.h: 200:     switch (value)
   423   00425C  EF54  F021         	goto	l1050
   424   004260                     l146:
   425                           
   426                           ;./Functions.h: 203:             PORTDbits.RD1 = 1;
   427   004260  82CD               	bsf	205,1,c	;volatile
   428   004262                     
   429                           ;./Functions.h: 204:             playTone(0x01, 0x00);
   430   004262  0E00               	movlw	0
   431   004264  6E08               	movwf	playTone@duration^0,c
   432   004266  0E01               	movlw	1
   433   004268  EC91  F021         	call	_playTone
   434   00426C                     
   435                           ;./Functions.h: 205:             PORTDbits.RD1 = 0;
   436   00426C  92CD               	bcf	205,1,c	;volatile
   437                           
   438                           ;./Functions.h: 206:             break;
   439   00426E  EF67  F021         	goto	l152
   440   004272                     l148:
   441                           
   442                           ;./Functions.h: 208:             PORTDbits.RD2 = 1;
   443   004272  84CD               	bsf	205,2,c	;volatile
   444   004274                     
   445                           ;./Functions.h: 209:             playTone(0x02, 0x00);
   446   004274  0E00               	movlw	0
   447   004276  6E08               	movwf	playTone@duration^0,c
   448   004278  0E02               	movlw	2
   449   00427A  EC91  F021         	call	_playTone
   450   00427E                     
   451                           ;./Functions.h: 210:             PORTDbits.RD2 = 0;
   452   00427E  94CD               	bcf	205,2,c	;volatile
   453                           
   454                           ;./Functions.h: 211:             break;
   455   004280  EF67  F021         	goto	l152
   456   004284                     l149:
   457                           
   458                           ;./Functions.h: 213:             PORTDbits.RD3 = 1;
   459   004284  86CD               	bsf	205,3,c	;volatile
   460   004286                     
   461                           ;./Functions.h: 214:             playTone(0x03, 0x00);
   462   004286  0E00               	movlw	0
   463   004288  6E08               	movwf	playTone@duration^0,c
   464   00428A  0E03               	movlw	3
   465   00428C  EC91  F021         	call	_playTone
   466   004290                     
   467                           ;./Functions.h: 215:             PORTDbits.RD3 = 0;
   468   004290  96CD               	bcf	205,3,c	;volatile
   469                           
   470                           ;./Functions.h: 216:             break;
   471   004292  EF67  F021         	goto	l152
   472   004296                     l150:
   473                           
   474                           ;./Functions.h: 218:             PORTDbits.RD4 = 1;
   475   004296  88CD               	bsf	205,4,c	;volatile
   476   004298                     
   477                           ;./Functions.h: 219:             playTone(0x04, 0x00);
   478   004298  0E00               	movlw	0
   479   00429A  6E08               	movwf	playTone@duration^0,c
   480   00429C  0E04               	movlw	4
   481   00429E  EC91  F021         	call	_playTone
   482   0042A2                     
   483                           ;./Functions.h: 220:             PORTDbits.RD4 = 0;
   484   0042A2  98CD               	bcf	205,4,c	;volatile
   485                           
   486                           ;./Functions.h: 221:             break;
   487   0042A4  EF67  F021         	goto	l152
   488   0042A8                     l1050:
   489   0042A8  5009               	movf	displayValue@value^0,w,c
   490                           
   491                           ; Switch size 1, requested type "simple"
   492                           ; Number of cases is 4, Range of values is 1 to 4
   493                           ; switch strategies available:
   494                           ; Name         Instructions Cycles
   495                           ; simple_byte           13     7 (average)
   496                           ;	Chosen strategy is simple_byte
   497   0042AA  0A01               	xorlw	1	; case 1
   498   0042AC  B4D8               	btfsc	status,2,c
   499   0042AE  EF30  F021         	goto	l146
   500   0042B2  0A03               	xorlw	3	; case 2
   501   0042B4  B4D8               	btfsc	status,2,c
   502   0042B6  EF39  F021         	goto	l148
   503   0042BA  0A01               	xorlw	1	; case 3
   504   0042BC  B4D8               	btfsc	status,2,c
   505   0042BE  EF42  F021         	goto	l149
   506   0042C2  0A07               	xorlw	7	; case 4
   507   0042C4  B4D8               	btfsc	status,2,c
   508   0042C6  EF4B  F021         	goto	l150
   509   0042CA  EF67  F021         	goto	l152
   510   0042CE                     l152:
   511   0042CE  0012               	return		;funcret
   512   0042D0                     __end_of_displayValue:
   513                           	callstack 0
   514                           
   515 ;; *************** function _playTone *****************
   516 ;; Defined at:
   517 ;;		line 191 in file "./Functions.h"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  frequency       1    wreg     unsigned char 
   520 ;;  duration        1    0[COMRAM] unsigned char 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  frequency       1    0[COMRAM] unsigned char 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   532 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   536 ;;Total ram usage:        1 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; Hardware stack levels required when called: 1
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_displayValue
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text3
   547   004322                     __ptext3:
   548                           	callstack 0
   549   004322                     _playTone:
   550                           	callstack 27
   551   004322  0012               	return		;funcret
   552   004324                     __end_of_playTone:
   553                           	callstack 0
   554                           
   555 ;; *************** function _init *****************
   556 ;; Defined at:
   557 ;;		line 60 in file "./Functions.h"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;		None
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   575 ;;Total ram usage:        0 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; Hardware stack levels required when called: 1
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text4
   586   0041E0                     __ptext4:
   587                           	callstack 0
   588   0041E0                     _init:
   589                           	callstack 29
   590   0041E0                     
   591                           ;./Functions.h: 62:     TRISB = 0xFF;
   592   0041E0  68C3               	setf	195,c	;volatile
   593   0041E2                     
   594                           ;./Functions.h: 63:     ANSELB = 0;
   595   0041E2  0E00               	movlw	0
   596   0041E4  013A               	movlb	58	; () banked
   597   0041E6  6F50               	movwf	80,b	;volatile
   598                           
   599                           ;./Functions.h: 64:     LATB = 0;
   600   0041E8  0E00               	movlw	0
   601   0041EA  6EBB               	movwf	187,c	;volatile
   602                           
   603                           ;./Functions.h: 66:     TRISA = 0x01;
   604   0041EC  0E01               	movlw	1
   605   0041EE  6EC2               	movwf	194,c	;volatile
   606                           
   607                           ;./Functions.h: 67:     ANSELA = 0x01;
   608   0041F0  0E01               	movlw	1
   609   0041F2  6F40               	movwf	64,b	;volatile
   610                           
   611                           ;./Functions.h: 68:     LATA = 0;
   612   0041F4  0E00               	movlw	0
   613   0041F6  6EBA               	movwf	186,c	;volatile
   614                           
   615                           ;./Functions.h: 69:     PORTA = 0;
   616   0041F8  0E00               	movlw	0
   617   0041FA  6ECA               	movwf	202,c	;volatile
   618                           
   619                           ;./Functions.h: 71:     TRISD = 0;
   620   0041FC  0E00               	movlw	0
   621   0041FE  6EC5               	movwf	197,c	;volatile
   622                           
   623                           ;./Functions.h: 72:     ANSELD = 0;
   624   004200  0E00               	movlw	0
   625   004202  6F70               	movwf	112,b	;volatile
   626                           
   627                           ;./Functions.h: 73:     LATD = 0;
   628   004204  0E00               	movlw	0
   629   004206  6EBD               	movwf	189,c	;volatile
   630                           
   631                           ;./Functions.h: 74:     PORTD = 0;
   632   004208  0E00               	movlw	0
   633   00420A  6ECD               	movwf	205,c	;volatile
   634                           
   635                           ;./Functions.h: 81:     ADCON0bits.FM = 1;
   636   00420C  013E               	movlb	62	; () banked
   637   00420E  51F8               	movf	248,w,b	;volatile
   638   004210  0BF3               	andlw	-13
   639   004212  0904               	iorlw	4
   640   004214  6FF8               	movwf	248,b	;volatile
   641   004216                     
   642                           ; BSR set to: 62
   643                           ;./Functions.h: 83:     ADCON0bits.CS = 0;
   644   004216  99F8               	bcf	248,4,b	;volatile
   645   004218                     
   646                           ; BSR set to: 62
   647                           ;./Functions.h: 85:     TRISAbits.TRISA0 = 1;
   648   004218  80C2               	bsf	194,0,c	;volatile
   649   00421A                     
   650                           ; BSR set to: 62
   651                           ;./Functions.h: 87:     ANSELAbits.ANSELA0 = 1;
   652   00421A  013A               	movlb	58	; () banked
   653   00421C  8140               	bsf	64,0,b	;volatile
   654                           
   655                           ;./Functions.h: 89:     ADPCH = 0;
   656   00421E  0E00               	movlw	0
   657   004220  013E               	movlb	62	; () banked
   658   004222  6FF1               	movwf	241,b	;volatile
   659                           
   660                           ;./Functions.h: 91:     ADCLK = 0;
   661   004224  0E00               	movlw	0
   662   004226  6FFF               	movwf	255,b	;volatile
   663                           
   664                           ;./Functions.h: 93:     ADRESL = 0;
   665   004228  0E00               	movlw	0
   666   00422A  6FEF               	movwf	239,b	;volatile
   667                           
   668                           ;./Functions.h: 94:     ADRESH = 0;
   669   00422C  0E00               	movlw	0
   670   00422E  6FF0               	movwf	240,b	;volatile
   671                           
   672                           ;./Functions.h: 96:     ADPREL = 0;
   673   004230  0E00               	movlw	0
   674   004232  6FF6               	movwf	246,b	;volatile
   675                           
   676                           ;./Functions.h: 97:     ADPREH = 0;
   677   004234  0E00               	movlw	0
   678   004236  6FF7               	movwf	247,b	;volatile
   679                           
   680                           ;./Functions.h: 99:     ADACQL = 0;
   681   004238  0E00               	movlw	0
   682   00423A  6FF3               	movwf	243,b	;volatile
   683                           
   684                           ;./Functions.h: 100:     ADACQH = 0;
   685   00423C  0E00               	movlw	0
   686   00423E  6FF4               	movwf	244,b	;volatile
   687   004240                     
   688                           ; BSR set to: 62
   689                           ;./Functions.h: 102:     ADCON0bits.ON = 1;
   690   004240  8FF8               	bsf	248,7,b	;volatile
   691   004242                     
   692                           ; BSR set to: 62
   693                           ;./Functions.h: 105:     INTCON0bits.IPEN = 1;
   694   004242  8AD2               	bsf	210,5,c	;volatile
   695   004244                     
   696                           ; BSR set to: 62
   697                           ;./Functions.h: 106:     INTCON0bits.GIEH = 1;
   698   004244  8ED2               	bsf	210,7,c	;volatile
   699   004246                     
   700                           ; BSR set to: 62
   701                           ;./Functions.h: 107:     INTCON0bits.GIEL = 1;
   702   004246  8CD2               	bsf	210,6,c	;volatile
   703   004248                     
   704                           ; BSR set to: 62
   705                           ;./Functions.h: 108:     PIE0bits.IOCIE = 1;
   706   004248  0139               	movlb	57	; () banked
   707   00424A  8F90               	bsf	144,7,b	;volatile
   708                           
   709                           ;./Functions.h: 114:     IVTBASEU = 0;
   710   00424C  0E00               	movlw	0
   711   00424E  6ED7               	movwf	215,c	;volatile
   712                           
   713                           ;./Functions.h: 115:     IVTBASEH = 0x40;
   714   004250  0E40               	movlw	64
   715   004252  6ED6               	movwf	214,c	;volatile
   716                           
   717                           ;./Functions.h: 116:     IVTBASEL = 0x08;
   718   004254  0E08               	movlw	8
   719   004256  6ED5               	movwf	213,c	;volatile
   720   004258                     
   721                           ; BSR set to: 57
   722   004258  0012               	return		;funcret
   723   00425A                     __end_of_init:
   724                           	callstack 0
   725                           
   726 ;; *************** function _gameWin *****************
   727 ;; Defined at:
   728 ;;		line 248 in file "./Functions.h"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		None
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   746 ;;Total ram usage:        0 bytes
   747 ;; Hardware stack levels used: 1
   748 ;; Hardware stack levels required when called: 1
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text5
   757   004324                     __ptext5:
   758                           	callstack 0
   759   004324                     _gameWin:
   760                           	callstack 29
   761   004324  0012               	return		;funcret
   762   004326                     __end_of_gameWin:
   763                           	callstack 0
   764                           
   765 ;; *************** function _gameOver *****************
   766 ;; Defined at:
   767 ;;		line 242 in file "./Functions.h"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		None
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text6
   796   004326                     __ptext6:
   797                           	callstack 0
   798   004326                     _gameOver:
   799                           	callstack 29
   800   004326  0012               	return		;funcret
   801   004328                     __end_of_gameOver:
   802                           	callstack 0
   803                           
   804 ;; *************** function _ADC_Random *****************
   805 ;; Defined at:
   806 ;;		line 124 in file "./Functions.h"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      unsigned char 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; Hardware stack levels required when called: 1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_main
   831 ;;		_ADC_Test
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text7
   836   00430A                     __ptext7:
   837                           	callstack 0
   838   00430A                     _ADC_Random:
   839                           	callstack 29
   840   00430A                     
   841                           ;./Functions.h: 126:     ADCON0bits.GO = 1;
   842   00430A  013E               	movlb	62	; () banked
   843   00430C  81F8               	bsf	248,0,b	;volatile
   844   00430E                     l109:
   845                           
   846                           ; BSR set to: 62
   847   00430E  B1F8               	btfsc	248,0,b	;volatile
   848   004310  EF8C  F021         	goto	u11
   849   004314  EF8E  F021         	goto	u10
   850   004318                     u11:
   851   004318  EF87  F021         	goto	l109
   852   00431C                     u10:
   853   00431C                     
   854                           ; BSR set to: 62
   855                           ;./Functions.h: 131:     return (ADRESL & 0x03);
   856   00431C  51EF               	movf	239,w,b	;volatile
   857   00431E  0B03               	andlw	3
   858   004320                     
   859                           ; BSR set to: 62
   860   004320  0012               	return		;funcret
   861   004322                     __end_of_ADC_Random:
   862                           	callstack 0
   863                           
   864 ;; *************** function _INT0_ISR *****************
   865 ;; Defined at:
   866 ;;		line 18 in file "./Functions.h"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   884 ;;Total ram usage:        0 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		Interrupt level 2
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text8
   894   004160                     __ptext8:
   895                           	callstack 0
   896   004160                     _INT0_ISR:
   897                           	callstack 27
   898   004160                     
   899                           ;./Functions.h: 21:     if (PIR0bits.IOCIF == 1)
   900   004160  0139               	movlb	57	; () banked
   901   004162  AFA0               	btfss	160,7,b	;volatile
   902   004164  EFB6  F020         	goto	i2u3_41
   903   004168  EFB8  F020         	goto	i2u3_40
   904   00416C                     i2u3_41:
   905   00416C  EFEF  F020         	goto	i2l103
   906   004170                     i2u3_40:
   907   004170                     
   908                           ; BSR set to: 57
   909                           ;./Functions.h: 22:     {;./Functions.h: 23:         IOCAF = 0;
   910   004170  0E00               	movlw	0
   911   004172  013A               	movlb	58	; () banked
   912   004174  6F47               	movwf	71,b	;volatile
   913                           
   914                           ;./Functions.h: 24:         IOCCF = 0;
   915   004176  0E00               	movlw	0
   916   004178  6F67               	movwf	103,b	;volatile
   917                           
   918                           ;./Functions.h: 25:         IOCEF = 0;
   919   00417A  0E00               	movlw	0
   920   00417C  6F87               	movwf	135,b	;volatile
   921   00417E                     
   922                           ; BSR set to: 58
   923                           ;./Functions.h: 26:         IOCBF = (IOCBF & 0x1F);
   924   00417E  5157               	movf	87,w,b	;volatile
   925   004180  0B1F               	andlw	31
   926   004182  6F57               	movwf	87,b	;volatile
   927   004184                     
   928                           ; BSR set to: 58
   929                           ;./Functions.h: 29:         if(IOCBFbits.IOCBF0)
   930   004184  A157               	btfss	87,0,b	;volatile
   931   004186  EFC7  F020         	goto	i2u4_41
   932   00418A  EFC9  F020         	goto	i2u4_40
   933   00418E                     i2u4_41:
   934   00418E  EFCA  F020         	goto	i2l98
   935   004192                     i2u4_40:
   936   004192                     
   937                           ; BSR set to: 58
   938   004192  00FF               	reset		;# 
   939   004194                     i2l98:
   940                           
   941                           ;./Functions.h: 34:         if(IOCBFbits.IOCBF1)
   942   004194  013A               	movlb	58	; () banked
   943   004196  A357               	btfss	87,1,b	;volatile
   944   004198  EFD0  F020         	goto	i2u5_41
   945   00419C  EFD2  F020         	goto	i2u5_40
   946   0041A0                     i2u5_41:
   947   0041A0  EFD4  F020         	goto	i2l924
   948   0041A4                     i2u5_40:
   949   0041A4                     
   950                           ; BSR set to: 58
   951                           ;./Functions.h: 35:         {;./Functions.h: 36:             keyPressed = 0x01;
   952   0041A4  0E01               	movlw	1
   953   0041A6  6E06               	movwf	_keyPressed^0,c
   954   0041A8                     i2l924:
   955                           
   956                           ; BSR set to: 58
   957                           ;./Functions.h: 39:         if(IOCBFbits.IOCBF1)
   958   0041A8  A357               	btfss	87,1,b	;volatile
   959   0041AA  EFD9  F020         	goto	i2u6_41
   960   0041AE  EFDB  F020         	goto	i2u6_40
   961   0041B2                     i2u6_41:
   962   0041B2  EFDD  F020         	goto	i2l928
   963   0041B6                     i2u6_40:
   964   0041B6                     
   965                           ; BSR set to: 58
   966                           ;./Functions.h: 40:         {;./Functions.h: 41:             keyPressed = 0x02;
   967   0041B6  0E02               	movlw	2
   968   0041B8  6E06               	movwf	_keyPressed^0,c
   969   0041BA                     i2l928:
   970                           
   971                           ; BSR set to: 58
   972                           ;./Functions.h: 44:         if(IOCBFbits.IOCBF3)
   973   0041BA  A757               	btfss	87,3,b	;volatile
   974   0041BC  EFE2  F020         	goto	i2u7_41
   975   0041C0  EFE4  F020         	goto	i2u7_40
   976   0041C4                     i2u7_41:
   977   0041C4  EFE6  F020         	goto	i2l932
   978   0041C8                     i2u7_40:
   979   0041C8                     
   980                           ; BSR set to: 58
   981                           ;./Functions.h: 45:         {;./Functions.h: 46:             keyPressed = 0x03;
   982   0041C8  0E03               	movlw	3
   983   0041CA  6E06               	movwf	_keyPressed^0,c
   984   0041CC                     i2l932:
   985                           
   986                           ; BSR set to: 58
   987                           ;./Functions.h: 49:         if(IOCBFbits.IOCBF4)
   988   0041CC  A957               	btfss	87,4,b	;volatile
   989   0041CE  EFEB  F020         	goto	i2u8_41
   990   0041D2  EFED  F020         	goto	i2u8_40
   991   0041D6                     i2u8_41:
   992   0041D6  EFEF  F020         	goto	i2l103
   993   0041DA                     i2u8_40:
   994   0041DA                     
   995                           ; BSR set to: 58
   996                           ;./Functions.h: 50:         {;./Functions.h: 51:             keyPressed = 0x04;
   997   0041DA  0E04               	movlw	4
   998   0041DC  6E06               	movwf	_keyPressed^0,c
   999   0041DE                     i2l103:
  1000   0041DE  0011               	retfie		f
  1001   0041E0                     __end_of_INT0_ISR:
  1002                           	callstack 0
  1003                           
  1004                           ;
  1005                           ; H/W Interrupt Vector Table @ 0x4008
  1006                           ;
  1007                           
  1008                           	psect	ivt0x4008
  1009   004008                     __pivt0x4008:
  1010                           	callstack 0
  1011   004008                     ivt0x4008_base:
  1012                           	callstack 0
  1013                           
  1014                           ; Vector 0 : SWINT
  1015   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  1016                           
  1017                           ; Vector 1 : HLVD
  1018   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1019                           
  1020                           ; Vector 2 : OSF
  1021   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1022                           
  1023                           ; Vector 3 : CSW
  1024   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1025                           
  1026                           ; Vector 4 : NVM
  1027   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  1028                           
  1029                           ; Vector 5 : SCAN
  1030   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  1031                           
  1032                           ; Vector 6 : CRC
  1033   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  1034                           
  1035                           ; Vector 7 : IOC
  1036   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  1037                           
  1038                           ; Vector 8 : INT0
  1039   004018  1058               	dw	_INT0_ISR shr (0+2)
  1040                           
  1041                           ; Vector 9 : ZCD
  1042   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1043                           
  1044                           ; Vector 10 : AD
  1045   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1046                           
  1047                           ; Vector 11 : ADT
  1048   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1049                           
  1050                           ; Vector 12 : CMP1
  1051   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  1052                           
  1053                           ; Vector 13 : SMT1
  1054   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  1055                           
  1056                           ; Vector 14 : SMT1PRA
  1057   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  1058                           
  1059                           ; Vector 15 : SMT1PRW
  1060   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  1061                           
  1062                           ; Vector 16 : DMA1SCNT
  1063   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  1064                           
  1065                           ; Vector 17 : DMA1DCNT
  1066   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1067                           
  1068                           ; Vector 18 : DMA1OR
  1069   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1070                           
  1071                           ; Vector 19 : DMA1A
  1072   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1073                           
  1074                           ; Vector 20 : SPI1RX
  1075   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1076                           
  1077                           ; Vector 21 : SPI1TX
  1078   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1079                           
  1080                           ; Vector 22 : SPI1
  1081   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1082                           
  1083                           ; Vector 23 : I2C1RX
  1084   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1085                           
  1086                           ; Vector 24 : I2C1TX
  1087   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1088                           
  1089                           ; Vector 25 : I2C1
  1090   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1091                           
  1092                           ; Vector 26 : I2C1E
  1093   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1094                           
  1095                           ; Vector 27 : U1RX
  1096   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1097                           
  1098                           ; Vector 28 : U1TX
  1099   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1100                           
  1101                           ; Vector 29 : U1E
  1102   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1103                           
  1104                           ; Vector 30 : U1
  1105   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1106                           
  1107                           ; Vector 31 : TMR0
  1108   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1109                           
  1110                           ; Vector 32 : TMR1
  1111   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1112                           
  1113                           ; Vector 33 : TMR1G
  1114   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1115                           
  1116                           ; Vector 34 : TMR2
  1117   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1118                           
  1119                           ; Vector 35 : CCP1
  1120   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1121                           
  1122                           ; Vector 36 : Undefined
  1123   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1124                           
  1125                           ; Vector 37 : NCO1
  1126   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1127                           
  1128                           ; Vector 38 : CWG1
  1129   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1130                           
  1131                           ; Vector 39 : CLC1
  1132   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1133                           
  1134                           ; Vector 40 : INT1
  1135   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1136                           
  1137                           ; Vector 41 : CMP2
  1138   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1139                           
  1140                           ; Vector 42 : DMA2SCNT
  1141   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1142                           
  1143                           ; Vector 43 : DMA2DCNT
  1144   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1145                           
  1146                           ; Vector 44 : DMA2OR
  1147   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1148                           
  1149                           ; Vector 45 : DMA2A
  1150   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1151                           
  1152                           ; Vector 46 : I2C2RX
  1153   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1154                           
  1155                           ; Vector 47 : I2C2TX
  1156   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1157                           
  1158                           ; Vector 48 : I2C2
  1159   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1160                           
  1161                           ; Vector 49 : I2C2E
  1162   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1163                           
  1164                           ; Vector 50 : U2RX
  1165   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1166                           
  1167                           ; Vector 51 : U2TX
  1168   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1169                           
  1170                           ; Vector 52 : U2E
  1171   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1172                           
  1173                           ; Vector 53 : U2
  1174   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1175                           
  1176                           ; Vector 54 : TMR3
  1177   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1178                           
  1179                           ; Vector 55 : TMR3G
  1180   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1181                           
  1182                           ; Vector 56 : TMR4
  1183   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1184                           
  1185                           ; Vector 57 : CCP2
  1186   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1187                           
  1188                           ; Vector 58 : Undefined
  1189   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1190                           
  1191                           ; Vector 59 : CWG2
  1192   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1193                           
  1194                           ; Vector 60 : CLC2
  1195   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1196                           
  1197                           ; Vector 61 : INT2
  1198   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1199                           
  1200                           ; Vector 62 : Undefined
  1201   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1202                           
  1203                           ; Vector 63 : Undefined
  1204   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1205                           
  1206                           ; Vector 64 : Undefined
  1207   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1208                           
  1209                           ; Vector 65 : Undefined
  1210   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1211                           
  1212                           ; Vector 66 : Undefined
  1213   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1214                           
  1215                           ; Vector 67 : Undefined
  1216   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1217                           
  1218                           ; Vector 68 : Undefined
  1219   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1220                           
  1221                           ; Vector 69 : Undefined
  1222   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1223                           
  1224                           ; Vector 70 : TMR5
  1225   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1226                           
  1227                           ; Vector 71 : TMR5G
  1228   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1229                           
  1230                           ; Vector 72 : TMR6
  1231   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1232                           
  1233                           ; Vector 73 : CCP3
  1234   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1235                           
  1236                           ; Vector 74 : CWG3
  1237   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1238                           
  1239                           ; Vector 75 : CLC3
  1240   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1241                           
  1242                           ; Vector 76 : Undefined
  1243   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1244                           
  1245                           ; Vector 77 : Undefined
  1246   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1247                           
  1248                           ; Vector 78 : Undefined
  1249   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1250                           
  1251                           ; Vector 79 : Undefined
  1252   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1253                           
  1254                           ; Vector 80 : CCP4
  1255   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1256                           
  1257                           ; Vector 81 : CLC4
  1258   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1259   0040AC                     ivt0x4008_undefint:
  1260                           	callstack 0
  1261   0040AC  00FF               	reset	
  1262                           
  1263                           	psect	smallconst
  1264   002000                     __psmallconst:
  1265                           	callstack 0
  1266   002000  00                 	db	0
  1267   002001  00                 	db	0	; dummy byte at the end
  1268   000000                     
  1269                           	psect	rparam
  1270   000000                     
  1271                           	psect	config
  1272                           
  1273                           ;Config register CONFIG1L @ 0x300000
  1274                           ;	External Oscillator Selection
  1275                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1276                           ;	Reset Oscillator Selection
  1277                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1278   300000                     	org	3145728
  1279   300000  F8                 	db	248
  1280                           
  1281                           ;Config register CONFIG1H @ 0x300001
  1282                           ;	Clock out Enable bit
  1283                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1284                           ;	PRLOCKED One-Way Set Enable bit
  1285                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1286                           ;	Clock Switch Enable bit
  1287                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1288                           ;	Fail-Safe Clock Monitor Enable bit
  1289                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1290   300001                     	org	3145729
  1291   300001  FF                 	db	255
  1292                           
  1293                           ;Config register CONFIG2L @ 0x300002
  1294                           ;	MCLR Enable bit
  1295                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1296                           ;	Power-up timer selection bits
  1297                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1298                           ;	Multi-vector enable bit
  1299                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1300                           ;	IVTLOCK bit One-way set enable bit
  1301                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1302                           ;	Low Power BOR Enable bit
  1303                           ;	LPBOREN = OFF, ULPBOR disabled
  1304                           ;	Brown-out Reset Enable bits
  1305                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1306   300002                     	org	3145730
  1307   300002  FF                 	db	255
  1308                           
  1309                           ;Config register CONFIG2H @ 0x300003
  1310                           ;	Brown-out Reset Voltage Selection bits
  1311                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1312                           ;	ZCD Disable bit
  1313                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1314                           ;	PPSLOCK bit One-Way Set Enable bit
  1315                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1316                           ;	Stack Full/Underflow Reset Enable bit
  1317                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1318                           ;	Debugger Enable bit
  1319                           ;	DEBUG = OFF, Background debugger disabled
  1320                           ;	Extended Instruction Set Enable bit
  1321                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1322   300003                     	org	3145731
  1323   300003  FF                 	db	255
  1324                           
  1325                           ;Config register CONFIG3L @ 0x300004
  1326                           ;	WDT Period selection bits
  1327                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1328                           ;	WDT operating mode
  1329                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1330   300004                     	org	3145732
  1331   300004  9F                 	db	159
  1332                           
  1333                           ;Config register CONFIG3H @ 0x300005
  1334                           ;	WDT Window Select bits
  1335                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1336                           ;	WDT input clock selector
  1337                           ;	WDTCCS = SC, Software Control
  1338   300005                     	org	3145733
  1339   300005  FF                 	db	255
  1340                           
  1341                           ;Config register CONFIG4L @ 0x300006
  1342                           ;	Boot Block Size selection bits
  1343                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1344                           ;	Boot Block enable bit
  1345                           ;	BBEN = OFF, Boot block disabled
  1346                           ;	Storage Area Flash enable bit
  1347                           ;	SAFEN = OFF, SAF disabled
  1348                           ;	Application Block write protection bit
  1349                           ;	WRTAPP = OFF, Application Block not write protected
  1350   300006                     	org	3145734
  1351   300006  FF                 	db	255
  1352                           
  1353                           ;Config register CONFIG4H @ 0x300007
  1354                           ;	Boot Block Write Protection bit
  1355                           ;	WRTB = OFF, Boot Block not write-protected
  1356                           ;	Configuration Register Write Protection bit
  1357                           ;	WRTC = OFF, Configuration registers not write-protected
  1358                           ;	Data EEPROM Write Protection bit
  1359                           ;	WRTD = OFF, Data EEPROM not write-protected
  1360                           ;	SAF Write protection bit
  1361                           ;	WRTSAF = OFF, SAF not Write Protected
  1362                           ;	Low Voltage Programming Enable bit
  1363                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1364   300007                     	org	3145735
  1365   300007  FF                 	db	255
  1366                           
  1367                           ;Config register CONFIG5L @ 0x300008
  1368                           ;	PFM and Data EEPROM Code Protection bit
  1369                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1370   300008                     	org	3145736
  1371   300008  FF                 	db	255
  1372                           
  1373                           ;Config register CONFIG5H @ 0x300009
  1374                           ;	unspecified, using default values
  1375   300009                     	org	3145737
  1376   300009  FF                 	db	255
  1377                           tosu	equ	0x3FFF
  1378                           tosh	equ	0x3FFE
  1379                           tosl	equ	0x3FFD
  1380                           stkptr	equ	0x3FFC
  1381                           pclatu	equ	0x3FFB
  1382                           pclath	equ	0x3FFA
  1383                           pcl	equ	0x3FF9
  1384                           tblptru	equ	0x3FF8
  1385                           tblptrh	equ	0x3FF7
  1386                           tblptrl	equ	0x3FF6
  1387                           tablat	equ	0x3FF5
  1388                           prodh	equ	0x3FF4
  1389                           prodl	equ	0x3FF3
  1390                           indf0	equ	0x3FEF
  1391                           postinc0	equ	0x3FEE
  1392                           postdec0	equ	0x3FED
  1393                           preinc0	equ	0x3FEC
  1394                           plusw0	equ	0x3FEB
  1395                           fsr0h	equ	0x3FEA
  1396                           fsr0l	equ	0x3FE9
  1397                           wreg	equ	0x3FE8
  1398                           indf1	equ	0x3FE7
  1399                           postinc1	equ	0x3FE6
  1400                           postdec1	equ	0x3FE5
  1401                           preinc1	equ	0x3FE4
  1402                           plusw1	equ	0x3FE3
  1403                           fsr1h	equ	0x3FE2
  1404                           fsr1l	equ	0x3FE1
  1405                           bsr	equ	0x3FE0
  1406                           indf2	equ	0x3FDF
  1407                           postinc2	equ	0x3FDE
  1408                           postdec2	equ	0x3FDD
  1409                           preinc2	equ	0x3FDC
  1410                           plusw2	equ	0x3FDB
  1411                           fsr2h	equ	0x3FDA
  1412                           fsr2l	equ	0x3FD9
  1413                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_displayValue
    _wait_for_input->_displayValue
    _displayValue->_playTone

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     744
                                              2 COMRAM     4     4      0
                         _ADC_Random
                       _displayValue
                           _gameOver
                            _gameWin
                               _init
                     _wait_for_input
 ---------------------------------------------------------------------------------
 (1) _wait_for_input                                       0     0      0     326
                       _displayValue
 ---------------------------------------------------------------------------------
 (2) _displayValue                                         1     1      0     326
                                              1 COMRAM     1     1      0
                           _playTone
 ---------------------------------------------------------------------------------
 (3) _playTone                                             2     1      1     304
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameWin                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameOver                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Random                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Random
   _displayValue
     _playTone
   _gameOver
   _gameWin
   _init
   _wait_for_input
     _displayValue

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      91        0.0%
BITBIGSFRhhhhll    467      0       0      81        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRll        190      0       0      90        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhhhhll     BA      0       0      77        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRhll        9F      0       0      88        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6       D       1       13.7%
BITBIGSFRhhhhhh     28      0       0      69        0.0%
BITBIGSFRhhhlh      16      0       0      82        0.0%
BITBIGSFRlh          F      0       0      89        0.0%
BITBIGSFRhhlh        F      0       0      84        0.0%
BITBIGSFRhhhll       8      0       0      83        0.0%
BITBIGSFRhhlll       8      0       0      86        0.0%
BITBIGSFRhhhhll      6      0       0      78        0.0%
BITBIGSFRhlh         6      0       0      87        0.0%
BITBIGSFRhhllh       6      0       0      85        0.0%
BITBIGSFRhhhhhh      4      0       0      71        0.0%
BITBIGSFRhhhhlh      4      0       0      75        0.0%
BITBIGSFRhhhhhl      4      0       0      73        0.0%
BITBIGSFRhhhhhh      2      0       0      70        0.0%
BITBIGSFRhhhhll      1      0       0      79        0.0%
BITBIGSFRhhhhll      1      0       0      80        0.0%
BITBIGSFRhhhhhh      1      0       0      72        0.0%
BITBIGSFRhhhhlh      1      0       0      76        0.0%
BITBIGSFRhhhhhl      1      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      10        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 29 09:37:25 2024

       ??_wait_for_input 000A                       u10 431C                       u11 4318  
          ?_displayValue 0008                      l112 4320                      l106 4258  
                    l109 430E                      l142 4322                      l150 4296  
                    l152 42CE                      l161 4326                      l146 4260  
                    l164 4324                      l148 4272                      l149 4284  
                    l158 4308                      l178 415C                      l900 431C  
                    l880 41E2                      l890 4242                      l882 4216  
                    l892 4244                      l884 4218                      l894 4246  
                    l886 421A                      l878 41E0                      l896 4248  
                    l888 4240                      l898 430A                      u200 4108  
                    u201 4104                      u210 412E                      u211 412A  
                    u220 4146                      u221 4142                      u230 4158  
                    u231 4154                      u190 4302                      u191 42FE  
                    u247 40E8                      wreg 3FE8                     l1030 425C  
                   l1040 4286                     l1032 4262                     l1042 4290  
                   l1034 426C                     l1050 42A8                     l1028 4322  
                   l1044 4298                     l1036 4274                     l1052 42EE  
                   l1060 40B2                     l1046 42A2                     l1038 427E  
                   l1054 42F2                     l1070 40C8                     l1062 40B6  
                   l1056 4302                     l1080 4108                     l1072 40D0  
                   l1082 4110                     l1090 4134                     l1074 40DE  
                   l1092 4146                     l1084 4114                     l1076 40F4  
                   l1068 40BA                     l1094 4148                     l1086 412E  
                   l1078 40F6                     l1096 4158                     l1088 4132  
                   _LATA 3FBA                     _LATB 3FBB                     _LATD 3FBD  
                   i2l98 4194                     _main 40B2                     _init 41E0  
                   fsr2h 3FDA                     indf2 3FDF                     fsr2l 3FD9  
                   start 40AE             ___param_bank 0000         __end_of_INT0_ISR 41E0  
         ??_displayValue 0009                    ?_main 0008                    _ADCLK 3EFF  
                  ?_init 0008                    _ADPCH 3EF1                    _IOCAF 3A47  
                  _IOCBF 3A57                    _IOCCF 3A67                    _IOCEF 3A87  
                  i2l103 41DE                    i2l920 4192                    i2l912 4160  
                  i2l930 41C8                    i2l922 41A4                    i2l914 4170  
                  i2l932 41CC                    i2l924 41A8                    i2l916 417E  
                  i2l934 41DA                    i2l926 41B6                    i2l918 4184  
                  i2l928 41BA                    _PORTA 3FCA                    _PORTD 3FCD  
                  _TRISA 3FC2                    _TRISB 3FC3                    _TRISD 3FC5  
        __end_of_gameWin 4326                    _index 0005                    status 3FD8  
        __initialization 42D0             __end_of_main 4160             __end_of_init 425A  
                 ??_main 000A                   ??_init 0008            __activetblptr 0003  
                 _ADACQH 3EF4                   _ADACQL 3EF3                   _ADRESH 3EF0  
                 _ADRESL 3EEF                   _ADPREH 3EF7                   _ADPREL 3EF6  
          main@index_419 000D                   _ANSELA 3A40                   _ANSELB 3A50  
                 _ANSELD 3A70             ??_ADC_Random 0008                   i2u3_40 4170  
                 i2u3_41 416C                   i2u4_40 4192                   i2u4_41 418E  
                 i2u5_40 41A4                   i2u5_41 41A0                   i2u6_40 41B6  
                 i2u6_41 41B2                   i2u7_40 41C8                   i2u7_41 41C4  
                 i2u8_40 41DA                   i2u8_41 41D6         __end_of_gameOver 4328  
                 clear_0 42D6                ??_gameWin 0008                   isa$std 0001  
       __end_of_playTone 4324       __end_of_ADC_Random 4322             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 42E8     __end_of_displayValue 42D0  
              ?_INT0_ISR 0008            ___rparam_used 0001           __pcstackCOMRAM 0008  
             ??_INT0_ISR 0008                  IVTBASEH 3FD6                  IVTBASEL 3FD5  
                IVTBASEU 3FD7                ?_gameOver 0008         playTone@duration 0008  
              ?_playTone 0008                  __Hparam 0000               _keyPressed 0006  
                __Lparam 0000             __psmallconst 2000                  __pcinit 42D0  
                _gameWin 4324                  __ramtop 2000            ivt0x4008_base 4008  
                __ptext0 40B2                  __ptext1 42EE                  __ptext2 425A  
                __ptext3 4322                  __ptext4 41E0                  __ptext5 4324  
                __ptext6 4326                  __ptext7 430A                  __ptext8 4160  
             ??_gameOver 0008                _IOCBFbits 3A57     end_of_initialization 42E8  
             ??_playTone 0009                  postinc0 3FEE                  postinc2 3FDE  
              _PORTBbits 3FCB                _PORTDbits 3FCD             _displayValue 425A  
           _highestValue 0007                _TRISAbits 3FC2        displayValue@value 0009  
    start_initialization 42D0              __pbssCOMRAM 0001           _wait_for_input 42EE  
            __pivt0x4008 4008                 ?_gameWin 0008   __end_of_wait_for_input 430A  
            __smallconst 2000                 _INT0_ISR 4160                 _PIE0bits 3990  
               _IVTBASEH 3FD6                 _IVTBASEL 3FD5                 _IVTBASEU 3FD7  
               _PIR0bits 39A0        ivt0x4008_undefint 40AC               _ADCON0bits 3EF8  
        ?_wait_for_input 0008        playTone@frequency 0008                main@index 000C  
            _INTCON0bits 3FD2               _ADC_Random 430A                 __Hrparam 0000  
               __Lrparam 0000                 _Sequence 0001               _ANSELAbits 3A40  
               _gameOver 4326                 _playTone 4322                 isa$xinst 0000  
               intlevel2 0000              ?_ADC_Random 0008  
