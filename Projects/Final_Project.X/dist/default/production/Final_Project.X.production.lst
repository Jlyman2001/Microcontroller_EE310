

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 27 15:11:02 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=4,class=CODE,delta=1
    13                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    14                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F47K42 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _ADPREH	set	16119
    54   000000                     _ADRESH	set	16112
    55   000000                     _ANSELAbits	set	14912
    56   000000                     _PORTDbits	set	16333
    57   000000                     _TRISAbits	set	16322
    58   000000                     _IPR1bits	set	14721
    59   000000                     _PIR1bits	set	14753
    60   000000                     _ANSELA	set	14912
    61   000000                     _ANSELB	set	14928
    62   000000                     _TRISB	set	16323
    63   000000                     _TRISD	set	16325
    64   000000                     _PORTA	set	16330
    65   000000                     _ANSELD	set	14960
    66   000000                     _LATA	set	16314
    67   000000                     _LATB	set	16315
    68   000000                     _LATD	set	16317
    69   000000                     _TRISA	set	16322
    70   000000                     _PORTBbits	set	16331
    71   000000                     _PORTD	set	16333
    72   000000                     _ADRESL	set	16111
    73   000000                     _ADPCH	set	16113
    74   000000                     _ADCON0bits	set	16120
    75   000000                     _INTCON0bits	set	16338
    76   000000                     _ADCLK	set	16127
    77   000000                     _ADACQL	set	16115
    78   000000                     _ADPREL	set	16118
    79   000000                     _ADACQH	set	16116
    80   000000                     _IVTBASEL	set	16341
    81   000000                     _IVTBASEH	set	16342
    82   000000                     _IVTBASEU	set	16343
    83   000000                     _PIE1bits	set	14737
    84                           
    85                           ; #config settings
    86                           
    87                           	psect	cinit
    88   0042BA                     __pcinit:
    89                           	callstack 0
    90   0042BA                     start_initialization:
    91                           	callstack 0
    92   0042BA                     __initialization:
    93                           	callstack 0
    94                           
    95                           ; Clear objects allocated to COMRAM (4 bytes)
    96   0042BA  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
    97   0042BC  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
    98   0042BE  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
    99   0042C0  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   100                           
   101                           ;
   102                           ; Setup IVTBASE
   103                           ;
   104   0042C2  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   105   0042C4  6ED5               	movwf	213,c
   106   0042C6  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   107   0042C8  6ED6               	movwf	214,c
   108   0042CA  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   109   0042CC  6ED7               	movwf	215,c
   110   0042CE                     end_of_initialization:
   111                           	callstack 0
   112   0042CE                     __end_of__initialization:
   113                           	callstack 0
   114   0042CE  0100               	movlb	0
   115   0042D0  EF82  F021         	goto	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMRAM
   118   00000B                     __pbssCOMRAM:
   119                           	callstack 0
   120   00000B                     _Sequence:
   121                           	callstack 0
   122   00000B                     	ds	4
   123                           
   124                           	psect	cstackCOMRAM
   125   000001                     __pcstackCOMRAM:
   126                           	callstack 0
   127   000001                     ??_ADC_Test:
   128   000001                     
   129                           ; 1 bytes @ 0x0
   130   000001                     	ds	2
   131   000003                     ADC_Test@sample:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x2
   135   000003                     	ds	1
   136   000004                     ADC_Test@Zeros:
   137                           	callstack 0
   138                           
   139                           ; 1 bytes @ 0x3
   140   000004                     	ds	1
   141   000005                     ADC_Test@Ones:
   142                           	callstack 0
   143                           
   144                           ; 1 bytes @ 0x4
   145   000005                     	ds	1
   146   000006                     ADC_Test@Twos:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x5
   150   000006                     	ds	1
   151   000007                     ADC_Test@Threes:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x6
   155   000007                     	ds	1
   156   000008                     ADC_Test@Errors:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x7
   160   000008                     	ds	1
   161   000009                     ADC_Test@tests:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0x8
   165   000009                     	ds	2
   166   00000B                     
   167                           ; 1 bytes @ 0xA
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   170 ;;
   171 ;; *************** function _main *****************
   172 ;; Defined at:
   173 ;;		line 18 in file "main.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;		None
   178 ;; Return value:  Size  Location     Type
   179 ;;                  1    wreg      void 
   180 ;; Registers used:
   181 ;;		wreg, status,2, status,0, cstack
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   191 ;;Total ram usage:        0 bytes
   192 ;; Hardware stack levels required when called: 3
   193 ;; This function calls:
   194 ;;		_ADC_Test
   195 ;;		_init
   196 ;; This function is called by:
   197 ;;		Startup code after reset
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           	psect	text0
   202   004304                     __ptext0:
   203                           	callstack 0
   204   004304                     _main:
   205                           	callstack 28
   206   004304                     
   207                           ;main.c: 20:     init();
   208   004304  EC1D  F021         	call	_init	;wreg free
   209   004308                     
   210                           ;main.c: 21:     ADC_Test();
   211   004308  EC59  F020         	call	_ADC_Test	;wreg free
   212   00430C  EF57  F020         	goto	start
   213   004310                     __end_of_main:
   214                           	callstack 0
   215                           
   216 ;; *************** function _init *****************
   217 ;; Defined at:
   218 ;;		line 30 in file "./Functions.h"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   236 ;;Total ram usage:        0 bytes
   237 ;; Hardware stack levels used: 1
   238 ;; Hardware stack levels required when called: 1
   239 ;; This function calls:
   240 ;;		Nothing
   241 ;; This function is called by:
   242 ;;		_main
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246                           	psect	text1
   247   00423A                     __ptext1:
   248                           	callstack 0
   249   00423A                     _init:
   250                           	callstack 29
   251   00423A                     
   252                           ;./Functions.h: 32:     TRISB = 0xFF;
   253   00423A  68C3               	setf	195,c	;volatile
   254   00423C                     
   255                           ;./Functions.h: 33:     ANSELB = 0;
   256   00423C  0E00               	movlw	0
   257   00423E  013A               	movlb	58	; () banked
   258   004240  6F50               	movwf	80,b	;volatile
   259                           
   260                           ;./Functions.h: 34:     LATB = 0;
   261   004242  0E00               	movlw	0
   262   004244  6EBB               	movwf	187,c	;volatile
   263                           
   264                           ;./Functions.h: 36:     TRISA = 0x01;
   265   004246  0E01               	movlw	1
   266   004248  6EC2               	movwf	194,c	;volatile
   267                           
   268                           ;./Functions.h: 37:     ANSELA = 0x01;
   269   00424A  0E01               	movlw	1
   270   00424C  6F40               	movwf	64,b	;volatile
   271                           
   272                           ;./Functions.h: 38:     LATA = 0;
   273   00424E  0E00               	movlw	0
   274   004250  6EBA               	movwf	186,c	;volatile
   275                           
   276                           ;./Functions.h: 39:     PORTA = 0;
   277   004252  0E00               	movlw	0
   278   004254  6ECA               	movwf	202,c	;volatile
   279                           
   280                           ;./Functions.h: 41:     TRISD = 0;
   281   004256  0E00               	movlw	0
   282   004258  6EC5               	movwf	197,c	;volatile
   283                           
   284                           ;./Functions.h: 42:     ANSELD = 0;
   285   00425A  0E00               	movlw	0
   286   00425C  6F70               	movwf	112,b	;volatile
   287                           
   288                           ;./Functions.h: 43:     LATD = 0;
   289   00425E  0E00               	movlw	0
   290   004260  6EBD               	movwf	189,c	;volatile
   291                           
   292                           ;./Functions.h: 44:     PORTD = 0;
   293   004262  0E00               	movlw	0
   294   004264  6ECD               	movwf	205,c	;volatile
   295                           
   296                           ;./Functions.h: 51:     ADCON0bits.FM = 1;
   297   004266  013E               	movlb	62	; () banked
   298   004268  51F8               	movf	248,w,b	;volatile
   299   00426A  0BF3               	andlw	-13
   300   00426C  0904               	iorlw	4
   301   00426E  6FF8               	movwf	248,b	;volatile
   302   004270                     
   303                           ; BSR set to: 62
   304                           ;./Functions.h: 53:     ADCON0bits.CS = 0;
   305   004270  99F8               	bcf	248,4,b	;volatile
   306   004272                     
   307                           ; BSR set to: 62
   308                           ;./Functions.h: 55:     TRISAbits.TRISA0 = 1;
   309   004272  80C2               	bsf	194,0,c	;volatile
   310   004274                     
   311                           ; BSR set to: 62
   312                           ;./Functions.h: 57:     ANSELAbits.ANSELA0 = 1;
   313   004274  013A               	movlb	58	; () banked
   314   004276  8140               	bsf	64,0,b	;volatile
   315                           
   316                           ;./Functions.h: 59:     ADPCH = 0;
   317   004278  0E00               	movlw	0
   318   00427A  013E               	movlb	62	; () banked
   319   00427C  6FF1               	movwf	241,b	;volatile
   320                           
   321                           ;./Functions.h: 61:     ADCLK = 0;
   322   00427E  0E00               	movlw	0
   323   004280  6FFF               	movwf	255,b	;volatile
   324                           
   325                           ;./Functions.h: 63:     ADRESL = 0;
   326   004282  0E00               	movlw	0
   327   004284  6FEF               	movwf	239,b	;volatile
   328                           
   329                           ;./Functions.h: 64:     ADRESH = 0;
   330   004286  0E00               	movlw	0
   331   004288  6FF0               	movwf	240,b	;volatile
   332                           
   333                           ;./Functions.h: 66:     ADPREL = 0;
   334   00428A  0E00               	movlw	0
   335   00428C  6FF6               	movwf	246,b	;volatile
   336                           
   337                           ;./Functions.h: 67:     ADPREH = 0;
   338   00428E  0E00               	movlw	0
   339   004290  6FF7               	movwf	247,b	;volatile
   340                           
   341                           ;./Functions.h: 69:     ADACQL = 0;
   342   004292  0E00               	movlw	0
   343   004294  6FF3               	movwf	243,b	;volatile
   344                           
   345                           ;./Functions.h: 70:     ADACQH = 0;
   346   004296  0E00               	movlw	0
   347   004298  6FF4               	movwf	244,b	;volatile
   348   00429A                     
   349                           ; BSR set to: 62
   350                           ;./Functions.h: 72:     ADCON0bits.ON = 1;
   351   00429A  8FF8               	bsf	248,7,b	;volatile
   352   00429C                     
   353                           ; BSR set to: 62
   354                           ;./Functions.h: 75:     INTCON0bits.IPEN = 1;
   355   00429C  8AD2               	bsf	210,5,c	;volatile
   356   00429E                     
   357                           ; BSR set to: 62
   358                           ;./Functions.h: 76:     INTCON0bits.GIEH = 1;
   359   00429E  8ED2               	bsf	210,7,c	;volatile
   360   0042A0                     
   361                           ; BSR set to: 62
   362                           ;./Functions.h: 77:     INTCON0bits.GIEL = 1;
   363   0042A0  8CD2               	bsf	210,6,c	;volatile
   364   0042A2                     
   365                           ; BSR set to: 62
   366                           ;./Functions.h: 78:     INTCON0bits.INT0EDG = 1;
   367   0042A2  80D2               	bsf	210,0,c	;volatile
   368   0042A4                     
   369                           ; BSR set to: 62
   370                           ;./Functions.h: 79:     IPR1bits.INT0IP = 0;
   371   0042A4  0139               	movlb	57	; () banked
   372   0042A6  9181               	bcf	129,0,b	;volatile
   373   0042A8                     
   374                           ; BSR set to: 57
   375                           ;./Functions.h: 80:     PIE1bits.INT0IE = 1;
   376   0042A8  8191               	bsf	145,0,b	;volatile
   377   0042AA                     
   378                           ; BSR set to: 57
   379                           ;./Functions.h: 81:     PIR1bits.INT0IF = 0;
   380   0042AA  91A1               	bcf	161,0,b	;volatile
   381                           
   382                           ;./Functions.h: 82:     IVTBASEU = 0;
   383   0042AC  0E00               	movlw	0
   384   0042AE  6ED7               	movwf	215,c	;volatile
   385                           
   386                           ;./Functions.h: 83:     IVTBASEH = 0x40;
   387   0042B0  0E40               	movlw	64
   388   0042B2  6ED6               	movwf	214,c	;volatile
   389                           
   390                           ;./Functions.h: 84:     IVTBASEL = 0x08;
   391   0042B4  0E08               	movlw	8
   392   0042B6  6ED5               	movwf	213,c	;volatile
   393   0042B8                     
   394                           ; BSR set to: 57
   395   0042B8  0012               	return		;funcret
   396   0042BA                     __end_of_init:
   397                           	callstack 0
   398                           
   399 ;; *************** function _ADC_Test *****************
   400 ;; Defined at:
   401 ;;		line 103 in file "./Functions.h"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  tests           2    8[COMRAM] int 
   406 ;;  Errors          1    7[COMRAM] unsigned char 
   407 ;;  Threes          1    6[COMRAM] unsigned char 
   408 ;;  Twos            1    5[COMRAM] unsigned char 
   409 ;;  Ones            1    4[COMRAM] unsigned char 
   410 ;;  Zeros           1    3[COMRAM] unsigned char 
   411 ;;  sample          1    2[COMRAM] unsigned char 
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   422 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   423 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   424 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   425 ;;Total ram usage:       10 bytes
   426 ;; Hardware stack levels used: 1
   427 ;; Hardware stack levels required when called: 2
   428 ;; This function calls:
   429 ;;		_ADC_Random
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           	psect	text2
   436   0040B2                     __ptext2:
   437                           	callstack 0
   438   0040B2                     _ADC_Test:
   439                           	callstack 28
   440   0040B2                     
   441                           ;./Functions.h: 105:     char Zeros = 0;
   442   0040B2  0E00               	movlw	0
   443   0040B4  6E04               	movwf	ADC_Test@Zeros^0,c
   444                           
   445                           ;./Functions.h: 106:     char Ones = 0;
   446   0040B6  0E00               	movlw	0
   447   0040B8  6E05               	movwf	ADC_Test@Ones^0,c
   448                           
   449                           ;./Functions.h: 107:     char Twos = 0;
   450   0040BA  0E00               	movlw	0
   451   0040BC  6E06               	movwf	ADC_Test@Twos^0,c
   452                           
   453                           ;./Functions.h: 108:     char Threes = 0;
   454   0040BE  0E00               	movlw	0
   455   0040C0  6E07               	movwf	ADC_Test@Threes^0,c
   456                           
   457                           ;./Functions.h: 109:     char Errors = 0;
   458   0040C2  0E00               	movlw	0
   459   0040C4  6E08               	movwf	ADC_Test@Errors^0,c
   460                           
   461                           ;./Functions.h: 110:     for (int tests = 0; tests < 32; tests++)
   462   0040C6  0E00               	movlw	0
   463   0040C8  6E0A               	movwf	(ADC_Test@tests+1)^0,c
   464   0040CA  0E00               	movlw	0
   465   0040CC  6E09               	movwf	ADC_Test@tests^0,c
   466   0040CE                     l831:
   467                           
   468                           ;./Functions.h: 111:     {;./Functions.h: 112:         sample = ADC_Random();
   469   0040CE  EC6A  F021         	call	_ADC_Random	;wreg free
   470   0040D2  6E03               	movwf	ADC_Test@sample^0,c
   471   0040D4                     
   472                           ;./Functions.h: 113:         _delay((unsigned long)((100)*(4000000/4000.0)));
   473   0040D4  0E82               	movlw	130
   474   0040D6  6E01               	movwf	??_ADC_Test^0,c
   475   0040D8  0EDE               	movlw	222
   476   0040DA                     u97:
   477   0040DA  2EE8               	decfsz	wreg,f,c
   478   0040DC  D7FE               	bra	u97
   479   0040DE  2E01               	decfsz	??_ADC_Test^0,f,c
   480   0040E0  D7FC               	bra	u97
   481                           
   482                           ;./Functions.h: 114:         switch (sample)
   483   0040E2  EF82  F020         	goto	l847
   484   0040E6                     l835:
   485                           
   486                           ;./Functions.h: 117:                     Zeros++;
   487   0040E6  2A04               	incf	ADC_Test@Zeros^0,f,c
   488                           
   489                           ;./Functions.h: 118:                     break;
   490   0040E8  EF95  F020         	goto	l849
   491   0040EC                     l837:
   492                           
   493                           ;./Functions.h: 120:                     Ones++;
   494   0040EC  2A05               	incf	ADC_Test@Ones^0,f,c
   495                           
   496                           ;./Functions.h: 121:                     break;
   497   0040EE  EF95  F020         	goto	l849
   498   0040F2                     l839:
   499                           
   500                           ;./Functions.h: 123:                     Twos++;
   501   0040F2  2A06               	incf	ADC_Test@Twos^0,f,c
   502                           
   503                           ;./Functions.h: 124:                     break;
   504   0040F4  EF95  F020         	goto	l849
   505   0040F8                     l841:
   506                           
   507                           ;./Functions.h: 126:                     Threes++;
   508   0040F8  2A07               	incf	ADC_Test@Threes^0,f,c
   509                           
   510                           ;./Functions.h: 127:                     break;
   511   0040FA  EF95  F020         	goto	l849
   512   0040FE                     l843:
   513                           
   514                           ;./Functions.h: 129:                     Errors++;
   515   0040FE  2A08               	incf	ADC_Test@Errors^0,f,c
   516                           
   517                           ;./Functions.h: 130:                     break;
   518   004100  EF95  F020         	goto	l849
   519   004104                     l847:
   520   004104  5003               	movf	ADC_Test@sample^0,w,c
   521                           
   522                           ; Switch size 1, requested type "simple"
   523                           ; Number of cases is 4, Range of values is 0 to 3
   524                           ; switch strategies available:
   525                           ; Name         Instructions Cycles
   526                           ; simple_byte           13     7 (average)
   527                           ;	Chosen strategy is simple_byte
   528   004106  0A00               	xorlw	0	; case 0
   529   004108  B4D8               	btfsc	status,2,c
   530   00410A  EF73  F020         	goto	l835
   531   00410E  0A01               	xorlw	1	; case 1
   532   004110  B4D8               	btfsc	status,2,c
   533   004112  EF76  F020         	goto	l837
   534   004116  0A03               	xorlw	3	; case 2
   535   004118  B4D8               	btfsc	status,2,c
   536   00411A  EF79  F020         	goto	l839
   537   00411E  0A01               	xorlw	1	; case 3
   538   004120  B4D8               	btfsc	status,2,c
   539   004122  EF7C  F020         	goto	l841
   540   004126  EF7F  F020         	goto	l843
   541   00412A                     l849:
   542                           
   543                           ;./Functions.h: 132:     }
   544   00412A  4A09               	infsnz	ADC_Test@tests^0,f,c
   545   00412C  2A0A               	incf	(ADC_Test@tests+1)^0,f,c
   546   00412E  BE0A               	btfsc	(ADC_Test@tests+1)^0,7,c
   547   004130  EFA3  F020         	goto	u21
   548   004134  500A               	movf	(ADC_Test@tests+1)^0,w,c
   549   004136  E109               	bnz	u20
   550   004138  0E20               	movlw	32
   551   00413A  5C09               	subwf	ADC_Test@tests^0,w,c
   552   00413C  A0D8               	btfss	status,0,c
   553   00413E  EFA3  F020         	goto	u21
   554   004142  EFA5  F020         	goto	u20
   555   004146                     u21:
   556   004146  EF67  F020         	goto	l831
   557   00414A                     u20:
   558   00414A                     
   559                           ;./Functions.h: 134:     PORTD = (Zeros << 1);
   560   00414A  5004               	movf	ADC_Test@Zeros^0,w,c
   561   00414C  2404               	addwf	ADC_Test@Zeros^0,w,c
   562   00414E  6ECD               	movwf	205,c	;volatile
   563   004150                     l97:
   564   004150  A2CB               	btfss	203,1,c	;volatile
   565   004152  EFAD  F020         	goto	u31
   566   004156  EFAF  F020         	goto	u30
   567   00415A                     u31:
   568   00415A  EFA8  F020         	goto	l97
   569   00415E                     u30:
   570   00415E                     
   571                           ;./Functions.h: 136:     _delay((unsigned long)((200)*(4000000/4000.0)));
   572   00415E  0E02               	movlw	2
   573   004160  6E02               	movwf	(??_ADC_Test+1)^0,c
   574   004162  0E04               	movlw	4
   575   004164  6E01               	movwf	??_ADC_Test^0,c
   576   004166  0EBA               	movlw	186
   577   004168                     u107:
   578   004168  2EE8               	decfsz	wreg,f,c
   579   00416A  D7FE               	bra	u107
   580   00416C  2E01               	decfsz	??_ADC_Test^0,f,c
   581   00416E  D7FC               	bra	u107
   582   004170  2E02               	decfsz	(??_ADC_Test+1)^0,f,c
   583   004172  D7FA               	bra	u107
   584   004174  D000               	nop2	
   585   004176                     
   586                           ;./Functions.h: 137:     PORTD = (Ones << 1);
   587   004176  5005               	movf	ADC_Test@Ones^0,w,c
   588   004178  2405               	addwf	ADC_Test@Ones^0,w,c
   589   00417A  6ECD               	movwf	205,c	;volatile
   590   00417C                     l100:
   591   00417C  A2CB               	btfss	203,1,c	;volatile
   592   00417E  EFC3  F020         	goto	u41
   593   004182  EFC5  F020         	goto	u40
   594   004186                     u41:
   595   004186  EFBE  F020         	goto	l100
   596   00418A                     u40:
   597   00418A                     
   598                           ;./Functions.h: 139:     _delay((unsigned long)((200)*(4000000/4000.0)));
   599   00418A  0E02               	movlw	2
   600   00418C  6E02               	movwf	(??_ADC_Test+1)^0,c
   601   00418E  0E04               	movlw	4
   602   004190  6E01               	movwf	??_ADC_Test^0,c
   603   004192  0EBA               	movlw	186
   604   004194                     u117:
   605   004194  2EE8               	decfsz	wreg,f,c
   606   004196  D7FE               	bra	u117
   607   004198  2E01               	decfsz	??_ADC_Test^0,f,c
   608   00419A  D7FC               	bra	u117
   609   00419C  2E02               	decfsz	(??_ADC_Test+1)^0,f,c
   610   00419E  D7FA               	bra	u117
   611   0041A0  D000               	nop2	
   612   0041A2                     
   613                           ;./Functions.h: 140:     PORTD = (Twos << 1);
   614   0041A2  5006               	movf	ADC_Test@Twos^0,w,c
   615   0041A4  2406               	addwf	ADC_Test@Twos^0,w,c
   616   0041A6  6ECD               	movwf	205,c	;volatile
   617   0041A8                     l103:
   618   0041A8  A2CB               	btfss	203,1,c	;volatile
   619   0041AA  EFD9  F020         	goto	u51
   620   0041AE  EFDB  F020         	goto	u50
   621   0041B2                     u51:
   622   0041B2  EFD4  F020         	goto	l103
   623   0041B6                     u50:
   624   0041B6                     
   625                           ;./Functions.h: 142:     _delay((unsigned long)((200)*(4000000/4000.0)));
   626   0041B6  0E02               	movlw	2
   627   0041B8  6E02               	movwf	(??_ADC_Test+1)^0,c
   628   0041BA  0E04               	movlw	4
   629   0041BC  6E01               	movwf	??_ADC_Test^0,c
   630   0041BE  0EBA               	movlw	186
   631   0041C0                     u127:
   632   0041C0  2EE8               	decfsz	wreg,f,c
   633   0041C2  D7FE               	bra	u127
   634   0041C4  2E01               	decfsz	??_ADC_Test^0,f,c
   635   0041C6  D7FC               	bra	u127
   636   0041C8  2E02               	decfsz	(??_ADC_Test+1)^0,f,c
   637   0041CA  D7FA               	bra	u127
   638   0041CC  D000               	nop2	
   639   0041CE                     
   640                           ;./Functions.h: 143:     PORTD = (Threes << 1);
   641   0041CE  5007               	movf	ADC_Test@Threes^0,w,c
   642   0041D0  2407               	addwf	ADC_Test@Threes^0,w,c
   643   0041D2  6ECD               	movwf	205,c	;volatile
   644   0041D4                     l106:
   645   0041D4  A2CB               	btfss	203,1,c	;volatile
   646   0041D6  EFEF  F020         	goto	u61
   647   0041DA  EFF1  F020         	goto	u60
   648   0041DE                     u61:
   649   0041DE  EFEA  F020         	goto	l106
   650   0041E2                     u60:
   651   0041E2                     
   652                           ;./Functions.h: 145:     _delay((unsigned long)((200)*(4000000/4000.0)));
   653   0041E2  0E02               	movlw	2
   654   0041E4  6E02               	movwf	(??_ADC_Test+1)^0,c
   655   0041E6  0E04               	movlw	4
   656   0041E8  6E01               	movwf	??_ADC_Test^0,c
   657   0041EA  0EBA               	movlw	186
   658   0041EC                     u137:
   659   0041EC  2EE8               	decfsz	wreg,f,c
   660   0041EE  D7FE               	bra	u137
   661   0041F0  2E01               	decfsz	??_ADC_Test^0,f,c
   662   0041F2  D7FC               	bra	u137
   663   0041F4  2E02               	decfsz	(??_ADC_Test+1)^0,f,c
   664   0041F6  D7FA               	bra	u137
   665   0041F8  D000               	nop2	
   666   0041FA                     
   667                           ;./Functions.h: 146:     PORTD = (Errors << 1);
   668   0041FA  5008               	movf	ADC_Test@Errors^0,w,c
   669   0041FC  2408               	addwf	ADC_Test@Errors^0,w,c
   670   0041FE  6ECD               	movwf	205,c	;volatile
   671   004200                     l109:
   672   004200  A2CB               	btfss	203,1,c	;volatile
   673   004202  EF05  F021         	goto	u71
   674   004206  EF07  F021         	goto	u70
   675   00420A                     u71:
   676   00420A  EF00  F021         	goto	l109
   677   00420E                     u70:
   678   00420E                     
   679                           ;./Functions.h: 148:     _delay((unsigned long)((200)*(4000000/4000.0)));
   680   00420E  0E02               	movlw	2
   681   004210  6E02               	movwf	(??_ADC_Test+1)^0,c
   682   004212  0E04               	movlw	4
   683   004214  6E01               	movwf	??_ADC_Test^0,c
   684   004216  0EBA               	movlw	186
   685   004218                     u147:
   686   004218  2EE8               	decfsz	wreg,f,c
   687   00421A  D7FE               	bra	u147
   688   00421C  2E01               	decfsz	??_ADC_Test^0,f,c
   689   00421E  D7FC               	bra	u147
   690   004220  2E02               	decfsz	(??_ADC_Test+1)^0,f,c
   691   004222  D7FA               	bra	u147
   692   004224  D000               	nop2	
   693   004226                     
   694                           ;./Functions.h: 150:     PORTDbits.RD0 = 1;
   695   004226  80CD               	bsf	205,0,c	;volatile
   696                           
   697                           ;./Functions.h: 151:     _delay((unsigned long)((100)*(4000000/4000.0)));
   698   004228  0E82               	movlw	130
   699   00422A  6E01               	movwf	??_ADC_Test^0,c
   700   00422C  0EDE               	movlw	222
   701   00422E                     u157:
   702   00422E  2EE8               	decfsz	wreg,f,c
   703   004230  D7FE               	bra	u157
   704   004232  2E01               	decfsz	??_ADC_Test^0,f,c
   705   004234  D7FC               	bra	u157
   706   004236                     
   707                           ;./Functions.h: 152:     PORTDbits.RD0 = 0;
   708   004236  90CD               	bcf	205,0,c	;volatile
   709   004238  0012               	return		;funcret
   710   00423A                     __end_of_ADC_Test:
   711                           	callstack 0
   712                           
   713 ;; *************** function _ADC_Random *****************
   714 ;; Defined at:
   715 ;;		line 92 in file "./Functions.h"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      unsigned char 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   733 ;;Total ram usage:        0 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_ADC_Test
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text3
   744   0042D4                     __ptext3:
   745                           	callstack 0
   746   0042D4                     _ADC_Random:
   747                           	callstack 28
   748   0042D4                     
   749                           ;./Functions.h: 94:     ADCON0bits.GO = 1;
   750   0042D4  013E               	movlb	62	; () banked
   751   0042D6  81F8               	bsf	248,0,b	;volatile
   752   0042D8                     l82:
   753                           
   754                           ; BSR set to: 62
   755   0042D8  B1F8               	btfsc	248,0,b	;volatile
   756   0042DA  EF71  F021         	goto	u11
   757   0042DE  EF73  F021         	goto	u10
   758   0042E2                     u11:
   759   0042E2  EF6C  F021         	goto	l82
   760   0042E6                     u10:
   761   0042E6                     
   762                           ; BSR set to: 62
   763                           ;./Functions.h: 99:     return (ADRESL & 0x03);
   764   0042E6  51EF               	movf	239,w,b	;volatile
   765   0042E8  0B03               	andlw	3
   766   0042EA                     
   767                           ; BSR set to: 62
   768   0042EA  0012               	return		;funcret
   769   0042EC                     __end_of_ADC_Random:
   770                           	callstack 0
   771                           
   772 ;; *************** function _INT0_ISR *****************
   773 ;; Defined at:
   774 ;;		line 18 in file "./Functions.h"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		None
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		Interrupt level 2
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text4
   802   0042EC                     __ptext4:
   803                           	callstack 0
   804   0042EC                     _INT0_ISR:
   805                           	callstack 28
   806   0042EC                     
   807                           ;./Functions.h: 21:     if (PIR1bits.INT0IF == 1)
   808   0042EC  0139               	movlb	57	; () banked
   809   0042EE  A1A1               	btfss	161,0,b	;volatile
   810   0042F0  EF7C  F021         	goto	i2u8_41
   811   0042F4  EF7E  F021         	goto	i2u8_40
   812   0042F8                     i2u8_41:
   813   0042F8  EF81  F021         	goto	i2l76
   814   0042FC                     i2u8_40:
   815   0042FC                     
   816                           ; BSR set to: 57
   817   0042FC  00FF               	reset		;# 
   818                           
   819                           ;./Functions.h: 24:         PIR1bits.INT0IF = 0;
   820   0042FE  0139               	movlb	57	; () banked
   821   004300  91A1               	bcf	161,0,b	;volatile
   822   004302                     i2l76:
   823                           
   824                           ; BSR set to: 57
   825   004302  0011               	retfie		f
   826   004304                     __end_of_INT0_ISR:
   827                           	callstack 0
   828                           
   829                           ;
   830                           ; H/W Interrupt Vector Table @ 0x4008
   831                           ;
   832                           
   833                           	psect	ivt0x4008
   834   004008                     __pivt0x4008:
   835                           	callstack 0
   836   004008                     ivt0x4008_base:
   837                           	callstack 0
   838                           
   839                           ; Vector 0 : SWINT
   840   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
   841                           
   842                           ; Vector 1 : HLVD
   843   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
   844                           
   845                           ; Vector 2 : OSF
   846   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
   847                           
   848                           ; Vector 3 : CSW
   849   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
   850                           
   851                           ; Vector 4 : NVM
   852   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
   853                           
   854                           ; Vector 5 : SCAN
   855   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
   856                           
   857                           ; Vector 6 : CRC
   858   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
   859                           
   860                           ; Vector 7 : IOC
   861   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
   862                           
   863                           ; Vector 8 : INT0
   864   004018  10BB               	dw	_INT0_ISR shr (0+2)
   865                           
   866                           ; Vector 9 : ZCD
   867   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
   868                           
   869                           ; Vector 10 : AD
   870   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
   871                           
   872                           ; Vector 11 : ADT
   873   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
   874                           
   875                           ; Vector 12 : CMP1
   876   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
   877                           
   878                           ; Vector 13 : SMT1
   879   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
   880                           
   881                           ; Vector 14 : SMT1PRA
   882   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
   883                           
   884                           ; Vector 15 : SMT1PRW
   885   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
   886                           
   887                           ; Vector 16 : DMA1SCNT
   888   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
   889                           
   890                           ; Vector 17 : DMA1DCNT
   891   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
   892                           
   893                           ; Vector 18 : DMA1OR
   894   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
   895                           
   896                           ; Vector 19 : DMA1A
   897   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
   898                           
   899                           ; Vector 20 : SPI1RX
   900   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
   901                           
   902                           ; Vector 21 : SPI1TX
   903   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
   904                           
   905                           ; Vector 22 : SPI1
   906   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
   907                           
   908                           ; Vector 23 : I2C1RX
   909   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
   910                           
   911                           ; Vector 24 : I2C1TX
   912   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
   913                           
   914                           ; Vector 25 : I2C1
   915   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
   916                           
   917                           ; Vector 26 : I2C1E
   918   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
   919                           
   920                           ; Vector 27 : U1RX
   921   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
   922                           
   923                           ; Vector 28 : U1TX
   924   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
   925                           
   926                           ; Vector 29 : U1E
   927   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
   928                           
   929                           ; Vector 30 : U1
   930   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
   931                           
   932                           ; Vector 31 : TMR0
   933   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
   934                           
   935                           ; Vector 32 : TMR1
   936   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
   937                           
   938                           ; Vector 33 : TMR1G
   939   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
   940                           
   941                           ; Vector 34 : TMR2
   942   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
   943                           
   944                           ; Vector 35 : CCP1
   945   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
   946                           
   947                           ; Vector 36 : Undefined
   948   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
   949                           
   950                           ; Vector 37 : NCO1
   951   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
   952                           
   953                           ; Vector 38 : CWG1
   954   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
   955                           
   956                           ; Vector 39 : CLC1
   957   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
   958                           
   959                           ; Vector 40 : INT1
   960   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
   961                           
   962                           ; Vector 41 : CMP2
   963   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
   964                           
   965                           ; Vector 42 : DMA2SCNT
   966   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
   967                           
   968                           ; Vector 43 : DMA2DCNT
   969   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
   970                           
   971                           ; Vector 44 : DMA2OR
   972   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
   973                           
   974                           ; Vector 45 : DMA2A
   975   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
   976                           
   977                           ; Vector 46 : I2C2RX
   978   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
   979                           
   980                           ; Vector 47 : I2C2TX
   981   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
   982                           
   983                           ; Vector 48 : I2C2
   984   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
   985                           
   986                           ; Vector 49 : I2C2E
   987   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
   988                           
   989                           ; Vector 50 : U2RX
   990   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
   991                           
   992                           ; Vector 51 : U2TX
   993   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
   994                           
   995                           ; Vector 52 : U2E
   996   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
   997                           
   998                           ; Vector 53 : U2
   999   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1000                           
  1001                           ; Vector 54 : TMR3
  1002   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1003                           
  1004                           ; Vector 55 : TMR3G
  1005   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1006                           
  1007                           ; Vector 56 : TMR4
  1008   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1009                           
  1010                           ; Vector 57 : CCP2
  1011   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1012                           
  1013                           ; Vector 58 : Undefined
  1014   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1015                           
  1016                           ; Vector 59 : CWG2
  1017   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1018                           
  1019                           ; Vector 60 : CLC2
  1020   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1021                           
  1022                           ; Vector 61 : INT2
  1023   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1024                           
  1025                           ; Vector 62 : Undefined
  1026   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1027                           
  1028                           ; Vector 63 : Undefined
  1029   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1030                           
  1031                           ; Vector 64 : Undefined
  1032   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1033                           
  1034                           ; Vector 65 : Undefined
  1035   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1036                           
  1037                           ; Vector 66 : Undefined
  1038   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1039                           
  1040                           ; Vector 67 : Undefined
  1041   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1042                           
  1043                           ; Vector 68 : Undefined
  1044   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1045                           
  1046                           ; Vector 69 : Undefined
  1047   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1048                           
  1049                           ; Vector 70 : TMR5
  1050   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1051                           
  1052                           ; Vector 71 : TMR5G
  1053   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1054                           
  1055                           ; Vector 72 : TMR6
  1056   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1057                           
  1058                           ; Vector 73 : CCP3
  1059   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1060                           
  1061                           ; Vector 74 : CWG3
  1062   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1063                           
  1064                           ; Vector 75 : CLC3
  1065   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1066                           
  1067                           ; Vector 76 : Undefined
  1068   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1069                           
  1070                           ; Vector 77 : Undefined
  1071   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1072                           
  1073                           ; Vector 78 : Undefined
  1074   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1075                           
  1076                           ; Vector 79 : Undefined
  1077   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1078                           
  1079                           ; Vector 80 : CCP4
  1080   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1081                           
  1082                           ; Vector 81 : CLC4
  1083   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1084   0040AC                     ivt0x4008_undefint:
  1085                           	callstack 0
  1086   0040AC  00FF               	reset	
  1087                           
  1088                           	psect	smallconst
  1089   002000                     __psmallconst:
  1090                           	callstack 0
  1091   002000  00                 	db	0
  1092   002001  00                 	db	0	; dummy byte at the end
  1093   000000                     
  1094                           	psect	rparam
  1095   000000                     
  1096                           	psect	config
  1097                           
  1098                           ;Config register CONFIG1L @ 0x300000
  1099                           ;	External Oscillator Selection
  1100                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1101                           ;	Reset Oscillator Selection
  1102                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1103   300000                     	org	3145728
  1104   300000  F8                 	db	248
  1105                           
  1106                           ;Config register CONFIG1H @ 0x300001
  1107                           ;	Clock out Enable bit
  1108                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1109                           ;	PRLOCKED One-Way Set Enable bit
  1110                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1111                           ;	Clock Switch Enable bit
  1112                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1113                           ;	Fail-Safe Clock Monitor Enable bit
  1114                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1115   300001                     	org	3145729
  1116   300001  FF                 	db	255
  1117                           
  1118                           ;Config register CONFIG2L @ 0x300002
  1119                           ;	MCLR Enable bit
  1120                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1121                           ;	Power-up timer selection bits
  1122                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1123                           ;	Multi-vector enable bit
  1124                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1125                           ;	IVTLOCK bit One-way set enable bit
  1126                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1127                           ;	Low Power BOR Enable bit
  1128                           ;	LPBOREN = OFF, ULPBOR disabled
  1129                           ;	Brown-out Reset Enable bits
  1130                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1131   300002                     	org	3145730
  1132   300002  FF                 	db	255
  1133                           
  1134                           ;Config register CONFIG2H @ 0x300003
  1135                           ;	Brown-out Reset Voltage Selection bits
  1136                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1137                           ;	ZCD Disable bit
  1138                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1139                           ;	PPSLOCK bit One-Way Set Enable bit
  1140                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1141                           ;	Stack Full/Underflow Reset Enable bit
  1142                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1143                           ;	Debugger Enable bit
  1144                           ;	DEBUG = OFF, Background debugger disabled
  1145                           ;	Extended Instruction Set Enable bit
  1146                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1147   300003                     	org	3145731
  1148   300003  FF                 	db	255
  1149                           
  1150                           ;Config register CONFIG3L @ 0x300004
  1151                           ;	WDT Period selection bits
  1152                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1153                           ;	WDT operating mode
  1154                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1155   300004                     	org	3145732
  1156   300004  9F                 	db	159
  1157                           
  1158                           ;Config register CONFIG3H @ 0x300005
  1159                           ;	WDT Window Select bits
  1160                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1161                           ;	WDT input clock selector
  1162                           ;	WDTCCS = SC, Software Control
  1163   300005                     	org	3145733
  1164   300005  FF                 	db	255
  1165                           
  1166                           ;Config register CONFIG4L @ 0x300006
  1167                           ;	Boot Block Size selection bits
  1168                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1169                           ;	Boot Block enable bit
  1170                           ;	BBEN = OFF, Boot block disabled
  1171                           ;	Storage Area Flash enable bit
  1172                           ;	SAFEN = OFF, SAF disabled
  1173                           ;	Application Block write protection bit
  1174                           ;	WRTAPP = OFF, Application Block not write protected
  1175   300006                     	org	3145734
  1176   300006  FF                 	db	255
  1177                           
  1178                           ;Config register CONFIG4H @ 0x300007
  1179                           ;	Boot Block Write Protection bit
  1180                           ;	WRTB = OFF, Boot Block not write-protected
  1181                           ;	Configuration Register Write Protection bit
  1182                           ;	WRTC = OFF, Configuration registers not write-protected
  1183                           ;	Data EEPROM Write Protection bit
  1184                           ;	WRTD = OFF, Data EEPROM not write-protected
  1185                           ;	SAF Write protection bit
  1186                           ;	WRTSAF = OFF, SAF not Write Protected
  1187                           ;	Low Voltage Programming Enable bit
  1188                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1189   300007                     	org	3145735
  1190   300007  FF                 	db	255
  1191                           
  1192                           ;Config register CONFIG5L @ 0x300008
  1193                           ;	PFM and Data EEPROM Code Protection bit
  1194                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1195   300008                     	org	3145736
  1196   300008  FF                 	db	255
  1197                           
  1198                           ;Config register CONFIG5H @ 0x300009
  1199                           ;	unspecified, using default values
  1200   300009                     	org	3145737
  1201   300009  FF                 	db	255
  1202                           tosu	equ	0x3FFF
  1203                           tosh	equ	0x3FFE
  1204                           tosl	equ	0x3FFD
  1205                           stkptr	equ	0x3FFC
  1206                           pclatu	equ	0x3FFB
  1207                           pclath	equ	0x3FFA
  1208                           pcl	equ	0x3FF9
  1209                           tblptru	equ	0x3FF8
  1210                           tblptrh	equ	0x3FF7
  1211                           tblptrl	equ	0x3FF6
  1212                           tablat	equ	0x3FF5
  1213                           prodh	equ	0x3FF4
  1214                           prodl	equ	0x3FF3
  1215                           indf0	equ	0x3FEF
  1216                           postinc0	equ	0x3FEE
  1217                           postdec0	equ	0x3FED
  1218                           preinc0	equ	0x3FEC
  1219                           plusw0	equ	0x3FEB
  1220                           fsr0h	equ	0x3FEA
  1221                           fsr0l	equ	0x3FE9
  1222                           wreg	equ	0x3FE8
  1223                           indf1	equ	0x3FE7
  1224                           postinc1	equ	0x3FE6
  1225                           postdec1	equ	0x3FE5
  1226                           preinc1	equ	0x3FE4
  1227                           plusw1	equ	0x3FE3
  1228                           fsr1h	equ	0x3FE2
  1229                           fsr1l	equ	0x3FE1
  1230                           bsr	equ	0x3FE0
  1231                           indf2	equ	0x3FDF
  1232                           postinc2	equ	0x3FDE
  1233                           postdec2	equ	0x3FDD
  1234                           preinc2	equ	0x3FDC
  1235                           plusw2	equ	0x3FDB
  1236                           fsr2h	equ	0x3FDA
  1237                           fsr2l	equ	0x3FD9
  1238                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_Test

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                           _ADC_Test
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Test                                            10    10      0     120
                                              0 COMRAM    10    10      0
                         _ADC_Random
 ---------------------------------------------------------------------------------
 (2) _ADC_Random                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Test
     _ADC_Random
   _init

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      88        0.0%
BITBIGSFRhlhlhl    47E      0       0      80        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRll        181      0       0      86        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhlhlhh     BA      0       0      76        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRhlll       9E      0       0      83        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       E       1       14.7%
BITBIGSFRhhhhhh     28      0       0      68        0.0%
BITBIGSFRhlhll      1F      0       0      81        0.0%
BITBIGSFRlhh         F      0       0      84        0.0%
BITBIGSFRlhl         F      0       0      85        0.0%
BITBIGSFRhllh        F      0       0      82        0.0%
BITBIGSFRhlhlhh      6      0       0      77        0.0%
BITBIGSFRhhhhl       4      0       0      70        0.0%
BITBIGSFRhlhhh       4      0       0      74        0.0%
BITBIGSFRhhlh        4      0       0      72        0.0%
BITBIGSFRhhhhhl      2      0       0      69        0.0%
BITBIGSFRhlhlhl      1      0       0      78        0.0%
BITBIGSFRhlhlhl      1      0       0      79        0.0%
BITBIGSFRhhhl        1      0       0      71        0.0%
BITBIGSFRhlhhl       1      0       0      75        0.0%
BITBIGSFRhhll        1      0       0      73        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      87        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 27 15:11:02 2024

                     l82 42D8                       l85 42EA                       l79 42B8  
                     l97 4150                       u10 42E6                       u11 42E2  
                     u20 414A                       u21 4146                       u30 415E  
                     u31 415A                       u40 418A                       u41 4186  
                     u50 41B6                       u51 41B2                       u60 41E2  
                     u61 41DE                       u70 420E                       u71 420A  
                     u97 40DA                      l100 417C                      l103 41A8  
                    l112 4238                      l106 41D4                      l109 4200  
                    l117 430C                      l801 423C                      l811 429C  
                    l803 4270                      l821 42A8                      l813 429E  
                    l805 4272                      l831 40CE                      l823 42AA  
                    l815 42A0                      l807 4274                      l841 40F8  
                    l833 40D4                      l825 40B2                      l817 42A2  
                    l809 429A                      l851 412E                      l843 40FE  
                    l835 40E6                      l819 42A4                      l861 41A2  
                    l853 414A                      l837 40EC                      l871 420E  
                    l863 41B6                      l855 415E                      l839 40F2  
                    l847 4104                      l793 42D4                      l873 4226  
                    l865 41CE                      l857 4176                      l849 412A  
                    l795 42E6                      l875 4236                      l867 41E2  
                    l859 418A                      l883 4304                      l869 41FA  
                    l885 4308                      l799 423A                      u107 4168  
                    u117 4194                      u127 41C0                      u137 41EC  
                    u147 4218                      u157 422E                      wreg 3FE8  
                   _LATA 3FBA                     _LATB 3FBB                     _LATD 3FBD  
                   i2l76 4302                     _main 4304                     _init 423A  
       __end_of_ADC_Test 423A                     start 40AE             ___param_bank 0000  
       __end_of_INT0_ISR 4304                    ?_main 0001                    _ADCLK 3EFF  
                  ?_init 0001                    _ADPCH 3EF1                    i2l881 42FC  
                  i2l879 42EC                    _PORTA 3FCA                    _PORTD 3FCD  
                  _TRISA 3FC2                    _TRISB 3FC3                    _TRISD 3FC5  
                  status 3FD8          __initialization 42BA             __end_of_main 4310  
           __end_of_init 42BA                   ??_main 000B                   ??_init 0001  
          __activetblptr 0003                   _ADACQH 3EF4                   _ADACQL 3EF3  
                 _ADRESH 3EF0                   _ADRESL 3EEF                   _ADPREH 3EF7  
                 _ADPREL 3EF6                   _ANSELA 3A40                   _ANSELB 3A50  
                 _ANSELD 3A70             ??_ADC_Random 0001                   i2u8_40 42FC  
                 i2u8_41 42F8                   isa$std 0001       __end_of_ADC_Random 42EC  
              ?_ADC_Test 0001             __mediumconst 0000               __accesstop 0060  
__end_of__initialization 42CE                ?_INT0_ISR 0001            ___rparam_used 0001  
         __pcstackCOMRAM 0001               ??_ADC_Test 0001               ??_INT0_ISR 0001  
                IVTBASEH 3FD6                  IVTBASEL 3FD5                  IVTBASEU 3FD7  
                __Hparam 0000                  __Lparam 0000             __psmallconst 2000  
                __pcinit 42BA                  __ramtop 2000            ivt0x4008_base 4008  
                __ptext0 4304                  __ptext1 423A                  __ptext2 40B2  
                __ptext3 42D4                  __ptext4 42EC             ADC_Test@Ones 0005  
           ADC_Test@Twos 0006     end_of_initialization 42CE                _PORTBbits 3FCB  
              _PORTDbits 3FCD                _TRISAbits 3FC2      start_initialization 42BA  
            __pbssCOMRAM 000B              __pivt0x4008 4008              __smallconst 2000  
               _ADC_Test 40B2                 _INT0_ISR 42EC                 _IPR1bits 3981  
               _PIE1bits 3991                 _IVTBASEH 3FD6                 _IVTBASEL 3FD5  
               _IVTBASEU 3FD7                 _PIR1bits 39A1        ivt0x4008_undefint 40AC  
         ADC_Test@Errors 0008           ADC_Test@Threes 0007               _ADCON0bits 3EF8  
         ADC_Test@sample 0003              _INTCON0bits 3FD2               _ADC_Random 42D4  
               __Hrparam 0000                 __Lrparam 0000                 _Sequence 000B  
             _ANSELAbits 3A40                 isa$xinst 0000            ADC_Test@Zeros 0004  
          ADC_Test@tests 0009                 intlevel2 0000              ?_ADC_Random 0001  
